{"version":3,"sources":["webpack:///bundle.js","webpack:///webpack/bootstrap 647b5b573856d1906e18","webpack:///./src/main/webapp/resources/js/request-handler/requestManagerService.js","webpack:///./src/main/webapp/resources/js/config/configService.js","webpack:///./src/main/webapp/resources/js/response/alertService.js","webpack:///./src/main/webapp/resources/js/offer/offer-list/offerManagerService.js","webpack:///./src/main/webapp/resources/js/main-controller/mainController.js","webpack:///./src/main/webapp/resources/js/account/account-signup/ngAccountCreationDirective.js","webpack:///./src/main/webapp/resources/js/account/account-signup/ngAccountUpdateDirective.js","webpack:///./src/main/webapp/resources/js/account/account-signup/pwdCheck.js","webpack:///./src/main/webapp/resources/js/account/account-login/ngAccountLoginDirective.js","webpack:///./src/main/webapp/resources/js/account/account-logout/ngAccountLogoutDirective.js","webpack:///./src/main/webapp/resources/js/offer/offer-list/ngOfferListDirective.js","webpack:///./src/main/webapp/resources/js/offer/offer-list/ngPromotionListDirective.js","webpack:///./src/main/webapp/resources/js/offer/offer-specifications/ngOfferSpecifications.js","webpack:///./src/main/webapp/resources/js/header-display/tutorial/ngQuickTutorial.js","webpack:///./src/main/webapp/resources/js/footer/ngFooterDirective.js","webpack:///./src/main/webapp/resources/js/offer/offer-specifications/offer-comments/ngOfferComments.js","webpack:///./src/main/webapp/resources/js/offer/offer-specifications/offer-comments/ngOfferCommentsQuotes.js","webpack:///./src/main/webapp/resources/js/offer/offer-creation/ngOfferCreationDirective.js","webpack:///./src/main/webapp/resources/js/offer/offer-creation/ngOfferUpdateDirective.js","webpack:///./src/main/webapp/resources/js/offer/offer-creation/ngCompanyManagerDirective.js","webpack:///./src/main/webapp/resources/js/offer/offer-creation/ngOfferCategoryManagerDirective.js","webpack:///./src/main/webapp/resources/js/offer/offer-filter/ngOfferFilterDirective.js","webpack:///./src/main/webapp/resources/js/header-display/ngHeadDisplayDirective.js","webpack:///./src/main/webapp/resources/js/header-display/ngHeadAccountAndOfferManagementDirective.js","webpack:///./src/main/webapp/resources/js/header-display/ngMainSlogan.js","webpack:///./src/main/webapp/resources/js/uploader/ngImageUploadDirective.js","webpack:///./src/main/webapp/resources/js/response/ngResponseFromServer.js","webpack:///./src/main/webapp/resources/js/social/ngSocialMediaDirective.js","webpack:///./src/main/webapp/resources/js/error/ngRedirectComponents.js","webpack:///./src/main/webapp/resources/js/account/password-forgotten/ngPasswordForgottenDirective.js","webpack:///./src/main/webapp/resources/sass/loader.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","requestManager","angular","service","$http","csrfToken","requestControllerService","initMainController","$","attr","makePostCall","data","params","url","_csrf","method","headers","Content-Type","X-CSRF-TOKEN","getActualToken","configManager","configService","GET_OFFERS_ENDPOINT","GET_HOTTEST_OFFERS_ENDPOINT","GET_OFFER_ENDPOINT","CREATE_OFFER_ENDPOINT","UPDATE_OFFER_ENDPOINT","EXPIRE_OFFER_ENDPOINT","CREATE_ACCOUNT_ENDPOINT","UPDATE_ACCOUNT_ENDPOINT","GET_ACCOUNT_DETAILS_ENDPOINT","GET_COMPANIES_ENDPOINT","GET_OFFER_CATEGORIES_ENDPOINT","POSITIVE_FEEDBACK_ENDPOINT","NEGATIVE_FEEDBACK_ENDPOINT","CREATE_COMMENT_ENDPOINT","QUOTE_COMMENT_ENDPOINT","GET_FILTERED_ENDPOINT","REQUEST_PASSWORD_UPDATE","REQUEST_PASSWORD","TUTORIAL_COOKIE","LAW_COOKIE","IMAGE_MAX_SIZE","getEndpoint","key","configMap","get.offers","get.hottest.offers","get.offer","create.offer","update.offer","expire.offer","create.account","update.account","get.account.details","get.companies","get.offer.categories","positive.feedback","negative.feedback","create.comment","quote.comment","get.filtered.offers","password.forgotten","password.forgotten.request","max.image.size","tutorial.cookie","law.cookie","alertManager","$rootScope","alertService","defaultMessage","isAllOk","code","sendErrorMessage","theResponse","descriptionEsp","responseResult","$broadcast","sendDefaultErrorMessage","getDefaultMessage","offerManager","offerManagerController","requestNewestOffers","offerFilter","hot","requestMoreOffers","undefined","broadcastOfferList","requestHottestOffers","offerList","lastOffer","callback","errorCallback","number","success","status","config","theOffers","error","showSpecifications","aporlaofertaApp","controller","$scope","keyHandler","$event","keyCode","directive","link","scope","element","msg","ngConfirmClick","clickAction","confirmedClick","bind","event","window","confirm","$eval","time","Date","getTime","document","body","minute","refresh","location","reload","setTimeout","flowFactoryProvider","defaults","target","permanentErrors","maxChunkRetries","chunkRetryInterval","simultaneousUploads","singleFile","restrict","templateUrl","overheadDisplay","customCloseCallback","displayCallback","vcRecaptchaService","theUser","widgetId","publicKey","disableNickname","passwordUpdateRequired","validMail","validPassword","createAccount","getResponse","displayErrorMessageAndDisplayAccount","oldPassword","processing","recaptcha","processAccountResponse","accountDefaultError","userPassword2","restartRecaptcha","accountError","customMessage","setWidgetId","http","copy","getUserDetails","resetPassword","userPassword","require","elem","attrs","ctrl","firstPassword","pwCheck","add","on","$apply","v","val","$setValidity","requestPassword","userEmail","accountUpdate","profileOptions","text","value","defaultProfileModel","profileModel","$watch","userAvatar","formSubmit","logoutForm","submit","$on","args","getElementById","defaultList","moreOffersLoading","showMoreOffers","isCategorySelected","selectedcategory","concat","initialiseScrollyButtons","scrolly","speed","parsePrice","price","toString","replace","shareUrl","shareText","appliedOfferFilters","displayTutorialModal","theOffer","sharePrefix","sharePrice","commentsCustomCloseCallback","votePositive","offerId","sendMessageAndShowSpecifications","sendDefaultErrorMessageAndShowSpecifications","voteNegative","feedback","updateOffer","expireOffer","resetValues","offerCreationError","customCallback","$element","$cookies","hideTutorial","get","put","theComments","$filter","quoteActionEnable","qComment","comment","getQuotedComment","comments","quoteAction","isQuoteActionEnabled","writeComment","offer","quoteComment","quotedComment","message","restartCommentTexts","updateViewAndCloseCallback","commentText","description","resetCategory","createOffer","parseOffer","originalPrice","parseFloat","e","finalPrice","bigDecimalsOnly","brandNewCompany","resetCompany","isCompanyDefined","offerCompany","selectedcompany","offerCategory","selectionPerformed","reset","offerCompanies","populateCompanyList","searchCompanyChange","companyName","selectedItemChange","company","searchCompany","querySearch","length","filter","createFilterFor","lowercaseQuery","lowercase","indexOf","includeAll","offerCategories","populateAllCategories","push","onCategoryChange","category","selection","displayFilterContent","previousCategory","requestFilterApply","searchCriteriaChanged","cleanFilters","expired","dateRange","displayFilterContents","specificOffer","overheadVisible","noAccounts","$offerManager","$timeout","fullscreen","displayLogin","setDefaultVisibility","displayAccountLogin","displaySignup","displayAccountCreation","displayAccountUpdateForm","displayAccountUpdate","displayOfferCreate","displayOfferCreation","displayOfferUpdate","displayOfferToBeUpdate","displayOfferDetails","displayOfferSpecifications","displayServerResponse","displayResponseFromServer","displayTutorialDiagram","displayTutorial","closeOverheadDisplay","exec","offerSpecifications","keyDownCode","justCloseOverheadDisplay","checkForErrors","errorMessage","removeClass","$window","$anchorScroll","scrollPosition","this","pageYOffset","toTheTop","faded","finalUrl","alreadyUploadedImage","uploader","displayThumbnail","invalidSize","invalidImage","maxImageSize","fileAdded","file","fileReader","FileReader","onload","img","Image","onerror","displayInvalidImageMessage","width","height","displayInvalidImageSizeMessage","flow","upload","defaultThumbnailView","src","result","readAsDataURL","deleteImage","cancel","changeImage","alreadyUploaded","filesIsUploaded","JSON","parse","handleUploadError","newValue","oldValue","isInvalidThumbnailShown","facebookUrl","twitterUrl","googlePlusUrl","uuid","nick","userNickname","updatePassword","processPasswordResponse"],"mappings":"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","file":"bundle.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t__webpack_require__(1);\n\t__webpack_require__(2);\n\t__webpack_require__(3);\n\t__webpack_require__(4);\n\t__webpack_require__(5);\n\t__webpack_require__(6);\n\t__webpack_require__(7);\n\t__webpack_require__(8);\n\t__webpack_require__(9);\n\t__webpack_require__(10);\n\t__webpack_require__(11);\n\t__webpack_require__(12);\n\t__webpack_require__(13);\n\t__webpack_require__(14);\n\t__webpack_require__(15);\n\t__webpack_require__(16);\n\t__webpack_require__(17);\n\t__webpack_require__(18);\n\t__webpack_require__(19);\n\t__webpack_require__(20);\n\t__webpack_require__(21);\n\t__webpack_require__(22);\n\t__webpack_require__(23);\n\t__webpack_require__(24);\n\t__webpack_require__(25);\n\t__webpack_require__(26);\n\t__webpack_require__(27);\n\t__webpack_require__(28);\n\t__webpack_require__(29);\n\t__webpack_require__(30);\n\tmodule.exports = __webpack_require__(31);\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\tvar requestManager = angular.module('requestManager', []);\r\n\t\r\n\trequestManager.service('requestManager', ['$http',\r\n\t    function ($http) {\r\n\t        var requestControllerService = {};\r\n\t        var csrfToken;\r\n\t        requestControllerService.initMainController = function () {\r\n\t            csrfToken = $(\"meta[name='_csrf']\").attr(\"content\");\r\n\t        };\r\n\t        requestControllerService.makePostCall=function(data, params, url){\r\n\t            params._csrf= csrfToken;\r\n\t            return $http({\r\n\t                method: 'POST',\r\n\t                url: url,\r\n\t                headers: {\r\n\t                    'Content-Type': 'application/json',\r\n\t                    'X-CSRF-TOKEN': csrfToken\r\n\t                },\r\n\t                params: params,\r\n\t                data: data\r\n\t            });\r\n\t        };\r\n\t        requestControllerService.getActualToken=function(){\r\n\t            return csrfToken;\r\n\t        }\r\n\t        requestControllerService.initMainController();\r\n\t        return requestControllerService;\r\n\t    }]);\r\n\t\r\n\t\r\n\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\tvar configManager = angular.module('configService', []);\r\n\t\r\n\tconfigManager.service('configService', [function () {\r\n\t    var configService = {};\r\n\t    var GET_OFFERS_ENDPOINT = \"getOffers\";\r\n\t    var GET_HOTTEST_OFFERS_ENDPOINT = \"getHottestOffers\";\r\n\t    var GET_OFFER_ENDPOINT = \"getOffer\";\r\n\t    var CREATE_OFFER_ENDPOINT = \"createOffer\";\r\n\t    var UPDATE_OFFER_ENDPOINT = \"updateOffer\";\r\n\t    var EXPIRE_OFFER_ENDPOINT = \"expireOffer\";\r\n\t    var CREATE_ACCOUNT_ENDPOINT = \"createUser\";\r\n\t    var UPDATE_ACCOUNT_ENDPOINT = \"updateUser\";\r\n\t    var GET_ACCOUNT_DETAILS_ENDPOINT = \"accountDetails\";\r\n\t    var GET_COMPANIES_ENDPOINT = \"companyList\";\r\n\t    var GET_OFFER_CATEGORIES_ENDPOINT = \"getOfferCategories\";\r\n\t    var POSITIVE_FEEDBACK_ENDPOINT = \"votePositive\";\r\n\t    var NEGATIVE_FEEDBACK_ENDPOINT = \"voteNegative\";\r\n\t    var CREATE_COMMENT_ENDPOINT = \"createComment\";\r\n\t    var QUOTE_COMMENT_ENDPOINT = \"quoteComment\";\r\n\t    var GET_FILTERED_ENDPOINT = \"getFilteredOffers\";\r\n\t    var REQUEST_PASSWORD_UPDATE = \"forgottenPassword\";\r\n\t    var REQUEST_PASSWORD = \"requestForgottenPassword\";\r\n\t    var TUTORIAL_COOKIE = \"aporlaoferta-tut\";\r\n\t    var LAW_COOKIE = \"aporlaoferta-cle\";\r\n\t    var IMAGE_MAX_SIZE = 2000;\r\n\t    configService.getEndpoint = function (key) {\r\n\t        return configMap[key];\r\n\t    };\r\n\t    var configMap = {\r\n\t        'get.offers': GET_OFFERS_ENDPOINT,\r\n\t        'get.hottest.offers': GET_HOTTEST_OFFERS_ENDPOINT,\r\n\t        'get.offer': GET_OFFER_ENDPOINT,\r\n\t        'create.offer': CREATE_OFFER_ENDPOINT,\r\n\t        'update.offer': UPDATE_OFFER_ENDPOINT,\r\n\t        'expire.offer': EXPIRE_OFFER_ENDPOINT,\r\n\t        'create.account': CREATE_ACCOUNT_ENDPOINT,\r\n\t        'update.account': UPDATE_ACCOUNT_ENDPOINT,\r\n\t        'get.account.details': GET_ACCOUNT_DETAILS_ENDPOINT,\r\n\t        'get.companies': GET_COMPANIES_ENDPOINT,\r\n\t        'get.offer.categories': GET_OFFER_CATEGORIES_ENDPOINT,\r\n\t        'positive.feedback': POSITIVE_FEEDBACK_ENDPOINT,\r\n\t        'negative.feedback': NEGATIVE_FEEDBACK_ENDPOINT,\r\n\t        'create.comment': CREATE_COMMENT_ENDPOINT,\r\n\t        'quote.comment': QUOTE_COMMENT_ENDPOINT,\r\n\t        'get.filtered.offers': GET_FILTERED_ENDPOINT,\r\n\t        'password.forgotten': REQUEST_PASSWORD_UPDATE,\r\n\t        'password.forgotten.request': REQUEST_PASSWORD,\r\n\t        'max.image.size': IMAGE_MAX_SIZE,\r\n\t        'tutorial.cookie':TUTORIAL_COOKIE,\r\n\t        'law.cookie':LAW_COOKIE\r\n\t    };\r\n\t    return configService;\r\n\t}]);\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\tvar alertManager = angular.module('alertService', []);\r\n\t\r\n\talertManager.service('alertService', ['$rootScope', function ($rootScope) {\r\n\t    var alertService = {};\r\n\t    var defaultMessage = \"No se ha podido ejecutar la operación\";\r\n\t    alertService.isAllOk = function (data) {\r\n\t        return data.code == 0;\r\n\t    }\r\n\t    alertService.sendErrorMessage = function (data) {\r\n\t        var theResponse = {};\r\n\t        theResponse.descriptionEsp = data;\r\n\t        theResponse.responseResult = \"error\";\r\n\t        $rootScope.$broadcast('serverResponse', theResponse);\r\n\t    };\r\n\t    alertService.sendDefaultErrorMessage = function () {\r\n\t        var theResponse = {};\r\n\t        theResponse.descriptionEsp = alertService.getDefaultMessage();\r\n\t        theResponse.responseResult = \"error\";\r\n\t        $rootScope.$broadcast('serverResponse', theResponse);\r\n\t    }\r\n\t    alertService.getDefaultMessage = function () {\r\n\t        return defaultMessage;\r\n\t        ;\r\n\t    }\r\n\t    return alertService;\r\n\t}]);\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\tvar offerManager = angular.module('offerManager', []);\r\n\t\r\n\tofferManager.service('offerManager', ['$rootScope', 'alertService', 'requestManager', 'configService',\r\n\t    function ($rootScope, alertService, requestManager, configService) {\r\n\t        var offerManagerController = {};\r\n\t        offerManagerController.requestNewestOffers = function (offerFilter) {\r\n\t            offerFilter.hot=false;\r\n\t            offerManagerController.requestMoreOffers(offerFilter, undefined, offerManagerController.broadcastOfferList,\r\n\t                function () {\r\n\t                });\r\n\t        }\r\n\t\r\n\t        offerManagerController.requestHottestOffers = function (offerFilter) {\r\n\t            offerFilter.hot=true;\r\n\t            offerManagerController.requestMoreOffers(offerFilter, undefined, offerManagerController.broadcastOfferList,\r\n\t                function () {\r\n\t                });\r\n\t        }\r\n\t\r\n\t        offerManagerController.broadcastOfferList = function (offerList) {\r\n\t            $rootScope.$broadcast('offerList', offerList);\r\n\t        }\r\n\t\r\n\t        offerManagerController.requestMoreOffers = function (offerFilter, lastOffer, callback, errorCallback) {\r\n\t            requestManager.makePostCall(offerFilter, {'number': lastOffer}, configService.getEndpoint('get.filtered.offers'))\r\n\t                .success(function (data, status, headers, config) {\r\n\t                    callback(data.theOffers);\r\n\t                    //$rootScope.$broadcast('offerList', data.theOffers);\r\n\t                }).error(function (data, status, headers, config) {\r\n\t                    alertService.sendDefaultErrorMessage();\r\n\t                    errorCallback();\r\n\t                });\r\n\t        }\r\n\t        offerManagerController.showSpecifications = function (id) {\r\n\t            requestManager.makePostCall({}, {'id': id}, configService.getEndpoint('get.offer'))\r\n\t                .success(function (data, status, headers, config) {\r\n\t                    $rootScope.$broadcast('offerSpecifications', data.theOffers);\r\n\t                }).error(function (data, status, headers, config) {\r\n\t                    alertService.sendDefaultErrorMessage();\r\n\t                });\r\n\t        }\r\n\t        return offerManagerController;\r\n\t    }]);\r\n\t\r\n\t\r\n\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\n\t/**\r\n\t * Created by hasiermetal on 16/03/15.\r\n\t */\r\n\taporlaofertaApp = angular.module('aPorLaOferta', [\r\n\t    'angular.filter',\r\n\t    'requestManager',\r\n\t    'alertService',\r\n\t    'configService',\r\n\t    'flow',\r\n\t    'ngAnimate',\r\n\t    'vcRecaptcha',\r\n\t    'offerManager',\r\n\t    'pwCheckModule',\r\n\t    'ngMaterial',\r\n\t    'ngMessages',\r\n\t    'ngDropdowns',\r\n\t    'truncate',\r\n\t    'angular-cookie-law',\r\n\t    'ngCookies',\r\n\t    'slick'\r\n\t]);\r\n\t\r\n\t//main controller\r\n\taporlaofertaApp.controller('APorLaOfertaController', ['$scope', '$rootScope', function ($scope, $rootScope) {\r\n\t    $scope.keyHandler = function ($event) {\r\n\t        $rootScope.$broadcast('keydownControl', $event.keyCode);\r\n\t    };\r\n\t}]);\r\n\t\r\n\taporlaofertaApp.directive('ngConfirmClick', [\r\n\t    function () {\r\n\t        return {\r\n\t            link: function (scope, element, attr) {\r\n\t                var msg = attr.ngConfirmClick || \"\";\r\n\t                var clickAction = attr.confirmedClick;\r\n\t                element.bind('click', function (event) {\r\n\t                    if (window.confirm(msg)) {\r\n\t                        scope.$eval(clickAction)\r\n\t                    }\r\n\t                });\r\n\t\r\n\t                scope.time = new Date().getTime();\r\n\t                angular.element(document.body).bind(\"mousemove keypress\", function () {\r\n\t                    scope.time = new Date().getTime();\r\n\t                });\r\n\t\r\n\t                scope.minute=60000;\r\n\t                scope.refresh = function () {\r\n\t                    if (new Date().getTime() - scope.time >= 20*scope.minute)\r\n\t                        window.location.reload();\r\n\t                    else\r\n\t                        setTimeout(scope.refresh, 10*scope.minute);\r\n\t                }\r\n\t\r\n\t                setTimeout(scope.refresh, 10*scope.minute);\r\n\t            }\r\n\t        };\r\n\t    }]);\r\n\t\r\n\taporlaofertaApp.config(['flowFactoryProvider', function (flowFactoryProvider) {\r\n\t    flowFactoryProvider.defaults = {\r\n\t        target: 'uploadImage',\r\n\t        permanentErrors: [404, 500, 501],\r\n\t        maxChunkRetries: 1,\r\n\t        chunkRetryInterval: 5000,\r\n\t        simultaneousUploads: 4,\r\n\t        singleFile: true\r\n\t    };\r\n\t\r\n\t}]);\n\n/***/ },\n/* 6 */\n/***/ function(module, exports) {\n\n\t/**\r\n\t * Created by hasiermetal on 16/03/14.\r\n\t */\r\n\taporlaofertaApp\r\n\t    .directive('ngAccountCreation', function () {\r\n\t        return {\r\n\t            restrict: 'A',\r\n\t            templateUrl: 'resources/js/account/account-signup/createAccount.html',\r\n\t            scope: {\r\n\t                overheadDisplay: '=',\r\n\t                customCloseCallback: '=',\r\n\t                displayCallback: '='\r\n\t            },\r\n\t            controller: ['$scope', 'requestManager', 'configService', 'vcRecaptchaService', 'alertService',\r\n\t                function ($scope, requestManager, configService, vcRecaptchaService, alertService) {\r\n\t                    $scope.theUser = {};\r\n\t                    $scope.widgetId = null;\r\n\t                    $scope.publicKey = \"6LdqHQoTAAAAAAht2VhkrLGU26eBOjL-nK9zXxcn\";\r\n\t                    $scope.disableNickname = false;\r\n\t                    $scope.passwordUpdateRequired = true;\r\n\t                    $scope.validMail = /^[a-z]+[a-z0-9._]+@[a-z]+\\.[a-z.]{2,5}$/;\r\n\t                    $scope.validPassword= /^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d!$%@#£€*?&]{8,}$/;\r\n\t                    $scope.createAccount = function (theUser) {\r\n\t                        if (vcRecaptchaService.getResponse($scope.widgetId) === \"\") {\r\n\t                            $scope.displayErrorMessageAndDisplayAccount();\r\n\t                        }\r\n\t                        else {\r\n\t                            delete $scope.theUser.oldPassword;\r\n\t                            $scope.processing = true;\r\n\t                            requestManager.makePostCall(theUser, {recaptcha: vcRecaptchaService.getResponse($scope.widgetId)}, configService.getEndpoint('create.account'))\r\n\t                                .success(function (data, status, headers, config) {\r\n\t                                    $scope.processAccountResponse(data);\r\n\t                                }).error(function (data, status, headers, config) {\r\n\t                                    $scope.accountDefaultError();\r\n\t                                }).finally(function () {\r\n\t                                    $scope.processing = false;\r\n\t                                });\r\n\t                            $scope.theUser = {};\r\n\t                            $scope.userPassword2 = \"\";\r\n\t                            //$scope.overheadDisplay = false;\r\n\t                        }\r\n\t                    }\r\n\t                    $scope.displayErrorMessageAndDisplayAccount = function () {\r\n\t                        alertService.sendErrorMessage(\"Por favor, haga click en el captcha para demostrar que no es un robot\");\r\n\t                        $scope.restartRecaptcha();\r\n\t                        $scope.customCloseCallback = $scope.displayCallback;\r\n\t                    }\r\n\t                    $scope.processAccountResponse = function (data) {\r\n\t                        if (!alertService.isAllOk(data)) {\r\n\t                            $scope.accountError(data.descriptionEsp);\r\n\t                        }\r\n\t                        else {\r\n\t                            alertService.sendErrorMessage(data.descriptionEsp);\r\n\t                            $scope.customCloseCallback = false;\r\n\t                        }\r\n\t                        $scope.restartRecaptcha();\r\n\t                    }\r\n\t                    $scope.restartRecaptcha = function () {\r\n\t                        vcRecaptchaService.reload($scope.widgetId);\r\n\t                    }\r\n\t\r\n\t                    $scope.accountDefaultError = function () {\r\n\t                        alertService.sendDefaultErrorMessage();\r\n\t                        vcRecaptchaService.reload($scope.widgetId);\r\n\t                        $scope.customCloseCallback = $scope.displayCallback;\r\n\t                    }\r\n\t\r\n\t                    $scope.accountError = function (customMessage) {\r\n\t                        alertService.sendErrorMessage(customMessage);\r\n\t                        $scope.restartRecaptcha();\r\n\t                        $scope.customCloseCallback = $scope.displayCallback;\r\n\t                    };\r\n\t\r\n\t                    $scope.setWidgetId = function (widgetId) {\r\n\t                        $scope.widgetId = widgetId;\r\n\t                    };\r\n\t                }]\r\n\t        }\r\n\t    });\n\n/***/ },\n/* 7 */\n/***/ function(module, exports) {\n\n\t/**\r\n\t * Created by hasiermetal on 22/06/15.\r\n\t */\r\n\taporlaofertaApp\r\n\t    .directive('ngAccountUpdate', function () {\r\n\t        return {\r\n\t            restrict: 'A',\r\n\t            templateUrl: 'resources/js/account/account-signup/createAccount.html',\r\n\t            scope: {\r\n\t                overheadDisplay: '=',\r\n\t                customCloseCallback: '=',\r\n\t                displayCallback: '='\r\n\t            },\r\n\t            controller: ['$scope', 'vcRecaptchaService', 'alertService', '$http', 'requestManager', 'configService', '$rootScope',\r\n\t                function ($scope, vcRecaptchaService, alertService, http, requestManager, configService, $rootScope) {\r\n\t                    $scope.disableNickname = true;\r\n\t                    $scope.theUser = {};\r\n\t                    $scope.widgetId = null;\r\n\t                    $scope.passwordUpdateRequired = false;\r\n\t                    $scope.validMail = /^[a-z]+[a-z0-9._]+@[a-z]+\\.[a-z.]{2,5}$/;\r\n\t                    $scope.validPassword = /^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d!$%@#£€*?&]{8,}$/;\r\n\t                    $scope.publicKey = \"6LdqHQoTAAAAAAht2VhkrLGU26eBOjL-nK9zXxcn\";\r\n\t                    $scope.createAccount = function (theUser) {\r\n\t                        if (vcRecaptchaService.getResponse($scope.widgetId) === \"\") {\r\n\t                            $scope.displayErrorMessageAndDisplayAccount();\r\n\t                        }\r\n\t                        else {\r\n\t                            $scope.processing = true;\r\n\t                            requestManager.makePostCall(theUser, {recaptcha: vcRecaptchaService.getResponse($scope.widgetId)}, configService.getEndpoint('update.account'))\r\n\t                                .success(function (data, status, headers, config) {\r\n\t                                    if ($scope.processAccountResponse(data)) {\r\n\t                                        $rootScope.$broadcast('userAvatar', angular.copy(theUser));\r\n\t                                    }\r\n\t                                }).error(function (data, status, headers, config) {\r\n\t                                    $scope.accountDefaultError();\r\n\t                                })\r\n\t                                .finally(function () {\r\n\t                                    $scope.processing = false;\r\n\t                                    $scope.getUserDetails();\r\n\t                                    $scope.passwordUpdateRequired = false;\r\n\t                                });\r\n\t                            //$scope.theUser = {};\r\n\t                            //$scope.overheadDisplay = false;\r\n\t                        }\r\n\t                    }\r\n\t                    $scope.getUserDetails = function () {\r\n\t                        requestManager.makePostCall({}, {}, configService.getEndpoint('get.account.details'))\r\n\t                            .success(function (data, status, headers, config) {\r\n\t                                $scope.theUser = data;\r\n\t                            }).error(function (data, status, headers, config) {\r\n\t                                alertService.sendErrorMessage(\"No se ha podido obtener la información del usuario\");\r\n\t                                $scope.customCloseCallback = false;\r\n\t                            });\r\n\t                    }\r\n\t                    $scope.getUserDetails();\r\n\t\r\n\t                    $scope.resetPassword=function(){\r\n\t                        $scope.theUser.oldPassword=null;\r\n\t                        $scope.theUser.userPassword=null;\r\n\t                        $scope.userPassword2=null;\r\n\t                    }\r\n\t\r\n\t                    $scope.displayErrorMessageAndDisplayAccount = function () {\r\n\t                        alertService.sendErrorMessage(\"Por favor, haga click en el captcha para demostrar que no es un robot\");\r\n\t                        $scope.restartRecaptcha();\r\n\t                        $scope.customCloseCallback = $scope.displayCallback;\r\n\t                    }\r\n\t                    $scope.processAccountResponse = function (data) {\r\n\t                        if (!alertService.isAllOk(data)) {\r\n\t                            $scope.accountError(data.descriptionEsp);\r\n\t                        }\r\n\t                        else {\r\n\t                            alertService.sendErrorMessage(data.descriptionEsp);\r\n\t                            return true;\r\n\t                        }\r\n\t                        $scope.restartRecaptcha();\r\n\t                        return false;\r\n\t                    }\r\n\t\r\n\t                    $scope.accountDefaultError = function () {\r\n\t                        alertService.sendDefaultErrorMessage();\r\n\t                        $scope.restartRecaptcha();\r\n\t                        $scope.customCloseCallback = $scope.displayCallback;\r\n\t                    }\r\n\t\r\n\t                    $scope.accountError = function (customMessage) {\r\n\t                        alertService.sendErrorMessage(customMessage);\r\n\t                        $scope.restartRecaptcha();\r\n\t                        $scope.customCloseCallback = $scope.displayCallback;\r\n\t                    }\r\n\t                    $scope.setWidgetId = function (widgetId) {\r\n\t                        $scope.widgetId = widgetId;\r\n\t                    };\r\n\t                    $scope.restartRecaptcha = function () {\r\n\t                        vcRecaptchaService.reload($scope.widgetId);\r\n\t                    }\r\n\t                }]\r\n\t        }\r\n\t    });\n\n/***/ },\n/* 8 */\n/***/ function(module, exports) {\n\n\tangular.module('pwCheckModule', [])\r\n\t    .directive('pwCheck', [function () {\r\n\t        return {\r\n\t            require: 'ngModel',\r\n\t            link: function (scope, elem, attrs, ctrl) {\r\n\t                var firstPassword = '#' + attrs.pwCheck;\r\n\t                elem.add(firstPassword).on('keyup', function () {\r\n\t                    scope.$apply(function () {\r\n\t                        var v = elem.val()===$(firstPassword).val();\r\n\t                        ctrl.$setValidity('pwmatch', v);\r\n\t                    });\r\n\t                });\r\n\t            }\r\n\t        }\r\n\t    }]);\n\n/***/ },\n/* 9 */\n/***/ function(module, exports) {\n\n\t/**\r\n\t * Created by hasiermetal on 16/03/14.\r\n\t */\r\n\taporlaofertaApp\r\n\t    .directive('ngAccountLogin', function () {\r\n\t        return {\r\n\t            restrict: 'A',\r\n\t            templateUrl: 'view/login.jsp',\r\n\t            controller: ['$scope', 'requestManager', 'configService', 'alertService',\r\n\t                function ($scope, requestManager, configService, alertService) {\r\n\t                    $scope.validMail = /^[a-z]+[a-z0-9._]+@[a-z]+\\.[a-z.]{2,5}$/;\r\n\t                    $scope.requestPassword = function (userEmail) {\r\n\t                        $scope.processing = true;\r\n\t\r\n\t                        requestManager.makePostCall(userEmail, {userEmail: userEmail}, configService.getEndpoint('password.forgotten.request'))\r\n\t                            .success(function (data, status, headers, config) {\r\n\t                                $scope.processAccountResponse(data);\r\n\t                            }).error(function (data, status, headers, config) {\r\n\t                                $scope.accountDefaultError();\r\n\t                            }).finally(function () {\r\n\t                                $scope.processing = false;\r\n\t                            });\r\n\t                    }\r\n\t                    $scope.processAccountResponse = function (data) {\r\n\t                        alertService.sendErrorMessage(data.descriptionEsp);\r\n\t                        if ($scope.restartRecaptcha) {\r\n\t                            $scope.restartRecaptcha();\r\n\t                        }\r\n\t                    }\r\n\t                    $scope.accountDefaultError = function () {\r\n\t                        alertService.sendDefaultErrorMessage();\r\n\t                    }\r\n\t\r\n\t                }]\r\n\t        }\r\n\t    });\n\n/***/ },\n/* 10 */\n/***/ function(module, exports) {\n\n\t/**\r\n\t * Created by hasiermetal on 16/03/14.\r\n\t */\r\n\taporlaofertaApp\r\n\t    .directive('ngAccountLogout', function () {\r\n\t        return {\r\n\t            restrict: 'A',\r\n\t            templateUrl: 'resources/js/account/account-logout/profile.jsp',\r\n\t            scope: {\r\n\t                accountUpdate: '='\r\n\t            },\r\n\t            controller: ['$scope', 'alertService', 'requestManager', 'configService', function ($scope, alertService, requestManager, configService) {\r\n\t                $scope.profileOptions = [\r\n\t                    {text: 'Actualizar perfil', value: 'accountUpdate'},\r\n\t                    {text: 'Cerrar sesión', value: 'formSubmit'}\r\n\t                ];\r\n\t                $scope.defaultProfileModel = {\r\n\t                    text: \"Opciones\"\r\n\t                };\r\n\t                $scope.profileModel = angular.copy($scope.defaultProfileModel);\r\n\t\r\n\t                $scope.$watch('profileModel', function () {\r\n\t                    if ($scope.profileModel.text !== \"Opciones\") {\r\n\t                        $scope[$scope.profileModel.value]();\r\n\t                        $scope.profileModel = angular.copy($scope.defaultProfileModel);\r\n\t                    }\r\n\t                });\r\n\t\r\n\t                $scope.getUserDetails = function () {\r\n\t                    requestManager.makePostCall({}, {}, configService.getEndpoint('get.account.details'))\r\n\t                        .success(function (data, status, headers, config) {\r\n\t                            $scope.userAvatar = data.userAvatar;\r\n\t                        }).error(function (data, status, headers, config) {\r\n\t                            alertService.sendErrorMessage(\"No se ha podido obtener la información del usuario\");\r\n\t                            $scope.customCloseCallback = false;\r\n\t                        });\r\n\t                }\r\n\t\r\n\t\r\n\t                $scope.getUserDetails();\r\n\t\r\n\t                $scope.formSubmit = function () {\r\n\t                    $scope.logoutForm.submit();\r\n\t                }\r\n\t\r\n\t                $scope.$on('userAvatar', function (event, args) {\r\n\t                    $scope.userAvatar = args.userAvatar;\r\n\t                });\r\n\t\r\n\t                $scope.formSubmit = function () {\r\n\t                    document.getElementById(\"logoutForm\").submit();\r\n\t                }\r\n\t            }]\r\n\t        }\r\n\t    });\r\n\n\n/***/ },\n/* 11 */\n/***/ function(module, exports) {\n\n\t/**\r\n\t * Created by hasiermetal on 16/03/14.\r\n\t */\r\n\taporlaofertaApp\r\n\t    .directive('ngOfferList', function () {\r\n\t        return {\r\n\t            restrict: 'A',\r\n\t            templateUrl: 'resources/js/offer/offer-list/offerList.html',\r\n\t            scope: {\r\n\t                defaultList: '='\r\n\t            },\r\n\t            controller: ['$scope', 'offerManager',\r\n\t                function ($scope, offerManager) {\r\n\t                    $scope.offerList = [];\r\n\t                    $scope.moreOffersLoading = false;\r\n\t\r\n\t                    $scope.showMoreOffers = function (lastOffer) {\r\n\t                        $scope.moreOffersLoading = true;\r\n\t                        $scope.offerFilter.hot = $scope.defaultList === 'hottestOffers';\r\n\t                        if (!$scope.isCategorySelected()) {\r\n\t                            $scope.offerFilter.selectedcategory = \"\";\r\n\t                        }\r\n\t                        offerManager.requestMoreOffers($scope.offerFilter, lastOffer,\r\n\t                            function (data) {\r\n\t                                $scope.offerList = $scope.offerList.concat(data);\r\n\t                                $scope.moreOffersLoading = false;\r\n\t                            }, function () {\r\n\t                                $scope.moreOffersLoading = false;\r\n\t                            });\r\n\t                    }\r\n\t                    $scope.$on('offerList', function (event, args) {\r\n\t                        $scope.offerList = args;\r\n\t                    })\r\n\t\r\n\t                    $scope.showSpecifications = function (id) {\r\n\t                        offerManager.showSpecifications(id);\r\n\t                    }\r\n\t                    $scope.initialiseScrollyButtons = function () {\r\n\t                        $('.scrolly')\r\n\t                            .scrolly({\r\n\t                                speed: 1500\r\n\t                            });\r\n\t                    }\r\n\t                    $scope.parsePrice = function (price) {\r\n\t                        if(price){\r\n\t                            return price.toString().replace(/\\./, ',');\r\n\t                        }\r\n\t                    }\r\n\t                    $scope.isCategorySelected = function () {\r\n\t                        return $scope.offerFilter.selectedcategory != \"\"\r\n\t                            && $scope.offerFilter.selectedcategory != null\r\n\t                            && $scope.offerFilter.selectedcategory != undefined\r\n\t                            && $scope.offerFilter.selectedcategory != \"CATEGORÍA\";\r\n\t                    };\r\n\t                    $scope.initialiseScrollyButtons();\r\n\t                }]\r\n\t        }\r\n\t    });\n\n/***/ },\n/* 12 */\n/***/ function(module, exports) {\n\n\t/**\r\n\t * Created by hasiermetal on 16/03/14.\r\n\t */\r\n\taporlaofertaApp\r\n\t    .directive('ngPromotionList', function () {\r\n\t        return {\r\n\t            restrict: 'A',\r\n\t            templateUrl: 'resources/js/offer/offer-list/promotionList.html',\r\n\t            controller: ['$scope', '$rootScope', 'offerManager',\r\n\t                function ($scope, $rootScope, offerManager) {\r\n\t                    $scope.shareUrl = \"www.aporlaoferta.com\";\r\n\t                    $scope.shareText = $(\"meta[property='og:description']\").attr(\"content\");\r\n\t                    $scope.defaultList = \"\";\r\n\t                    $scope.appliedOfferFilters = {};\r\n\t\r\n\t                    $scope.$on('appliedOfferFilters', function (event, args) {\r\n\t                        $scope.appliedOfferFilters = args;\r\n\t                    });\r\n\t\r\n\t                    $scope.requestNewestOffers = function () {\r\n\t                        offerManager.requestNewestOffers($scope.appliedOfferFilters);\r\n\t                        $scope.defaultList = 'newestOffers';\r\n\t                    }\r\n\t\r\n\t                    $scope.requestHottestOffers = function () {\r\n\t                        offerManager.requestHottestOffers($scope.appliedOfferFilters);\r\n\t                        $scope.defaultList = 'hottestOffers';\r\n\t                    }\r\n\t\r\n\t                    $scope.displayTutorialModal = function () {\r\n\t                        $rootScope.$broadcast('displayTutorial');\r\n\t                    }\r\n\t                }]\r\n\t        }\r\n\t    });\n\n/***/ },\n/* 13 */\n/***/ function(module, exports) {\n\n\t/**\r\n\t * Created by hasiermetal on 11/06/15.\r\n\t */\r\n\taporlaofertaApp\r\n\t    .directive('ngOfferSpecifications', function () {\r\n\t        return {\r\n\t            restrict: 'A',\r\n\t            templateUrl: 'resources/js/offer/offer-specifications/offerSpecifications.jsp',\r\n\t            scope: {\r\n\t                theOffer: '=',\r\n\t                customCloseCallback: '='\r\n\t            },\r\n\t            controller: ['offerManager', 'alertService', '$scope', '$rootScope', 'requestManager', 'configService',\r\n\t                function (offerManager, alertService, $scope, $rootScope, requestManager, configService) {\r\n\t                    $scope.sharePrefix = \"www.aporlaoferta.com/start?sh=\";\r\n\t                    $scope.sharePrice = \"€: \";\r\n\t                    $scope.commentsCustomCloseCallback = {};\r\n\t                    $scope.appliedOfferFilters = {};\r\n\t\r\n\t                    $scope.votePositive = function (id) {\r\n\t                        requestManager.makePostCall({}, {'offerId': id}, configService.getEndpoint('positive.feedback'))\r\n\t                            .success(function (data, status, headers, config) {\r\n\t                                $scope.sendMessageAndShowSpecifications(data, id, 'offerPositiveVote');\r\n\t                            }).error(function (data, status, headers, config) {\r\n\t                                $scope.sendDefaultErrorMessageAndShowSpecifications(id);\r\n\t                            });\r\n\t                    }\r\n\t                    $scope.voteNegative = function (id) {\r\n\t                        requestManager.makePostCall({}, {'offerId': id}, configService.getEndpoint('negative.feedback'))\r\n\t                            .success(function (data, status, headers, config) {\r\n\t                                $scope.sendMessageAndShowSpecifications(data, id, 'offerNegativeVote');\r\n\t                            }).error(function (data, status, headers, config) {\r\n\t                                $scope.sendDefaultErrorMessageAndShowSpecifications(id);\r\n\t                            });\r\n\t                    }\r\n\t                    $scope.sendMessageAndShowSpecifications = function (data, id, feedback) {\r\n\t                        if (!alertService.isAllOk(data)) {\r\n\t                            alertService.sendErrorMessage(data.descriptionEsp);\r\n\t                            $scope.customCloseCallback = function () {\r\n\t                                offerManager.showSpecifications(id);\r\n\t                            }\r\n\t                        }\r\n\t                        else {\r\n\t                            $scope.theOffer[0][feedback] = $scope.theOffer[0][feedback] + 1;\r\n\t                        }\r\n\t                    }\r\n\t                    $scope.sendDefaultErrorMessageAndShowSpecifications = function (id) {\r\n\t                        alertService.sendDefaultErrorMessage();\r\n\t                        $scope.customCloseCallback = function () {\r\n\t                            offerManager.showSpecifications(id);\r\n\t                        }\r\n\t                    }\r\n\t                    $scope.updateOffer = function (theOffer) {\r\n\t                        $rootScope.$broadcast('updateTheOffer', angular.copy(theOffer));\r\n\t                    }\r\n\t                    $scope.expireOffer = function (theOffer) {\r\n\t                        requestManager.makePostCall({}, {'id': theOffer.id}, configService.getEndpoint('expire.offer'))\r\n\t                            .success(function (data, status, headers, config) {\r\n\t                                if (!alertService.isAllOk(data)) {\r\n\t                                    $scope.offerCreationError(data.descriptionEsp);\r\n\t                                }\r\n\t                                else {\r\n\t                                    alertService.sendErrorMessage(data.descriptionEsp);\r\n\t                                    $scope.resetValues();\r\n\t                                    $scope.customCloseCallback = function () {\r\n\t                                        offerManager.requestNewestOffers($scope.appliedOfferFilters);\r\n\t                                    }\r\n\t                                }\r\n\t                            }).error(function (data, status, headers, config) {\r\n\t                                $scope.offerCreationError(alertService.getDefaultMessage());\r\n\t                            });\r\n\t                    }\r\n\t\r\n\t                    $scope.parsePrice = function (price) {\r\n\t                        if(price){\r\n\t                        return price.toString().replace(/\\./, ',');\r\n\t                        }\r\n\t                    }\r\n\t\r\n\t                    $scope.$on('commentsCustomCloseCallback', function (event, args) {\r\n\t                        var customCallback = args;\r\n\t                        $scope.customCloseCallback = customCallback;\r\n\t                    });\r\n\t\r\n\t                    $scope.$on('appliedOfferFilters', function (event, args) {\r\n\t                        $scope.appliedOfferFilters = args;\r\n\t                    });\r\n\t                }]\r\n\t        }\r\n\t    });\n\n/***/ },\n/* 14 */\n/***/ function(module, exports) {\n\n\t/**\r\n\t * Created by hasiermetal on 08/08/16.\r\n\t */\r\n\taporlaofertaApp\r\n\t    .directive('ngQuickTutorial', function () {\r\n\t        return {\r\n\t            restrict: 'A',\r\n\t            templateUrl: 'resources/js/header-display/tutorial/quickTutorial.jsp',\r\n\t            controller: ['$scope', '$element', '$rootScope', '$cookies', 'configService',\r\n\t                function ($scope, $element, $rootScope, $cookies, configService) {\r\n\t\r\n\t                    $scope.hideTutorial = function () {\r\n\t                        if ($cookies.get(configService.getEndpoint('aporlaoferta_cle')) === 'accepted') {\r\n\t                            $cookies.put(configService.getEndpoint('aporlaoferta_tutorial'), true);\r\n\t                        }\r\n\t                        $rootScope.$broadcast('closeResponse');\r\n\t                    };\r\n\t                }]\r\n\t        }\r\n\t    });\n\n/***/ },\n/* 15 */\n/***/ function(module, exports) {\n\n\t/**\r\n\t * Created by hasiermetal on 14/08/16.\r\n\t */\r\n\taporlaofertaApp\r\n\t    .directive('ngFooter', function () {\r\n\t        return {\r\n\t            restrict: 'A',\r\n\t            templateUrl: 'resources/js/footer/footer.jsp',\r\n\t            controller: ['$scope', '$rootScope',\r\n\t                function ($scope, $rootScope) {\r\n\t                    $scope.displayTutorialModal = function () {\r\n\t                        $rootScope.$broadcast('displayTutorial');\r\n\t                    }\r\n\t                }]\r\n\t        }\r\n\t    });\n\n/***/ },\n/* 16 */\n/***/ function(module, exports) {\n\n\t/**\r\n\t * Created by hasiermetal on 11/06/15.\r\n\t */\r\n\taporlaofertaApp\r\n\t    .directive('ngOfferComments', function () {\r\n\t        return {\r\n\t            restrict: 'A',\r\n\t            templateUrl: 'resources/js/offer/offer-specifications/offer-comments/' +\r\n\t            'offerComments.jsp',\r\n\t            scope: {\r\n\t                theComments: '=',\r\n\t                theOffer: '=',\r\n\t                commentsCustomCloseCallback: '='\r\n\t            },\r\n\t            controller: ['$filter', 'alertService', '$scope', '$rootScope', 'requestManager', 'configService', 'offerManager',\r\n\t                function ($filter, alertService, $scope, $rootScope, requestManager, configService, offerManager) {\r\n\t                    $scope.quoteActionEnable = -1;\r\n\t                    $scope.qComment = {};\r\n\t                    $scope.comment = {};\r\n\t                    $scope.getQuotedComment = function (id, comments) {\r\n\t                        return $filter('filter')(comments, {id: id})[0];\r\n\t                    }\r\n\t                    $scope.quoteAction = function (id) {\r\n\t                        if ($scope.quoteActionEnable == id) {\r\n\t                            $scope.quoteActionEnable = -1;\r\n\t                        }\r\n\t                        else {\r\n\t                            $scope.quoteActionEnable = id;\r\n\t                        }\r\n\t                    }\r\n\t                    $scope.isQuoteActionEnabled = function (id) {\r\n\t                        return $scope.quoteActionEnable == id;\r\n\t                    }\r\n\t                    $scope.writeComment = function (comment, id) {\r\n\t                        $scope.processing = true;\r\n\t                        requestManager.makePostCall(comment, {'offer': id}, configService.getEndpoint('create.comment'))\r\n\t                            .success(function (data, status, headers, config) {\r\n\t                                $scope.sendMessageAndShowSpecifications(data.descriptionEsp);\r\n\t                            }).error(function (data, status, headers, config) {\r\n\t                                $scope.sendDefaultErrorMessageAndShowSpecifications();\r\n\t                            }).finally(function () {\r\n\t                                $scope.processing = false;\r\n\t                            });\r\n\t                    };\r\n\t                    $scope.quoteComment = function (comment, id) {\r\n\t                        $scope.processing = true;\r\n\t                        requestManager.makePostCall(comment, {'quotedComment': id}, configService.getEndpoint('quote.comment'))\r\n\t                            .success(function (data, status, headers, config) {\r\n\t                                $scope.sendMessageAndShowSpecifications(data.descriptionEsp);\r\n\t                            }).error(function (data, status, headers, config) {\r\n\t                                $scope.sendDefaultErrorMessageAndShowSpecifications();\r\n\t                            }).finally(function () {\r\n\t                                $scope.processing = false;\r\n\t                            });\r\n\t                    }\r\n\t\r\n\t                    $scope.sendMessageAndShowSpecifications = function (message) {\r\n\t                        //alertService.sendErrorMessage(message);\r\n\t                        //$scope.updateViewAndCloseCallback();\r\n\t                        $scope.restartCommentTexts();\r\n\t                        offerManager.showSpecifications($scope.theOffer);\r\n\t                    }\r\n\t                    $scope.sendDefaultErrorMessageAndShowSpecifications = function () {\r\n\t                        alertService.sendDefaultErrorMessage();\r\n\t                        $scope.updateViewAndCloseCallback();\r\n\t                    }\r\n\t                    $scope.updateViewAndCloseCallback = function () {\r\n\t                        $scope.commentsCustomCloseCallback = function () {\r\n\t                            offerManager.showSpecifications($scope.theOffer);\r\n\t                        }\r\n\t                        $rootScope.$broadcast('commentsCustomCloseCallback', $scope.commentsCustomCloseCallback);\r\n\t                        $scope.restartCommentTexts();\r\n\t                    }\r\n\t                    $scope.restartCommentTexts = function () {\r\n\t                        $scope.comment.commentText = \"\";\r\n\t                        $scope.qComment.commentText = \"\";\r\n\t                    }\r\n\t\r\n\t                }\r\n\t            ]\r\n\t        }\r\n\t    })\r\n\t;\n\n/***/ },\n/* 17 */\n/***/ function(module, exports) {\n\n\t/**\r\n\t * Created by hasiermetal on 26/06/15.\r\n\t */\r\n\taporlaofertaApp\r\n\t    .directive('ngOfferCommentsQuotes', function () {\r\n\t        return {\r\n\t            restrict: 'A',\r\n\t            templateUrl: 'resources/js/offer/offer-specifications/offer-comments/' +\r\n\t                'commentsQuotes.jsp',\r\n\t            scope: {\r\n\t                theComments: '=',\r\n\t                quotedComment: '='\r\n\t            },\r\n\t            controller: ['$rootScope', '$scope', 'requestManager', 'configService', function ($rootScope, $scope, requestManager, configService) {\r\n\t                $scope.quoteActionEnable = -1;\r\n\t                $scope.quoteAction = function (id) {\r\n\t                    if ($scope.quoteActionEnable == id) {\r\n\t                        $scope.quoteActionEnable = -1;\r\n\t                    }\r\n\t                    else {\r\n\t                        $scope.quoteActionEnable = id;\r\n\t                    }\r\n\t                }\r\n\t                $scope.isQuoteActionEnabled = function (id) {\r\n\t                    return $scope.quoteActionEnable == id;\r\n\t                }\r\n\t                $scope.quoteComment = function (comment, id) {\r\n\t                    requestManager.makePostCall(comment, {'quotedComment': id}, configService.getEndpoint('quote.comment'))\r\n\t                        .success(function (data, status, headers, config) {\r\n\t                            $rootScope.$broadcast('serverResponse', data);\r\n\t                            $scope.qComment.commentText=\"\";\r\n\t                        }).error(function (data, status, headers, config) {\r\n\t                            var theResponse = {};\r\n\t                            theResponse.description = data;\r\n\t                            theResponse.responseResult = \"error\";\r\n\t                            $rootScope.$broadcast('serverResponse', theResponse);\r\n\t                        });\r\n\t                };\r\n\t\r\n\t            }]\r\n\t        }\r\n\t    });\n\n/***/ },\n/* 18 */\n/***/ function(module, exports) {\n\n\t/**\r\n\t * Created by hasiermetal on 16/03/14.\r\n\t */\r\n\taporlaofertaApp\r\n\t    .directive('ngOfferCreation', function () {\r\n\t        return {\r\n\t            restrict: 'A',\r\n\t            templateUrl: 'resources/js/offer/offer-creation/offerCreation.html',\r\n\t            scope: {\r\n\t                overheadDisplay: '=',\r\n\t                customCloseCallback: '=',\r\n\t                displayCallback: '='\r\n\t            },\r\n\t            controller: ['$scope', 'offerManager', 'requestManager', 'configService', 'alertService', 'vcRecaptchaService',\r\n\t                function ($scope, offerManager, requestManager, configService, alertService, vcRecaptchaService) {\r\n\t                    $scope.offer = {};\r\n\t                    $scope.widgetId = null;\r\n\t                    $scope.publicKey = \"6LdqHQoTAAAAAAht2VhkrLGU26eBOjL-nK9zXxcn\";\r\n\t                    $scope.resetCategory = true;\r\n\t                    $scope.appliedOfferFilters = {};\r\n\t\r\n\t                    $scope.createOffer = function () {\r\n\t                        if (vcRecaptchaService.getResponse($scope.widgetId) === \"\") {\r\n\t                            $scope.offerCreationError(\"Por favor, haga click en el captcha para demostrar que no es un robot\");\r\n\t                            vcRecaptchaService.reload($scope.widgetId);\r\n\t                        }\r\n\t                        else {\r\n\t                            $scope.processing = true;\r\n\t                            requestManager.makePostCall($scope.parseOffer(), {recaptcha: vcRecaptchaService.getResponse($scope.widgetId)}, configService.getEndpoint('create.offer'))\r\n\t                                .success(function (data, status, headers, config) {\r\n\t                                    if (!alertService.isAllOk(data)) {\r\n\t                                        $scope.offerCreationError(data.descriptionEsp);\r\n\t                                    }\r\n\t                                    else {\r\n\t                                        alertService.sendErrorMessage(data.descriptionEsp);\r\n\t                                        $scope.resetValues();\r\n\t                                        $scope.customCloseCallback = function () {\r\n\t                                            offerManager.requestNewestOffers($scope.appliedOfferFilters);\r\n\t                                        }\r\n\t                                    }\r\n\t                                }).error(function (data, status, headers, config) {\r\n\t                                    $scope.offerCreationError(alertService.getDefaultMessage());\r\n\t                                }).finally(function () {\r\n\t                                    $scope.processing = false;\r\n\t                                });\r\n\t                            //$scope.overheadDisplay = false;\r\n\t                        }\r\n\t                    };\r\n\t\r\n\t                    $scope.$on('appliedOfferFilters', function (event, args) {\r\n\t                        $scope.appliedOfferFilters = args;\r\n\t                    });\r\n\t\r\n\t                    $scope.parseOffer = function () {\r\n\t                        var theOffer = angular.copy($scope.offer);\r\n\t                        try {\r\n\t                            theOffer.originalPrice = parseFloat(theOffer.originalPrice.replace(/,/, '.'));\r\n\t                        } catch (e) {/*float already*/\r\n\t                        }\r\n\t                        try {\r\n\t                            theOffer.finalPrice = parseFloat(theOffer.finalPrice.replace(/,/, '.'));\r\n\t                        } catch (e) {/*float already*/\r\n\t                        }\r\n\t                        return theOffer;\r\n\t                    }\r\n\t\r\n\t                    $scope.restartRecaptcha = function () {\r\n\t                        vcRecaptchaService.reload($scope.widgetId);\r\n\t                    }\r\n\t\r\n\t                    $scope.offerCreationError = function (customMessage) {\r\n\t                        alertService.sendErrorMessage(customMessage);\r\n\t                        $scope.restartRecaptcha();\r\n\t                        $scope.customCloseCallback = $scope.displayCallback;\r\n\t                    }\r\n\t\r\n\t                    $scope.bigDecimalsOnly = /^\\-?\\d+((\\.|\\,)\\d+)?$/;\r\n\t                    $scope.resetValues = function () {\r\n\t                        $scope.restartRecaptcha();\r\n\t                        $scope.offer = {};\r\n\t                        $scope.brandNewCompany = false;\r\n\t                        $scope.resetCategory = true;\r\n\t                        $scope.resetCompany = true;\r\n\t                    };\r\n\t                    $scope.setWidgetId = function (widgetId) {\r\n\t                        $scope.widgetId = widgetId;\r\n\t                    };\r\n\t\r\n\t                    $scope.isCompanyDefined = function () {\r\n\t                        if ($scope.offer) {\r\n\t                            return $scope.offer.offerCompany != undefined && $scope.selectedcompany != \"\";\r\n\t                        }\r\n\t                    };\r\n\t                    $scope.isCategorySelected = function () {\r\n\t                        return $scope.offer.offerCategory != \"\"\r\n\t                            && $scope.offer.offerCategory != null\r\n\t                            && $scope.offer.offerCategory != undefined\r\n\t                            && $scope.offer.offerCategory != \"CATEGORÍA\";\r\n\t                    };\r\n\t                    $scope.selectionPerformed = function () {\r\n\t                        return $scope.isCompanyDefined() && $scope.isCategorySelected();\r\n\t                    }\r\n\t                }]\r\n\t        }\r\n\t    });\n\n/***/ },\n/* 19 */\n/***/ function(module, exports) {\n\n\t/**\r\n\t * Created by hasiermetal on 16/03/14.\r\n\t */\r\n\taporlaofertaApp\r\n\t    .directive('ngOfferUpdate', function () {\r\n\t        return {\r\n\t            restrict: 'A',\r\n\t            templateUrl: 'resources/js/offer/offer-creation/offerCreation.html',\r\n\t            scope: {\r\n\t                overheadDisplay: '=',\r\n\t                customCloseCallback: '=',\r\n\t                displayCallback: '=',\r\n\t                offer: \"=\"\r\n\t            },\r\n\t            controller: ['$scope', 'offerManager', 'requestManager', 'configService', 'alertService', 'vcRecaptchaService',\r\n\t                function ($scope, offerManager, requestManager, configService, alertService, vcRecaptchaService) {\r\n\t                    $scope.widgetId = null;\r\n\t                    $scope.publicKey = \"6LdqHQoTAAAAAAht2VhkrLGU26eBOjL-nK9zXxcn\";\r\n\t                    $scope.createOffer = function () {\r\n\t                        if (vcRecaptchaService.getResponse($scope.widgetId) === \"\") {\r\n\t                            $scope.offerCreationError(\"Por favor, haga click en el captcha para demostrar que no es un robot\");\r\n\t                            vcRecaptchaService.restartRecaptcha();\r\n\t                        }\r\n\t                        else {\r\n\t                            $scope.processing = true;\r\n\t                            requestManager.makePostCall($scope.parseOffer(), {recaptcha: vcRecaptchaService.getResponse($scope.widgetId)}, configService.getEndpoint('update.offer'))\r\n\t                                .success(function (data, status, headers, config) {\r\n\t                                    if (!alertService.isAllOk(data)) {\r\n\t                                        $scope.offerCreationError(data.descriptionEsp);\r\n\t                                    }\r\n\t                                    else {\r\n\t                                        alertService.sendErrorMessage(data.descriptionEsp);\r\n\t                                        $scope.resetValues();\r\n\t                                        $scope.customCloseCallback = function () {\r\n\t                                            offerManager.requestNewestOffers($scope.appliedOfferFilters);\r\n\t                                        }\r\n\t                                    }\r\n\t                                }).error(function (data, status, headers, config) {\r\n\t                                    $scope.offerCreationError(alertService.getDefaultMessage());\r\n\t                                }).finally(function () {\r\n\t                                    $scope.processing = false;\r\n\t                                });\r\n\t                            //$scope.overheadDisplay = false;\r\n\t                        }\r\n\t                    };\r\n\t\r\n\t                    $scope.parseOffer = function () {\r\n\t                        var theOffer = angular.copy($scope.offer);\r\n\t                        try {\r\n\t                            theOffer.originalPrice = parseFloat(theOffer.originalPrice.replace(/,/, '.'));\r\n\t                        } catch (e) {/*float already*/\r\n\t                        }\r\n\t                        try {\r\n\t                            theOffer.finalPrice = parseFloat(theOffer.finalPrice.replace(/,/, '.'));\r\n\t                        } catch (e) {/*float already*/\r\n\t                        }\r\n\t                        return theOffer;\r\n\t                    }\r\n\t\r\n\t                    $scope.restartRecaptcha = function () {\r\n\t                        vcRecaptchaService.reload($scope.widgetId);\r\n\t                    }\r\n\t\r\n\t                    $scope.offerCreationError = function (customMessage) {\r\n\t                        alertService.sendErrorMessage(customMessage);\r\n\t                        $scope.restartRecaptcha();\r\n\t                        $scope.customCloseCallback = $scope.displayCallback;\r\n\t                    }\r\n\t\r\n\t                    $scope.bigDecimalsOnly = /^\\-?\\d+((\\.|\\,)\\d+)?$/;\r\n\t                    $scope.resetValues = function () {\r\n\t                        $scope.restartRecaptcha();\r\n\t                        $scope.offer = {};\r\n\t                        $scope.brandNewCompany = false;\r\n\t                        $scope.resetCategory = true;\r\n\t                        $scope.resetCompany = true;\r\n\t                    };\r\n\t                    $scope.setWidgetId = function (widgetId) {\r\n\t                        $scope.widgetId = widgetId;\r\n\t                    };\r\n\t\r\n\t                    $scope.isCompanyDefined = function () {\r\n\t                        if ($scope.offer) {\r\n\t                            return $scope.offer.offerCompany != undefined && $scope.selectedcompany != \"\";\r\n\t                        }\r\n\t                    };\r\n\t                    $scope.isCategorySelected = function () {\r\n\t                        return $scope.offer\r\n\t                            && $scope.offer.offerCategory != \"\"\r\n\t                            && $scope.offer.offerCategory != null\r\n\t                            && $scope.offer.offerCategory != undefined\r\n\t                            && $scope.offer.offerCategory != \"CATEGORÍA\";\r\n\t                    };\r\n\t                    $scope.selectionPerformed = function () {\r\n\t                        return $scope.isCompanyDefined() && $scope.isCategorySelected();\r\n\t                    }\r\n\t                }]\r\n\t        }\r\n\t    });\n\n/***/ },\n/* 20 */\n/***/ function(module, exports) {\n\n\t/**\r\n\t * Created by hasiermetal on 16/03/14.\r\n\t */\r\n\taporlaofertaApp\r\n\t    .directive('ngCompanyManager', function () {\r\n\t        return {\r\n\t            restrict: 'A',\r\n\t            templateUrl: 'resources/js/offer/offer-creation/companyManagement.html',\r\n\t            scope: {\r\n\t                reset: '=',\r\n\t                selectedcompany: '='\r\n\t            },\r\n\t            controller: ['$rootScope', '$scope', 'requestManager', 'configService', function ($rootScope, $scope, requestManager, configService) {\r\n\t                $scope.offerCompanies = {};\r\n\t\r\n\t                $scope.populateCompanyList = function () {\r\n\t                    requestManager.makePostCall({}, {}, configService.getEndpoint('get.companies'))\r\n\t                        .success(function (data, status, headers, config) {\r\n\t                            $scope.offerCompanies = angular.copy(data);\r\n\t                        }).error(function (data, status, headers, config) {\r\n\t                            var theResponse = {};\r\n\t                            theResponse.description = data;\r\n\t                            theResponse.responseResult = \"error\";\r\n\t                            $rootScope.$broadcast('serverResponse', theResponse);\r\n\t                        });\r\n\t                };\r\n\t\r\n\t                $scope.searchCompanyChange = function (companyName) {\r\n\t                    if (companyName != \"\") {\r\n\t                        $scope.selectedcompany = {companyName: companyName}\r\n\t                    }\r\n\t                }\r\n\t                $scope.selectedItemChange = function (company) {\r\n\t                    $scope.selectedcompany = company\r\n\t                }\r\n\t\r\n\t                $scope.$watch('reset', function () {\r\n\t                    if ($scope.reset) {\r\n\t                        $scope.selectedcompany = \"\";\r\n\t                        $scope.searchCompany = \"\";\r\n\t                    }\r\n\t                    $scope.reset = false;\r\n\t                });\r\n\t\r\n\t                $scope.querySearch = function (company) {\r\n\t                    if ($scope.offerCompanies.length > 0) {\r\n\t                        return company ? $scope.offerCompanies.filter($scope.createFilterFor(company)) : $scope.offerCompanies;\r\n\t                    }\r\n\t                };\r\n\t\r\n\t                $scope.createFilterFor = function (companyName) {\r\n\t                    var lowercaseQuery = angular.lowercase(companyName);\r\n\t                    return function filterFn(company) {\r\n\t                        return (angular.lowercase(company.companyName)\r\n\t                            .indexOf(lowercaseQuery) === 0);\r\n\t                    };\r\n\t                };\r\n\t\r\n\t                $scope.populateCompanyList();\r\n\t            }]\r\n\t        }\r\n\t    });\n\n/***/ },\n/* 21 */\n/***/ function(module, exports) {\n\n\t/**\r\n\t * Created by hasiermetal on 16/03/14.\r\n\t */\r\n\taporlaofertaApp\r\n\t    .directive('ngOfferCategoryManager', function () {\r\n\t        return {\r\n\t            restrict: 'A',\r\n\t            templateUrl: 'resources/js/offer/offer-creation/offerCategoryManagement.html',\r\n\t            scope: {\r\n\t                reset: '=',\r\n\t                selectedcategory: '=',\r\n\t                includeAll: '='\r\n\t            },\r\n\t            controller: ['$rootScope', '$scope', 'requestManager', 'configService', function ($rootScope, $scope, requestManager, configService) {\r\n\t                $scope.offerCategories = {};\r\n\t                $scope.offerCategory = {\r\n\t                    text: \"CATEGORÍA\"\r\n\t                };\r\n\t                $scope.populateAllCategories = function () {\r\n\t                    requestManager.makePostCall({}, {}, configService.getEndpoint('get.offer.categories'))\r\n\t                        .success(function (data, status, headers, config) {\r\n\t                            $scope.offerCategories = angular.copy(data);\r\n\t                            if ($scope.includeAll) {\r\n\t                                $scope.offerCategories.push({text: \"TODAS\", value: \"\"})\r\n\t                            }\r\n\t                        }).error(function (data, status, headers, config) {\r\n\t                            var theResponse = {};\r\n\t                            theResponse.description = data;\r\n\t                            theResponse.responseResult = \"error\";\r\n\t                            $rootScope.$broadcast('serverResponse', theResponse);\r\n\t                        });\r\n\t                }\r\n\t                $scope.onCategoryChange = function (category) {\r\n\t                    $scope.selectedcategory = category;\r\n\t                }\r\n\t                $scope.populateAllCategories();\r\n\t                $scope.$watch('reset', function () {\r\n\t                    if ($scope.reset) {\r\n\t                        $scope.offerCategory = {\r\n\t                            text: \"CATEGORÍA\"\r\n\t                        };\r\n\t                    }\r\n\t                    $scope.reset = false;\r\n\t                });\r\n\t                $scope.$watch('offerCategory', function () {\r\n\t                    $scope.selectedcategory = $scope.offerCategory.text;\r\n\t                });\r\n\t                $scope.isCategorySelected = function () {\r\n\t                    return $scope.category != \"\"\r\n\t                        && $scope.category != null\r\n\t                        && $scope.category != undefined;\r\n\t                };\r\n\t            }]\r\n\t        }\r\n\t    });\n\n/***/ },\n/* 22 */\n/***/ function(module, exports) {\n\n\t/**\r\n\t * Created by hasiermetal on 30/06/15.\r\n\t */\r\n\taporlaofertaApp\r\n\t    .directive('ngOfferFilter', function () {\r\n\t        return {\r\n\t            restrict: 'A',\r\n\t            templateUrl: 'resources/js/offer/offer-filter/offerFilter.html',\r\n\t            scope: {\r\n\t                offerList: '=',\r\n\t                selection: '=',\r\n\t                offerFilter: '='\r\n\t            },\r\n\t            controller: ['$scope', '$rootScope', 'requestManager', 'configService', function ($scope, $rootScope, requestManager, configService) {\r\n\t                $scope.filter = {};\r\n\t                $scope.displayFilterContent = \"\";\r\n\t                $scope.previousCategory = \"all\";\r\n\t\r\n\t                $scope.requestFilterApply = function () {\r\n\t                    $scope.processing = true;\r\n\t                    $scope.filter.hot = $scope.selection === 'hottestOffers';\r\n\t                    if (!$scope.isCategorySelected()) {\r\n\t                        $scope.filter.selectedcategory = \"\";\r\n\t                    }\r\n\t                    $scope.offerFilter = angular.copy($scope.filter);\r\n\t                    if ($scope.offerFilter.text.length < 3) {\r\n\t                        $scope.offerFilter.text = \"\";\r\n\t                    }\r\n\t                    $rootScope.$broadcast('appliedOfferFilters', angular.copy($scope.offerFilter));\r\n\t                    requestManager.makePostCall($scope.offerFilter, {}, configService.getEndpoint('get.filtered.offers'))\r\n\t                        .success(function (data, status, headers, config) {\r\n\t                            $scope.offerList = data.theOffers;\r\n\t                        }).error(function (data, status, headers, config) {\r\n\t                            var theResponse = {};\r\n\t                            theResponse.description = data;\r\n\t                            theResponse.responseResult = \"error\";\r\n\t                            $rootScope.$broadcast('serverResponse', theResponse);\r\n\t                        }).finally(function () {\r\n\t                            $scope.processing = false;\r\n\t                        });\r\n\t                };\r\n\t\r\n\t                $scope.$watch('filter.dateRange', function () {\r\n\t                    $scope.requestFilterApply();\r\n\t                });\r\n\t\r\n\t                $scope.searchCriteriaChanged = function () {\r\n\t                    $scope.offerFilter = angular.copy($scope.filter);\r\n\t                    if ($scope.filter.text.length > 2 || $scope.filter.text.length==0) {\r\n\t                        $scope.requestFilterApply();\r\n\t                    }\r\n\t                };\r\n\t\r\n\t                $scope.$watch('filter.selectedcategory', function () {\r\n\t                    if ($scope.previousCategory !== $scope.filter.selectedcategory) {\r\n\t                        $scope.previousCategory = $scope.filter.selectedcategory;\r\n\t                        $scope.requestFilterApply();\r\n\t                    }\r\n\t                });\r\n\t\r\n\t                $scope.cleanFilters = function () {\r\n\t                    $scope.filter.expired = false;\r\n\t                    $scope.filter.text = \"\";\r\n\t                    $scope.resetCategory = true;\r\n\t                    $scope.filter.selectedcategory = \"\";\r\n\t                    $scope.filter.selectedcategory = \"\";\r\n\t                    $scope.filter.dateRange = 1;\r\n\t//                    $scope.requestFilterApply();\r\n\t                    $rootScope.$broadcast('appliedOfferFilters', angular.copy($scope.offerFilter));\r\n\t                };\r\n\t\r\n\t                $scope.displayFilterContents = function () {\r\n\t                    $scope.displayFilterContent = ($scope.displayFilterContent == 'filters-displayed') ?\r\n\t                        'filters-hidden' : 'filters-displayed';\r\n\t                };\r\n\t                $scope.isCategorySelected = function () {\r\n\t                    return $scope.filter.selectedcategory != \"\"\r\n\t                        && $scope.filter.selectedcategory != null\r\n\t                        && $scope.filter.selectedcategory != undefined\r\n\t                        && $scope.filter.selectedcategory != \"CATEGORÍA\"\r\n\t                        && $scope.filter.selectedcategory != \"TODAS\";\r\n\t                };\r\n\t                $scope.cleanFilters();\r\n\t            }]\r\n\t        }\r\n\t    });\n\n/***/ },\n/* 23 */\n/***/ function(module, exports) {\n\n\t/**\r\n\t * Created by hasiermetal on 16/03/14.\r\n\t */\r\n\taporlaofertaApp\r\n\t    .directive('ngOverheadDisplay', function () {\r\n\t        return {\r\n\t            restrict: 'A',\r\n\t            templateUrl: 'resources/js/header-display/headDisplay.jsp',\r\n\t            scope: {\r\n\t                specificOffer: '@',\r\n\t                overheadVisible: '=',\r\n\t                noAccounts: '='\r\n\t            },\r\n\t            controller: ['$scope', 'offerManager', '$timeout', '$cookies',\r\n\t                function ($scope, $offerManager, $timeout, $cookies) {\r\n\t                    $scope.customCloseCallback = {};\r\n\t                    $scope.theResponse = {};\r\n\t                    $scope.fullscreen = false;\r\n\t                    $scope.displayLogin = function () {\r\n\t                        $scope.setDefaultVisibility();\r\n\t                        $scope.displayAccountLogin = true;\r\n\t                        $scope.overheadVisible = true;\r\n\t                    };\r\n\t                    $scope.displaySignup = function () {\r\n\t                        $scope.setDefaultVisibility();\r\n\t                        $scope.displayAccountCreation = true;\r\n\t                        $scope.overheadVisible = true;\r\n\t                    };\r\n\t                    $scope.displayAccountUpdateForm = function () {\r\n\t                        $scope.setDefaultVisibility();\r\n\t                        $scope.displayAccountUpdate = true;\r\n\t                        $scope.overheadVisible = true;\r\n\t                    };\r\n\t                    $scope.displayOfferCreate = function () {\r\n\t                        $scope.setDefaultVisibility();\r\n\t                        $scope.displayOfferCreation = true;\r\n\t                        $scope.overheadVisible = true;\r\n\t                    };\r\n\t                    $scope.displayOfferUpdate = function () {\r\n\t                        $scope.setDefaultVisibility();\r\n\t                        $scope.displayOfferToBeUpdate = true;\r\n\t                        $scope.overheadVisible = true;\r\n\t                    };\r\n\t                    $scope.displayOfferDetails = function () {\r\n\t                        $scope.setDefaultVisibility();\r\n\t                        $scope.displayOfferSpecifications = true;\r\n\t                        $scope.overheadVisible = true;\r\n\t                    };\r\n\t                    $scope.displayServerResponse = function () {\r\n\t                        $scope.setDefaultVisibility();\r\n\t                        $scope.displayResponseFromServer = true;\r\n\t                        $scope.overheadVisible = true;\r\n\t                    }\r\n\t                    $scope.displayTutorialDiagram = function () {\r\n\t                        $scope.setDefaultVisibility();\r\n\t                        $scope.displayTutorial = true;\r\n\t                        $scope.overheadVisible = true;\r\n\t                    }\r\n\t                    $scope.setDefaultVisibility = function () {\r\n\t                        $scope.overheadVisible = false;\r\n\t                        $scope.displayOfferCreation = false;\r\n\t                        $scope.displayOfferToBeUpdate = false;\r\n\t                        $scope.displayAccountLogin = false;\r\n\t                        $scope.displayAccountCreation = false;\r\n\t                        $scope.displayAccountUpdate = false;\r\n\t                        $scope.displayOfferSpecifications = false;\r\n\t                        $scope.displayResponseFromServer = false;\r\n\t                        $scope.displayTutorial = false;\r\n\t                    };\r\n\t                    $scope.closeOverheadDisplay = function (customCloseCallback) {\r\n\t                        $scope.overheadVisible = false;\r\n\t                        if (typeof customCloseCallback == \"function\") {\r\n\t                            customCloseCallback();\r\n\t                            $scope.customCloseCallback = {};\r\n\t                        }\r\n\t                    };\r\n\t                    $scope.$watch('specificOffer', function () {\r\n\t                        if (/^\\d+$/.exec($scope.specificOffer) != null) {\r\n\t                            $scope.fullscreen = true;\r\n\t                            $scope.customCloseCallback = function () {\r\n\t                                $scope.fullscreen = false;\r\n\t                            };\r\n\t                            $offerManager.showSpecifications($scope.specificOffer);\r\n\t                        }\r\n\t                    });\r\n\t                    $scope.$on('offerSpecifications', function (event, args) {\r\n\t                        $scope.offerSpecifications = args;\r\n\t                        $scope.displayOfferDetails();\r\n\t                        $scope.customCloseCallback = function () {\r\n\t                            $timeout(function () {\r\n\t                                $scope.offerSpecifications = [];\r\n\t                            }, 100);\r\n\t                            $scope.fullscreen = false;\r\n\t                        }\r\n\t\r\n\t                    });\r\n\t\r\n\t                    $scope.$on('updateTheOffer', function (event, args) {\r\n\t                        $scope.offerSpecifications = [args];\r\n\t                        $scope.customCloseCallback = function () {\r\n\t                            $scope.displayOfferDetails();\r\n\t                        }\r\n\t                        $scope.displayOfferUpdate();\r\n\t                    });\r\n\t\r\n\t                    $scope.$on('closeResponse', function () {\r\n\t                        $scope.setDefaultVisibility();\r\n\t                    });\r\n\t\r\n\t                    $scope.$on('serverResponse', function (event, args) {\r\n\t                        $scope.theResponse = args;\r\n\t                        $scope.displayServerResponse();\r\n\t\r\n\t                    });\r\n\t\r\n\t                    $scope.$on('displayTutorial', function () {\r\n\t                        $scope.displayTutorialDiagram();\r\n\t                    });\r\n\t\r\n\t                    $scope.$on('keydownControl', function (event, args) {\r\n\t                        var keyDownCode = args;\r\n\t                        if (keyDownCode == 27) {\r\n\t                            $scope.justCloseOverheadDisplay();\r\n\t                        }\r\n\t                    });\r\n\t\r\n\t                    $scope.justCloseOverheadDisplay = function () {\r\n\t                        $scope.customCloseCallback = {};\r\n\t                        $scope.closeOverheadDisplay();\r\n\t                        $scope.fullscreen = false;\r\n\t                    }\r\n\t\r\n\t                    $scope.checkForErrors = function () {\r\n\t                        if (document.getElementById(\"errorMessage\")) {\r\n\t                            var errorMessage = document.getElementById(\"errorMessage\").value;\r\n\t                            if (typeof errorMessage != undefined && errorMessage != '') {\r\n\t                                var theResponse = {};\r\n\t                                theResponse.descriptionEsp = errorMessage;\r\n\t                                theResponse.responseResult = \"error\";\r\n\t                                $scope.theResponse = theResponse;\r\n\t                                $scope.displayServerResponse();\r\n\t                            }\r\n\t                        }\r\n\t                    };\r\n\t\r\n\t                    $scope.setDefaultVisibility();\r\n\t                    $scope.checkForErrors();\r\n\t\r\n\t                    $timeout(function () {\r\n\t                        angular.element($('#overheadSubContainer')).removeClass('hiddencontainer');\r\n\t                    }, 100);\r\n\t                }]\r\n\t        }\r\n\t    });\n\n/***/ },\n/* 24 */\n/***/ function(module, exports) {\n\n\t/**\r\n\t * Created by hasiermetal on 19/06/16.\r\n\t */\r\n\taporlaofertaApp\r\n\t    .directive('ngHeadAccountAndOfferManagement', ['$window', '$anchorScroll', function ($window, $anchorScroll) {\r\n\t        return {\r\n\t            restrict: 'A',\r\n\t            templateUrl: 'resources/js/header-display/headAccountAndOfferManagement.jsp',\r\n\t            scope: {\r\n\t                displayLogin: '=',\r\n\t                displaySignup: '=',\r\n\t                displayOfferCreate: '=',\r\n\t                displayAccountUpdateForm: '='\r\n\t            },\r\n\t            link: function ($scope) {\r\n\t                $scope.scrollPosition = true;\r\n\t                angular.element($window).bind(\"scroll\", function () {\r\n\t                    $scope.scrollPosition = this.pageYOffset <= 50;\r\n\t                    $scope.$apply();\r\n\t                });\r\n\t                $scope.toTheTop = function () {\r\n\t                    $anchorScroll();\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t    }]);\n\n/***/ },\n/* 25 */\n/***/ function(module, exports) {\n\n\t/**\r\n\t * Created by hasiermetal on 10/08/16.\r\n\t */\r\n\taporlaofertaApp\r\n\t    .directive('ngMainSlogan', function () {\r\n\t        return {\r\n\t            restrict: 'A',\r\n\t            templateUrl: 'resources/js/header-display/mainSlogan.html',\r\n\t            controller: ['$scope', '$timeout',\r\n\t                function ($scope, $timeout) {\r\n\t                    $timeout(function () {\r\n\t                        $scope.faded=true;\r\n\t                    }, 1200);\r\n\t                }]\r\n\t        }\r\n\t    });\n\n/***/ },\n/* 26 */\n/***/ function(module, exports) {\n\n\t/**\r\n\t * Created by hasiermetal on 19/06/15.\r\n\t */\r\n\taporlaofertaApp\r\n\t    .directive('ngImageUploader', function () {\r\n\t        return {\r\n\t            restrict: 'A',\r\n\t            scope: {\r\n\t                finalUrl: '=',\r\n\t                alreadyUploadedImage: '='\r\n\t            },\r\n\t            templateUrl: 'resources/js/uploader/imageUpload.html',\r\n\t            controller: ['$rootScope', '$scope', 'configService', '$timeout', function ($rootScope, $scope, configService, $timeout) {\r\n\t                $scope.uploader = {};\r\n\t                $scope.displayThumbnail = true;\r\n\t                $scope.invalidSize = false;\r\n\t                $scope.invalidImage = false;\r\n\t                $scope.maxImageSize = configService.getEndpoint('max.image.size');\r\n\t                $scope.alreadyUploadedImage=\"\";\r\n\t                $scope.fileAdded = function (file) {\r\n\t                    var fileReader = new FileReader();\r\n\t                    fileReader.onload = function (event) {\r\n\t                        var img = new Image();\r\n\t                        $scope.alreadyUploadedImage=\"\";\r\n\t                        img.onerror = function () {\r\n\t                            $scope.displayInvalidImageMessage();\r\n\t                            return false;\r\n\t                        };\r\n\t                        img.onload = function () {\r\n\t                            if (this.width > $scope.maxImageSize ||\r\n\t                                this.height > $scope.maxImageSize\r\n\t                                ) {\r\n\t                                $scope.displayInvalidImageSizeMessage();\r\n\t                                return false;\r\n\t                            }\r\n\t                            $scope.uploader.flow.upload();\r\n\t                            $scope.defaultThumbnailView();\r\n\t                        };\r\n\t                        img.src = event.target.result;\r\n\t                    };\r\n\t                    fileReader.readAsDataURL(file.file);\r\n\t                };\r\n\t\r\n\t                $scope.deleteImage=function(){\r\n\t                    $scope.alreadyUploadedImage = \"\";\r\n\t                    $scope.uploader.flow.cancel();\r\n\t                }\r\n\t\r\n\t                $scope.changeImage=function(){\r\n\t                    $scope.alreadyUploadedImage = \"\";\r\n\t                }\r\n\t\r\n\t                $scope.alreadyUploaded = function () {\r\n\t                    return $scope.alreadyUploadedImage !== \"\";\r\n\t                }\r\n\t\r\n\t                $scope.defaultThumbnailView = function () {\r\n\t                    $scope.displayThumbnail = true;\r\n\t                    $scope.invalidImage = false;\r\n\t                    $scope.invalidSize = false;\r\n\t                };\r\n\t\r\n\t                $scope.filesIsUploaded = function (message) {\r\n\t                    var responseResult = JSON.parse(message);\r\n\t                    if (responseResult.code == 0) {\r\n\t                        $scope.finalUrl = responseResult.description;\r\n\t                    }\r\n\t                    else {\r\n\t                        $scope.handleUploadError(responseResult);\r\n\t                    }\r\n\t                };\r\n\t                $scope.handleUploadError = function (error) {\r\n\t                    $rootScope.$broadcast('serverResponse', error);\r\n\t                };\r\n\t                $scope.$watch('finalUrl', function (newValue, oldValue) {\r\n\t                    if (newValue === \"\" || typeof newValue === 'undefined') {\r\n\t                        $scope.uploader.flow.cancel();\r\n\t                    }\r\n\t                });\r\n\t\r\n\t                $scope.isInvalidThumbnailShown = function () {\r\n\t                    return $scope.invalidImage || $scope.invalidSize;\r\n\t                };\r\n\t\r\n\t                $scope.displayInvalidImageSizeMessage = function () {\r\n\t                    $scope.defaultThumbnailView();\r\n\t                    $scope.invalidSize = true;\r\n\t                    $scope.displayThumbnail = false;\r\n\t                    $timeout(function () {\r\n\t                        $scope.uploader.flow.cancel();\r\n\t                    }, 500);\r\n\t                };\r\n\t                $scope.displayInvalidImageMessage = function () {\r\n\t                    $scope.defaultThumbnailView();\r\n\t                    $scope.invalidImage = true;\r\n\t                    $scope.displayThumbnail = false;\r\n\t                    $timeout(function () {\r\n\t                        $scope.uploader.flow.cancel();\r\n\t                    }, 500);\r\n\t                }\r\n\t            }]\r\n\t        }\r\n\t    });\n\n/***/ },\n/* 27 */\n/***/ function(module, exports) {\n\n\t/**\r\n\t * Created by hasiermetal on 22/06/15.\r\n\t */\r\n\taporlaofertaApp\r\n\t    .directive('ngResponseFromServer', function () {\r\n\t        return {\r\n\t            restrict: 'A',\r\n\t            templateUrl: 'resources/js/response/serverResponse.html',\r\n\t            scope: {\r\n\t                theResponse: '='\r\n\t            }\r\n\t        }\r\n\t    });\n\n/***/ },\n/* 28 */\n/***/ function(module, exports) {\n\n\t/**\r\n\t * Created by hasiermetal on 16/03/14.\r\n\t */\r\n\taporlaofertaApp\r\n\t    .directive('ngSocialMedia', function () {\r\n\t        return {\r\n\t            restrict: 'A',\r\n\t            templateUrl: 'resources/js/social/socialMedia.html',\r\n\t            scope: {\r\n\t                shareUrl: '=',\r\n\t                shareText: '='\r\n\t            },\r\n\t            controller: ['$scope',\r\n\t                function ($scope) {\r\n\t                    $scope.facebookUrl = \"https://www.facebook.com/sharer/sharer.php?u=\" + $scope.shareUrl;\r\n\t                    $scope.twitterUrl = \"https://twitter.com/intent/tweet?url=\" +\r\n\t                        $scope.shareUrl + \"&text=\" + $scope.shareText + \"&via=aporlaoferta\";\r\n\t                    $scope.googlePlusUrl = \"https://plus.google.com/share?url=\" + $scope.shareUrl\r\n\t                }]\r\n\t\r\n\t        }\r\n\t    });\n\n/***/ },\n/* 29 */\n/***/ function(module, exports) {\n\n\t/**\r\n\t * Created by hasiermetal on 14/05/16.\r\n\t */\r\n\taporlaofertaApp\r\n\t    .directive('ngRedirectComponents', function () {\r\n\t        return {\r\n\t            restrict: 'A',\r\n\t            templateUrl: 'resources/js/error/redirectComponents.html'\r\n\t        }\r\n\t    });\n\n/***/ },\n/* 30 */\n/***/ function(module, exports) {\n\n\t/**\r\n\t * Created by hasiermetal on 16/03/14.\r\n\t */\r\n\taporlaofertaApp\r\n\t    .directive('ngPasswordForgotten', function () {\r\n\t        return {\r\n\t            restrict: 'A',\r\n\t            templateUrl: 'resources/js/account/password-forgotten/forgottenForm.html',\r\n\t            scope: {\r\n\t                uuid: '=',\r\n\t                nick: '=',\r\n\t                customCloseCallback: '='\r\n\t            },\r\n\t            controller: ['$scope', '$http', 'requestManager', 'configService', 'alertService',\r\n\t                function ($scope, http, requestManager, configService, alertService) {\r\n\t                    $scope.validPassword= /^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d!$%@#£€*?&]{8,}$/;\r\n\t                    $scope.theUser = {userNickname: $scope.nick, uuid: $scope.uuid};\r\n\t                    $scope.updatePassword = function (theUser) {\r\n\t                        $scope.processing=true;\r\n\t                        requestManager.makePostCall(theUser, {}, configService.getEndpoint('password.forgotten'))\r\n\t                            .success(function (data, status, headers, config) {\r\n\t                                $scope.processPasswordResponse(data)\r\n\t                            }).error(function (data, status, headers, config) {\r\n\t                                alertService.sendDefaultErrorMessage();\r\n\t                            }).finally(function(){\r\n\t                                $scope.processing=false;\r\n\t                            });\r\n\t                        $scope.theUser = {userNickname: $scope.nick, uuid: $scope.uuid};\r\n\t                    }\r\n\t                    $scope.processPasswordResponse = function (data) {\r\n\t                        if(alertService.isAllOk(data)){\r\n\t                            $scope.customCloseCallback = function(){\r\n\t                                window.location.replace(\"/\");\r\n\t                            };\r\n\t                        }\r\n\t                        alertService.sendErrorMessage(data.descriptionEsp);\r\n\t                    }\r\n\t                }]\r\n\t        }\r\n\t    });\n\n/***/ },\n/* 31 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t__webpack_require__(32);\n\n/***/ },\n/* 32 */\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ }\n/******/ ]);\n\n\n/** WEBPACK FOOTER **\n ** bundle.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 647b5b573856d1906e18\n **/","var requestManager = angular.module('requestManager', []);\r\n\r\nrequestManager.service('requestManager', ['$http',\r\n    function ($http) {\r\n        var requestControllerService = {};\r\n        var csrfToken;\r\n        requestControllerService.initMainController = function () {\r\n            csrfToken = $(\"meta[name='_csrf']\").attr(\"content\");\r\n        };\r\n        requestControllerService.makePostCall=function(data, params, url){\r\n            params._csrf= csrfToken;\r\n            return $http({\r\n                method: 'POST',\r\n                url: url,\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'X-CSRF-TOKEN': csrfToken\r\n                },\r\n                params: params,\r\n                data: data\r\n            });\r\n        };\r\n        requestControllerService.getActualToken=function(){\r\n            return csrfToken;\r\n        }\r\n        requestControllerService.initMainController();\r\n        return requestControllerService;\r\n    }]);\r\n\r\n\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/main/webapp/resources/js/request-handler/requestManagerService.js\n ** module id = 1\n ** module chunks = 0\n **/","var configManager = angular.module('configService', []);\r\n\r\nconfigManager.service('configService', [function () {\r\n    var configService = {};\r\n    var GET_OFFERS_ENDPOINT = \"getOffers\";\r\n    var GET_HOTTEST_OFFERS_ENDPOINT = \"getHottestOffers\";\r\n    var GET_OFFER_ENDPOINT = \"getOffer\";\r\n    var CREATE_OFFER_ENDPOINT = \"createOffer\";\r\n    var UPDATE_OFFER_ENDPOINT = \"updateOffer\";\r\n    var EXPIRE_OFFER_ENDPOINT = \"expireOffer\";\r\n    var CREATE_ACCOUNT_ENDPOINT = \"createUser\";\r\n    var UPDATE_ACCOUNT_ENDPOINT = \"updateUser\";\r\n    var GET_ACCOUNT_DETAILS_ENDPOINT = \"accountDetails\";\r\n    var GET_COMPANIES_ENDPOINT = \"companyList\";\r\n    var GET_OFFER_CATEGORIES_ENDPOINT = \"getOfferCategories\";\r\n    var POSITIVE_FEEDBACK_ENDPOINT = \"votePositive\";\r\n    var NEGATIVE_FEEDBACK_ENDPOINT = \"voteNegative\";\r\n    var CREATE_COMMENT_ENDPOINT = \"createComment\";\r\n    var QUOTE_COMMENT_ENDPOINT = \"quoteComment\";\r\n    var GET_FILTERED_ENDPOINT = \"getFilteredOffers\";\r\n    var REQUEST_PASSWORD_UPDATE = \"forgottenPassword\";\r\n    var REQUEST_PASSWORD = \"requestForgottenPassword\";\r\n    var TUTORIAL_COOKIE = \"aporlaoferta-tut\";\r\n    var LAW_COOKIE = \"aporlaoferta-cle\";\r\n    var IMAGE_MAX_SIZE = 2000;\r\n    configService.getEndpoint = function (key) {\r\n        return configMap[key];\r\n    };\r\n    var configMap = {\r\n        'get.offers': GET_OFFERS_ENDPOINT,\r\n        'get.hottest.offers': GET_HOTTEST_OFFERS_ENDPOINT,\r\n        'get.offer': GET_OFFER_ENDPOINT,\r\n        'create.offer': CREATE_OFFER_ENDPOINT,\r\n        'update.offer': UPDATE_OFFER_ENDPOINT,\r\n        'expire.offer': EXPIRE_OFFER_ENDPOINT,\r\n        'create.account': CREATE_ACCOUNT_ENDPOINT,\r\n        'update.account': UPDATE_ACCOUNT_ENDPOINT,\r\n        'get.account.details': GET_ACCOUNT_DETAILS_ENDPOINT,\r\n        'get.companies': GET_COMPANIES_ENDPOINT,\r\n        'get.offer.categories': GET_OFFER_CATEGORIES_ENDPOINT,\r\n        'positive.feedback': POSITIVE_FEEDBACK_ENDPOINT,\r\n        'negative.feedback': NEGATIVE_FEEDBACK_ENDPOINT,\r\n        'create.comment': CREATE_COMMENT_ENDPOINT,\r\n        'quote.comment': QUOTE_COMMENT_ENDPOINT,\r\n        'get.filtered.offers': GET_FILTERED_ENDPOINT,\r\n        'password.forgotten': REQUEST_PASSWORD_UPDATE,\r\n        'password.forgotten.request': REQUEST_PASSWORD,\r\n        'max.image.size': IMAGE_MAX_SIZE,\r\n        'tutorial.cookie':TUTORIAL_COOKIE,\r\n        'law.cookie':LAW_COOKIE\r\n    };\r\n    return configService;\r\n}]);\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/main/webapp/resources/js/config/configService.js\n ** module id = 2\n ** module chunks = 0\n **/","var alertManager = angular.module('alertService', []);\r\n\r\nalertManager.service('alertService', ['$rootScope', function ($rootScope) {\r\n    var alertService = {};\r\n    var defaultMessage = \"No se ha podido ejecutar la operación\";\r\n    alertService.isAllOk = function (data) {\r\n        return data.code == 0;\r\n    }\r\n    alertService.sendErrorMessage = function (data) {\r\n        var theResponse = {};\r\n        theResponse.descriptionEsp = data;\r\n        theResponse.responseResult = \"error\";\r\n        $rootScope.$broadcast('serverResponse', theResponse);\r\n    };\r\n    alertService.sendDefaultErrorMessage = function () {\r\n        var theResponse = {};\r\n        theResponse.descriptionEsp = alertService.getDefaultMessage();\r\n        theResponse.responseResult = \"error\";\r\n        $rootScope.$broadcast('serverResponse', theResponse);\r\n    }\r\n    alertService.getDefaultMessage = function () {\r\n        return defaultMessage;\r\n        ;\r\n    }\r\n    return alertService;\r\n}]);\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/main/webapp/resources/js/response/alertService.js\n ** module id = 3\n ** module chunks = 0\n **/","var offerManager = angular.module('offerManager', []);\r\n\r\nofferManager.service('offerManager', ['$rootScope', 'alertService', 'requestManager', 'configService',\r\n    function ($rootScope, alertService, requestManager, configService) {\r\n        var offerManagerController = {};\r\n        offerManagerController.requestNewestOffers = function (offerFilter) {\r\n            offerFilter.hot=false;\r\n            offerManagerController.requestMoreOffers(offerFilter, undefined, offerManagerController.broadcastOfferList,\r\n                function () {\r\n                });\r\n        }\r\n\r\n        offerManagerController.requestHottestOffers = function (offerFilter) {\r\n            offerFilter.hot=true;\r\n            offerManagerController.requestMoreOffers(offerFilter, undefined, offerManagerController.broadcastOfferList,\r\n                function () {\r\n                });\r\n        }\r\n\r\n        offerManagerController.broadcastOfferList = function (offerList) {\r\n            $rootScope.$broadcast('offerList', offerList);\r\n        }\r\n\r\n        offerManagerController.requestMoreOffers = function (offerFilter, lastOffer, callback, errorCallback) {\r\n            requestManager.makePostCall(offerFilter, {'number': lastOffer}, configService.getEndpoint('get.filtered.offers'))\r\n                .success(function (data, status, headers, config) {\r\n                    callback(data.theOffers);\r\n                    //$rootScope.$broadcast('offerList', data.theOffers);\r\n                }).error(function (data, status, headers, config) {\r\n                    alertService.sendDefaultErrorMessage();\r\n                    errorCallback();\r\n                });\r\n        }\r\n        offerManagerController.showSpecifications = function (id) {\r\n            requestManager.makePostCall({}, {'id': id}, configService.getEndpoint('get.offer'))\r\n                .success(function (data, status, headers, config) {\r\n                    $rootScope.$broadcast('offerSpecifications', data.theOffers);\r\n                }).error(function (data, status, headers, config) {\r\n                    alertService.sendDefaultErrorMessage();\r\n                });\r\n        }\r\n        return offerManagerController;\r\n    }]);\r\n\r\n\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/main/webapp/resources/js/offer/offer-list/offerManagerService.js\n ** module id = 4\n ** module chunks = 0\n **/","/**\r\n * Created by hasiermetal on 16/03/15.\r\n */\r\naporlaofertaApp = angular.module('aPorLaOferta', [\r\n    'angular.filter',\r\n    'requestManager',\r\n    'alertService',\r\n    'configService',\r\n    'flow',\r\n    'ngAnimate',\r\n    'vcRecaptcha',\r\n    'offerManager',\r\n    'pwCheckModule',\r\n    'ngMaterial',\r\n    'ngMessages',\r\n    'ngDropdowns',\r\n    'truncate',\r\n    'angular-cookie-law',\r\n    'ngCookies',\r\n    'slick'\r\n]);\r\n\r\n//main controller\r\naporlaofertaApp.controller('APorLaOfertaController', ['$scope', '$rootScope', function ($scope, $rootScope) {\r\n    $scope.keyHandler = function ($event) {\r\n        $rootScope.$broadcast('keydownControl', $event.keyCode);\r\n    };\r\n}]);\r\n\r\naporlaofertaApp.directive('ngConfirmClick', [\r\n    function () {\r\n        return {\r\n            link: function (scope, element, attr) {\r\n                var msg = attr.ngConfirmClick || \"\";\r\n                var clickAction = attr.confirmedClick;\r\n                element.bind('click', function (event) {\r\n                    if (window.confirm(msg)) {\r\n                        scope.$eval(clickAction)\r\n                    }\r\n                });\r\n\r\n                scope.time = new Date().getTime();\r\n                angular.element(document.body).bind(\"mousemove keypress\", function () {\r\n                    scope.time = new Date().getTime();\r\n                });\r\n\r\n                scope.minute=60000;\r\n                scope.refresh = function () {\r\n                    if (new Date().getTime() - scope.time >= 20*scope.minute)\r\n                        window.location.reload();\r\n                    else\r\n                        setTimeout(scope.refresh, 10*scope.minute);\r\n                }\r\n\r\n                setTimeout(scope.refresh, 10*scope.minute);\r\n            }\r\n        };\r\n    }]);\r\n\r\naporlaofertaApp.config(['flowFactoryProvider', function (flowFactoryProvider) {\r\n    flowFactoryProvider.defaults = {\r\n        target: 'uploadImage',\r\n        permanentErrors: [404, 500, 501],\r\n        maxChunkRetries: 1,\r\n        chunkRetryInterval: 5000,\r\n        simultaneousUploads: 4,\r\n        singleFile: true\r\n    };\r\n\r\n}]);\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/main/webapp/resources/js/main-controller/mainController.js\n ** module id = 5\n ** module chunks = 0\n **/","/**\r\n * Created by hasiermetal on 16/03/14.\r\n */\r\naporlaofertaApp\r\n    .directive('ngAccountCreation', function () {\r\n        return {\r\n            restrict: 'A',\r\n            templateUrl: 'resources/js/account/account-signup/createAccount.html',\r\n            scope: {\r\n                overheadDisplay: '=',\r\n                customCloseCallback: '=',\r\n                displayCallback: '='\r\n            },\r\n            controller: ['$scope', 'requestManager', 'configService', 'vcRecaptchaService', 'alertService',\r\n                function ($scope, requestManager, configService, vcRecaptchaService, alertService) {\r\n                    $scope.theUser = {};\r\n                    $scope.widgetId = null;\r\n                    $scope.publicKey = \"6LdqHQoTAAAAAAht2VhkrLGU26eBOjL-nK9zXxcn\";\r\n                    $scope.disableNickname = false;\r\n                    $scope.passwordUpdateRequired = true;\r\n                    $scope.validMail = /^[a-z]+[a-z0-9._]+@[a-z]+\\.[a-z.]{2,5}$/;\r\n                    $scope.validPassword= /^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d!$%@#£€*?&]{8,}$/;\r\n                    $scope.createAccount = function (theUser) {\r\n                        if (vcRecaptchaService.getResponse($scope.widgetId) === \"\") {\r\n                            $scope.displayErrorMessageAndDisplayAccount();\r\n                        }\r\n                        else {\r\n                            delete $scope.theUser.oldPassword;\r\n                            $scope.processing = true;\r\n                            requestManager.makePostCall(theUser, {recaptcha: vcRecaptchaService.getResponse($scope.widgetId)}, configService.getEndpoint('create.account'))\r\n                                .success(function (data, status, headers, config) {\r\n                                    $scope.processAccountResponse(data);\r\n                                }).error(function (data, status, headers, config) {\r\n                                    $scope.accountDefaultError();\r\n                                }).finally(function () {\r\n                                    $scope.processing = false;\r\n                                });\r\n                            $scope.theUser = {};\r\n                            $scope.userPassword2 = \"\";\r\n                            //$scope.overheadDisplay = false;\r\n                        }\r\n                    }\r\n                    $scope.displayErrorMessageAndDisplayAccount = function () {\r\n                        alertService.sendErrorMessage(\"Por favor, haga click en el captcha para demostrar que no es un robot\");\r\n                        $scope.restartRecaptcha();\r\n                        $scope.customCloseCallback = $scope.displayCallback;\r\n                    }\r\n                    $scope.processAccountResponse = function (data) {\r\n                        if (!alertService.isAllOk(data)) {\r\n                            $scope.accountError(data.descriptionEsp);\r\n                        }\r\n                        else {\r\n                            alertService.sendErrorMessage(data.descriptionEsp);\r\n                            $scope.customCloseCallback = false;\r\n                        }\r\n                        $scope.restartRecaptcha();\r\n                    }\r\n                    $scope.restartRecaptcha = function () {\r\n                        vcRecaptchaService.reload($scope.widgetId);\r\n                    }\r\n\r\n                    $scope.accountDefaultError = function () {\r\n                        alertService.sendDefaultErrorMessage();\r\n                        vcRecaptchaService.reload($scope.widgetId);\r\n                        $scope.customCloseCallback = $scope.displayCallback;\r\n                    }\r\n\r\n                    $scope.accountError = function (customMessage) {\r\n                        alertService.sendErrorMessage(customMessage);\r\n                        $scope.restartRecaptcha();\r\n                        $scope.customCloseCallback = $scope.displayCallback;\r\n                    };\r\n\r\n                    $scope.setWidgetId = function (widgetId) {\r\n                        $scope.widgetId = widgetId;\r\n                    };\r\n                }]\r\n        }\r\n    });\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/main/webapp/resources/js/account/account-signup/ngAccountCreationDirective.js\n ** module id = 6\n ** module chunks = 0\n **/","/**\r\n * Created by hasiermetal on 22/06/15.\r\n */\r\naporlaofertaApp\r\n    .directive('ngAccountUpdate', function () {\r\n        return {\r\n            restrict: 'A',\r\n            templateUrl: 'resources/js/account/account-signup/createAccount.html',\r\n            scope: {\r\n                overheadDisplay: '=',\r\n                customCloseCallback: '=',\r\n                displayCallback: '='\r\n            },\r\n            controller: ['$scope', 'vcRecaptchaService', 'alertService', '$http', 'requestManager', 'configService', '$rootScope',\r\n                function ($scope, vcRecaptchaService, alertService, http, requestManager, configService, $rootScope) {\r\n                    $scope.disableNickname = true;\r\n                    $scope.theUser = {};\r\n                    $scope.widgetId = null;\r\n                    $scope.passwordUpdateRequired = false;\r\n                    $scope.validMail = /^[a-z]+[a-z0-9._]+@[a-z]+\\.[a-z.]{2,5}$/;\r\n                    $scope.validPassword = /^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d!$%@#£€*?&]{8,}$/;\r\n                    $scope.publicKey = \"6LdqHQoTAAAAAAht2VhkrLGU26eBOjL-nK9zXxcn\";\r\n                    $scope.createAccount = function (theUser) {\r\n                        if (vcRecaptchaService.getResponse($scope.widgetId) === \"\") {\r\n                            $scope.displayErrorMessageAndDisplayAccount();\r\n                        }\r\n                        else {\r\n                            $scope.processing = true;\r\n                            requestManager.makePostCall(theUser, {recaptcha: vcRecaptchaService.getResponse($scope.widgetId)}, configService.getEndpoint('update.account'))\r\n                                .success(function (data, status, headers, config) {\r\n                                    if ($scope.processAccountResponse(data)) {\r\n                                        $rootScope.$broadcast('userAvatar', angular.copy(theUser));\r\n                                    }\r\n                                }).error(function (data, status, headers, config) {\r\n                                    $scope.accountDefaultError();\r\n                                })\r\n                                .finally(function () {\r\n                                    $scope.processing = false;\r\n                                    $scope.getUserDetails();\r\n                                    $scope.passwordUpdateRequired = false;\r\n                                });\r\n                            //$scope.theUser = {};\r\n                            //$scope.overheadDisplay = false;\r\n                        }\r\n                    }\r\n                    $scope.getUserDetails = function () {\r\n                        requestManager.makePostCall({}, {}, configService.getEndpoint('get.account.details'))\r\n                            .success(function (data, status, headers, config) {\r\n                                $scope.theUser = data;\r\n                            }).error(function (data, status, headers, config) {\r\n                                alertService.sendErrorMessage(\"No se ha podido obtener la información del usuario\");\r\n                                $scope.customCloseCallback = false;\r\n                            });\r\n                    }\r\n                    $scope.getUserDetails();\r\n\r\n                    $scope.resetPassword=function(){\r\n                        $scope.theUser.oldPassword=null;\r\n                        $scope.theUser.userPassword=null;\r\n                        $scope.userPassword2=null;\r\n                    }\r\n\r\n                    $scope.displayErrorMessageAndDisplayAccount = function () {\r\n                        alertService.sendErrorMessage(\"Por favor, haga click en el captcha para demostrar que no es un robot\");\r\n                        $scope.restartRecaptcha();\r\n                        $scope.customCloseCallback = $scope.displayCallback;\r\n                    }\r\n                    $scope.processAccountResponse = function (data) {\r\n                        if (!alertService.isAllOk(data)) {\r\n                            $scope.accountError(data.descriptionEsp);\r\n                        }\r\n                        else {\r\n                            alertService.sendErrorMessage(data.descriptionEsp);\r\n                            return true;\r\n                        }\r\n                        $scope.restartRecaptcha();\r\n                        return false;\r\n                    }\r\n\r\n                    $scope.accountDefaultError = function () {\r\n                        alertService.sendDefaultErrorMessage();\r\n                        $scope.restartRecaptcha();\r\n                        $scope.customCloseCallback = $scope.displayCallback;\r\n                    }\r\n\r\n                    $scope.accountError = function (customMessage) {\r\n                        alertService.sendErrorMessage(customMessage);\r\n                        $scope.restartRecaptcha();\r\n                        $scope.customCloseCallback = $scope.displayCallback;\r\n                    }\r\n                    $scope.setWidgetId = function (widgetId) {\r\n                        $scope.widgetId = widgetId;\r\n                    };\r\n                    $scope.restartRecaptcha = function () {\r\n                        vcRecaptchaService.reload($scope.widgetId);\r\n                    }\r\n                }]\r\n        }\r\n    });\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/main/webapp/resources/js/account/account-signup/ngAccountUpdateDirective.js\n ** module id = 7\n ** module chunks = 0\n **/","angular.module('pwCheckModule', [])\r\n    .directive('pwCheck', [function () {\r\n        return {\r\n            require: 'ngModel',\r\n            link: function (scope, elem, attrs, ctrl) {\r\n                var firstPassword = '#' + attrs.pwCheck;\r\n                elem.add(firstPassword).on('keyup', function () {\r\n                    scope.$apply(function () {\r\n                        var v = elem.val()===$(firstPassword).val();\r\n                        ctrl.$setValidity('pwmatch', v);\r\n                    });\r\n                });\r\n            }\r\n        }\r\n    }]);\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/main/webapp/resources/js/account/account-signup/pwdCheck.js\n ** module id = 8\n ** module chunks = 0\n **/","/**\r\n * Created by hasiermetal on 16/03/14.\r\n */\r\naporlaofertaApp\r\n    .directive('ngAccountLogin', function () {\r\n        return {\r\n            restrict: 'A',\r\n            templateUrl: 'view/login.jsp',\r\n            controller: ['$scope', 'requestManager', 'configService', 'alertService',\r\n                function ($scope, requestManager, configService, alertService) {\r\n                    $scope.validMail = /^[a-z]+[a-z0-9._]+@[a-z]+\\.[a-z.]{2,5}$/;\r\n                    $scope.requestPassword = function (userEmail) {\r\n                        $scope.processing = true;\r\n\r\n                        requestManager.makePostCall(userEmail, {userEmail: userEmail}, configService.getEndpoint('password.forgotten.request'))\r\n                            .success(function (data, status, headers, config) {\r\n                                $scope.processAccountResponse(data);\r\n                            }).error(function (data, status, headers, config) {\r\n                                $scope.accountDefaultError();\r\n                            }).finally(function () {\r\n                                $scope.processing = false;\r\n                            });\r\n                    }\r\n                    $scope.processAccountResponse = function (data) {\r\n                        alertService.sendErrorMessage(data.descriptionEsp);\r\n                        if ($scope.restartRecaptcha) {\r\n                            $scope.restartRecaptcha();\r\n                        }\r\n                    }\r\n                    $scope.accountDefaultError = function () {\r\n                        alertService.sendDefaultErrorMessage();\r\n                    }\r\n\r\n                }]\r\n        }\r\n    });\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/main/webapp/resources/js/account/account-login/ngAccountLoginDirective.js\n ** module id = 9\n ** module chunks = 0\n **/","/**\r\n * Created by hasiermetal on 16/03/14.\r\n */\r\naporlaofertaApp\r\n    .directive('ngAccountLogout', function () {\r\n        return {\r\n            restrict: 'A',\r\n            templateUrl: 'resources/js/account/account-logout/profile.jsp',\r\n            scope: {\r\n                accountUpdate: '='\r\n            },\r\n            controller: ['$scope', 'alertService', 'requestManager', 'configService', function ($scope, alertService, requestManager, configService) {\r\n                $scope.profileOptions = [\r\n                    {text: 'Actualizar perfil', value: 'accountUpdate'},\r\n                    {text: 'Cerrar sesión', value: 'formSubmit'}\r\n                ];\r\n                $scope.defaultProfileModel = {\r\n                    text: \"Opciones\"\r\n                };\r\n                $scope.profileModel = angular.copy($scope.defaultProfileModel);\r\n\r\n                $scope.$watch('profileModel', function () {\r\n                    if ($scope.profileModel.text !== \"Opciones\") {\r\n                        $scope[$scope.profileModel.value]();\r\n                        $scope.profileModel = angular.copy($scope.defaultProfileModel);\r\n                    }\r\n                });\r\n\r\n                $scope.getUserDetails = function () {\r\n                    requestManager.makePostCall({}, {}, configService.getEndpoint('get.account.details'))\r\n                        .success(function (data, status, headers, config) {\r\n                            $scope.userAvatar = data.userAvatar;\r\n                        }).error(function (data, status, headers, config) {\r\n                            alertService.sendErrorMessage(\"No se ha podido obtener la información del usuario\");\r\n                            $scope.customCloseCallback = false;\r\n                        });\r\n                }\r\n\r\n\r\n                $scope.getUserDetails();\r\n\r\n                $scope.formSubmit = function () {\r\n                    $scope.logoutForm.submit();\r\n                }\r\n\r\n                $scope.$on('userAvatar', function (event, args) {\r\n                    $scope.userAvatar = args.userAvatar;\r\n                });\r\n\r\n                $scope.formSubmit = function () {\r\n                    document.getElementById(\"logoutForm\").submit();\r\n                }\r\n            }]\r\n        }\r\n    });\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/main/webapp/resources/js/account/account-logout/ngAccountLogoutDirective.js\n ** module id = 10\n ** module chunks = 0\n **/","/**\r\n * Created by hasiermetal on 16/03/14.\r\n */\r\naporlaofertaApp\r\n    .directive('ngOfferList', function () {\r\n        return {\r\n            restrict: 'A',\r\n            templateUrl: 'resources/js/offer/offer-list/offerList.html',\r\n            scope: {\r\n                defaultList: '='\r\n            },\r\n            controller: ['$scope', 'offerManager',\r\n                function ($scope, offerManager) {\r\n                    $scope.offerList = [];\r\n                    $scope.moreOffersLoading = false;\r\n\r\n                    $scope.showMoreOffers = function (lastOffer) {\r\n                        $scope.moreOffersLoading = true;\r\n                        $scope.offerFilter.hot = $scope.defaultList === 'hottestOffers';\r\n                        if (!$scope.isCategorySelected()) {\r\n                            $scope.offerFilter.selectedcategory = \"\";\r\n                        }\r\n                        offerManager.requestMoreOffers($scope.offerFilter, lastOffer,\r\n                            function (data) {\r\n                                $scope.offerList = $scope.offerList.concat(data);\r\n                                $scope.moreOffersLoading = false;\r\n                            }, function () {\r\n                                $scope.moreOffersLoading = false;\r\n                            });\r\n                    }\r\n                    $scope.$on('offerList', function (event, args) {\r\n                        $scope.offerList = args;\r\n                    })\r\n\r\n                    $scope.showSpecifications = function (id) {\r\n                        offerManager.showSpecifications(id);\r\n                    }\r\n                    $scope.initialiseScrollyButtons = function () {\r\n                        $('.scrolly')\r\n                            .scrolly({\r\n                                speed: 1500\r\n                            });\r\n                    }\r\n                    $scope.parsePrice = function (price) {\r\n                        if(price){\r\n                            return price.toString().replace(/\\./, ',');\r\n                        }\r\n                    }\r\n                    $scope.isCategorySelected = function () {\r\n                        return $scope.offerFilter.selectedcategory != \"\"\r\n                            && $scope.offerFilter.selectedcategory != null\r\n                            && $scope.offerFilter.selectedcategory != undefined\r\n                            && $scope.offerFilter.selectedcategory != \"CATEGORÍA\";\r\n                    };\r\n                    $scope.initialiseScrollyButtons();\r\n                }]\r\n        }\r\n    });\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/main/webapp/resources/js/offer/offer-list/ngOfferListDirective.js\n ** module id = 11\n ** module chunks = 0\n **/","/**\r\n * Created by hasiermetal on 16/03/14.\r\n */\r\naporlaofertaApp\r\n    .directive('ngPromotionList', function () {\r\n        return {\r\n            restrict: 'A',\r\n            templateUrl: 'resources/js/offer/offer-list/promotionList.html',\r\n            controller: ['$scope', '$rootScope', 'offerManager',\r\n                function ($scope, $rootScope, offerManager) {\r\n                    $scope.shareUrl = \"www.aporlaoferta.com\";\r\n                    $scope.shareText = $(\"meta[property='og:description']\").attr(\"content\");\r\n                    $scope.defaultList = \"\";\r\n                    $scope.appliedOfferFilters = {};\r\n\r\n                    $scope.$on('appliedOfferFilters', function (event, args) {\r\n                        $scope.appliedOfferFilters = args;\r\n                    });\r\n\r\n                    $scope.requestNewestOffers = function () {\r\n                        offerManager.requestNewestOffers($scope.appliedOfferFilters);\r\n                        $scope.defaultList = 'newestOffers';\r\n                    }\r\n\r\n                    $scope.requestHottestOffers = function () {\r\n                        offerManager.requestHottestOffers($scope.appliedOfferFilters);\r\n                        $scope.defaultList = 'hottestOffers';\r\n                    }\r\n\r\n                    $scope.displayTutorialModal = function () {\r\n                        $rootScope.$broadcast('displayTutorial');\r\n                    }\r\n                }]\r\n        }\r\n    });\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/main/webapp/resources/js/offer/offer-list/ngPromotionListDirective.js\n ** module id = 12\n ** module chunks = 0\n **/","/**\r\n * Created by hasiermetal on 11/06/15.\r\n */\r\naporlaofertaApp\r\n    .directive('ngOfferSpecifications', function () {\r\n        return {\r\n            restrict: 'A',\r\n            templateUrl: 'resources/js/offer/offer-specifications/offerSpecifications.jsp',\r\n            scope: {\r\n                theOffer: '=',\r\n                customCloseCallback: '='\r\n            },\r\n            controller: ['offerManager', 'alertService', '$scope', '$rootScope', 'requestManager', 'configService',\r\n                function (offerManager, alertService, $scope, $rootScope, requestManager, configService) {\r\n                    $scope.sharePrefix = \"www.aporlaoferta.com/start?sh=\";\r\n                    $scope.sharePrice = \"€: \";\r\n                    $scope.commentsCustomCloseCallback = {};\r\n                    $scope.appliedOfferFilters = {};\r\n\r\n                    $scope.votePositive = function (id) {\r\n                        requestManager.makePostCall({}, {'offerId': id}, configService.getEndpoint('positive.feedback'))\r\n                            .success(function (data, status, headers, config) {\r\n                                $scope.sendMessageAndShowSpecifications(data, id, 'offerPositiveVote');\r\n                            }).error(function (data, status, headers, config) {\r\n                                $scope.sendDefaultErrorMessageAndShowSpecifications(id);\r\n                            });\r\n                    }\r\n                    $scope.voteNegative = function (id) {\r\n                        requestManager.makePostCall({}, {'offerId': id}, configService.getEndpoint('negative.feedback'))\r\n                            .success(function (data, status, headers, config) {\r\n                                $scope.sendMessageAndShowSpecifications(data, id, 'offerNegativeVote');\r\n                            }).error(function (data, status, headers, config) {\r\n                                $scope.sendDefaultErrorMessageAndShowSpecifications(id);\r\n                            });\r\n                    }\r\n                    $scope.sendMessageAndShowSpecifications = function (data, id, feedback) {\r\n                        if (!alertService.isAllOk(data)) {\r\n                            alertService.sendErrorMessage(data.descriptionEsp);\r\n                            $scope.customCloseCallback = function () {\r\n                                offerManager.showSpecifications(id);\r\n                            }\r\n                        }\r\n                        else {\r\n                            $scope.theOffer[0][feedback] = $scope.theOffer[0][feedback] + 1;\r\n                        }\r\n                    }\r\n                    $scope.sendDefaultErrorMessageAndShowSpecifications = function (id) {\r\n                        alertService.sendDefaultErrorMessage();\r\n                        $scope.customCloseCallback = function () {\r\n                            offerManager.showSpecifications(id);\r\n                        }\r\n                    }\r\n                    $scope.updateOffer = function (theOffer) {\r\n                        $rootScope.$broadcast('updateTheOffer', angular.copy(theOffer));\r\n                    }\r\n                    $scope.expireOffer = function (theOffer) {\r\n                        requestManager.makePostCall({}, {'id': theOffer.id}, configService.getEndpoint('expire.offer'))\r\n                            .success(function (data, status, headers, config) {\r\n                                if (!alertService.isAllOk(data)) {\r\n                                    $scope.offerCreationError(data.descriptionEsp);\r\n                                }\r\n                                else {\r\n                                    alertService.sendErrorMessage(data.descriptionEsp);\r\n                                    $scope.resetValues();\r\n                                    $scope.customCloseCallback = function () {\r\n                                        offerManager.requestNewestOffers($scope.appliedOfferFilters);\r\n                                    }\r\n                                }\r\n                            }).error(function (data, status, headers, config) {\r\n                                $scope.offerCreationError(alertService.getDefaultMessage());\r\n                            });\r\n                    }\r\n\r\n                    $scope.parsePrice = function (price) {\r\n                        if(price){\r\n                        return price.toString().replace(/\\./, ',');\r\n                        }\r\n                    }\r\n\r\n                    $scope.$on('commentsCustomCloseCallback', function (event, args) {\r\n                        var customCallback = args;\r\n                        $scope.customCloseCallback = customCallback;\r\n                    });\r\n\r\n                    $scope.$on('appliedOfferFilters', function (event, args) {\r\n                        $scope.appliedOfferFilters = args;\r\n                    });\r\n                }]\r\n        }\r\n    });\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/main/webapp/resources/js/offer/offer-specifications/ngOfferSpecifications.js\n ** module id = 13\n ** module chunks = 0\n **/","/**\r\n * Created by hasiermetal on 08/08/16.\r\n */\r\naporlaofertaApp\r\n    .directive('ngQuickTutorial', function () {\r\n        return {\r\n            restrict: 'A',\r\n            templateUrl: 'resources/js/header-display/tutorial/quickTutorial.jsp',\r\n            controller: ['$scope', '$element', '$rootScope', '$cookies', 'configService',\r\n                function ($scope, $element, $rootScope, $cookies, configService) {\r\n\r\n                    $scope.hideTutorial = function () {\r\n                        if ($cookies.get(configService.getEndpoint('aporlaoferta_cle')) === 'accepted') {\r\n                            $cookies.put(configService.getEndpoint('aporlaoferta_tutorial'), true);\r\n                        }\r\n                        $rootScope.$broadcast('closeResponse');\r\n                    };\r\n                }]\r\n        }\r\n    });\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/main/webapp/resources/js/header-display/tutorial/ngQuickTutorial.js\n ** module id = 14\n ** module chunks = 0\n **/","/**\r\n * Created by hasiermetal on 14/08/16.\r\n */\r\naporlaofertaApp\r\n    .directive('ngFooter', function () {\r\n        return {\r\n            restrict: 'A',\r\n            templateUrl: 'resources/js/footer/footer.jsp',\r\n            controller: ['$scope', '$rootScope',\r\n                function ($scope, $rootScope) {\r\n                    $scope.displayTutorialModal = function () {\r\n                        $rootScope.$broadcast('displayTutorial');\r\n                    }\r\n                }]\r\n        }\r\n    });\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/main/webapp/resources/js/footer/ngFooterDirective.js\n ** module id = 15\n ** module chunks = 0\n **/","/**\r\n * Created by hasiermetal on 11/06/15.\r\n */\r\naporlaofertaApp\r\n    .directive('ngOfferComments', function () {\r\n        return {\r\n            restrict: 'A',\r\n            templateUrl: 'resources/js/offer/offer-specifications/offer-comments/' +\r\n            'offerComments.jsp',\r\n            scope: {\r\n                theComments: '=',\r\n                theOffer: '=',\r\n                commentsCustomCloseCallback: '='\r\n            },\r\n            controller: ['$filter', 'alertService', '$scope', '$rootScope', 'requestManager', 'configService', 'offerManager',\r\n                function ($filter, alertService, $scope, $rootScope, requestManager, configService, offerManager) {\r\n                    $scope.quoteActionEnable = -1;\r\n                    $scope.qComment = {};\r\n                    $scope.comment = {};\r\n                    $scope.getQuotedComment = function (id, comments) {\r\n                        return $filter('filter')(comments, {id: id})[0];\r\n                    }\r\n                    $scope.quoteAction = function (id) {\r\n                        if ($scope.quoteActionEnable == id) {\r\n                            $scope.quoteActionEnable = -1;\r\n                        }\r\n                        else {\r\n                            $scope.quoteActionEnable = id;\r\n                        }\r\n                    }\r\n                    $scope.isQuoteActionEnabled = function (id) {\r\n                        return $scope.quoteActionEnable == id;\r\n                    }\r\n                    $scope.writeComment = function (comment, id) {\r\n                        $scope.processing = true;\r\n                        requestManager.makePostCall(comment, {'offer': id}, configService.getEndpoint('create.comment'))\r\n                            .success(function (data, status, headers, config) {\r\n                                $scope.sendMessageAndShowSpecifications(data.descriptionEsp);\r\n                            }).error(function (data, status, headers, config) {\r\n                                $scope.sendDefaultErrorMessageAndShowSpecifications();\r\n                            }).finally(function () {\r\n                                $scope.processing = false;\r\n                            });\r\n                    };\r\n                    $scope.quoteComment = function (comment, id) {\r\n                        $scope.processing = true;\r\n                        requestManager.makePostCall(comment, {'quotedComment': id}, configService.getEndpoint('quote.comment'))\r\n                            .success(function (data, status, headers, config) {\r\n                                $scope.sendMessageAndShowSpecifications(data.descriptionEsp);\r\n                            }).error(function (data, status, headers, config) {\r\n                                $scope.sendDefaultErrorMessageAndShowSpecifications();\r\n                            }).finally(function () {\r\n                                $scope.processing = false;\r\n                            });\r\n                    }\r\n\r\n                    $scope.sendMessageAndShowSpecifications = function (message) {\r\n                        //alertService.sendErrorMessage(message);\r\n                        //$scope.updateViewAndCloseCallback();\r\n                        $scope.restartCommentTexts();\r\n                        offerManager.showSpecifications($scope.theOffer);\r\n                    }\r\n                    $scope.sendDefaultErrorMessageAndShowSpecifications = function () {\r\n                        alertService.sendDefaultErrorMessage();\r\n                        $scope.updateViewAndCloseCallback();\r\n                    }\r\n                    $scope.updateViewAndCloseCallback = function () {\r\n                        $scope.commentsCustomCloseCallback = function () {\r\n                            offerManager.showSpecifications($scope.theOffer);\r\n                        }\r\n                        $rootScope.$broadcast('commentsCustomCloseCallback', $scope.commentsCustomCloseCallback);\r\n                        $scope.restartCommentTexts();\r\n                    }\r\n                    $scope.restartCommentTexts = function () {\r\n                        $scope.comment.commentText = \"\";\r\n                        $scope.qComment.commentText = \"\";\r\n                    }\r\n\r\n                }\r\n            ]\r\n        }\r\n    })\r\n;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/main/webapp/resources/js/offer/offer-specifications/offer-comments/ngOfferComments.js\n ** module id = 16\n ** module chunks = 0\n **/","/**\r\n * Created by hasiermetal on 26/06/15.\r\n */\r\naporlaofertaApp\r\n    .directive('ngOfferCommentsQuotes', function () {\r\n        return {\r\n            restrict: 'A',\r\n            templateUrl: 'resources/js/offer/offer-specifications/offer-comments/' +\r\n                'commentsQuotes.jsp',\r\n            scope: {\r\n                theComments: '=',\r\n                quotedComment: '='\r\n            },\r\n            controller: ['$rootScope', '$scope', 'requestManager', 'configService', function ($rootScope, $scope, requestManager, configService) {\r\n                $scope.quoteActionEnable = -1;\r\n                $scope.quoteAction = function (id) {\r\n                    if ($scope.quoteActionEnable == id) {\r\n                        $scope.quoteActionEnable = -1;\r\n                    }\r\n                    else {\r\n                        $scope.quoteActionEnable = id;\r\n                    }\r\n                }\r\n                $scope.isQuoteActionEnabled = function (id) {\r\n                    return $scope.quoteActionEnable == id;\r\n                }\r\n                $scope.quoteComment = function (comment, id) {\r\n                    requestManager.makePostCall(comment, {'quotedComment': id}, configService.getEndpoint('quote.comment'))\r\n                        .success(function (data, status, headers, config) {\r\n                            $rootScope.$broadcast('serverResponse', data);\r\n                            $scope.qComment.commentText=\"\";\r\n                        }).error(function (data, status, headers, config) {\r\n                            var theResponse = {};\r\n                            theResponse.description = data;\r\n                            theResponse.responseResult = \"error\";\r\n                            $rootScope.$broadcast('serverResponse', theResponse);\r\n                        });\r\n                };\r\n\r\n            }]\r\n        }\r\n    });\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/main/webapp/resources/js/offer/offer-specifications/offer-comments/ngOfferCommentsQuotes.js\n ** module id = 17\n ** module chunks = 0\n **/","/**\r\n * Created by hasiermetal on 16/03/14.\r\n */\r\naporlaofertaApp\r\n    .directive('ngOfferCreation', function () {\r\n        return {\r\n            restrict: 'A',\r\n            templateUrl: 'resources/js/offer/offer-creation/offerCreation.html',\r\n            scope: {\r\n                overheadDisplay: '=',\r\n                customCloseCallback: '=',\r\n                displayCallback: '='\r\n            },\r\n            controller: ['$scope', 'offerManager', 'requestManager', 'configService', 'alertService', 'vcRecaptchaService',\r\n                function ($scope, offerManager, requestManager, configService, alertService, vcRecaptchaService) {\r\n                    $scope.offer = {};\r\n                    $scope.widgetId = null;\r\n                    $scope.publicKey = \"6LdqHQoTAAAAAAht2VhkrLGU26eBOjL-nK9zXxcn\";\r\n                    $scope.resetCategory = true;\r\n                    $scope.appliedOfferFilters = {};\r\n\r\n                    $scope.createOffer = function () {\r\n                        if (vcRecaptchaService.getResponse($scope.widgetId) === \"\") {\r\n                            $scope.offerCreationError(\"Por favor, haga click en el captcha para demostrar que no es un robot\");\r\n                            vcRecaptchaService.reload($scope.widgetId);\r\n                        }\r\n                        else {\r\n                            $scope.processing = true;\r\n                            requestManager.makePostCall($scope.parseOffer(), {recaptcha: vcRecaptchaService.getResponse($scope.widgetId)}, configService.getEndpoint('create.offer'))\r\n                                .success(function (data, status, headers, config) {\r\n                                    if (!alertService.isAllOk(data)) {\r\n                                        $scope.offerCreationError(data.descriptionEsp);\r\n                                    }\r\n                                    else {\r\n                                        alertService.sendErrorMessage(data.descriptionEsp);\r\n                                        $scope.resetValues();\r\n                                        $scope.customCloseCallback = function () {\r\n                                            offerManager.requestNewestOffers($scope.appliedOfferFilters);\r\n                                        }\r\n                                    }\r\n                                }).error(function (data, status, headers, config) {\r\n                                    $scope.offerCreationError(alertService.getDefaultMessage());\r\n                                }).finally(function () {\r\n                                    $scope.processing = false;\r\n                                });\r\n                            //$scope.overheadDisplay = false;\r\n                        }\r\n                    };\r\n\r\n                    $scope.$on('appliedOfferFilters', function (event, args) {\r\n                        $scope.appliedOfferFilters = args;\r\n                    });\r\n\r\n                    $scope.parseOffer = function () {\r\n                        var theOffer = angular.copy($scope.offer);\r\n                        try {\r\n                            theOffer.originalPrice = parseFloat(theOffer.originalPrice.replace(/,/, '.'));\r\n                        } catch (e) {/*float already*/\r\n                        }\r\n                        try {\r\n                            theOffer.finalPrice = parseFloat(theOffer.finalPrice.replace(/,/, '.'));\r\n                        } catch (e) {/*float already*/\r\n                        }\r\n                        return theOffer;\r\n                    }\r\n\r\n                    $scope.restartRecaptcha = function () {\r\n                        vcRecaptchaService.reload($scope.widgetId);\r\n                    }\r\n\r\n                    $scope.offerCreationError = function (customMessage) {\r\n                        alertService.sendErrorMessage(customMessage);\r\n                        $scope.restartRecaptcha();\r\n                        $scope.customCloseCallback = $scope.displayCallback;\r\n                    }\r\n\r\n                    $scope.bigDecimalsOnly = /^\\-?\\d+((\\.|\\,)\\d+)?$/;\r\n                    $scope.resetValues = function () {\r\n                        $scope.restartRecaptcha();\r\n                        $scope.offer = {};\r\n                        $scope.brandNewCompany = false;\r\n                        $scope.resetCategory = true;\r\n                        $scope.resetCompany = true;\r\n                    };\r\n                    $scope.setWidgetId = function (widgetId) {\r\n                        $scope.widgetId = widgetId;\r\n                    };\r\n\r\n                    $scope.isCompanyDefined = function () {\r\n                        if ($scope.offer) {\r\n                            return $scope.offer.offerCompany != undefined && $scope.selectedcompany != \"\";\r\n                        }\r\n                    };\r\n                    $scope.isCategorySelected = function () {\r\n                        return $scope.offer.offerCategory != \"\"\r\n                            && $scope.offer.offerCategory != null\r\n                            && $scope.offer.offerCategory != undefined\r\n                            && $scope.offer.offerCategory != \"CATEGORÍA\";\r\n                    };\r\n                    $scope.selectionPerformed = function () {\r\n                        return $scope.isCompanyDefined() && $scope.isCategorySelected();\r\n                    }\r\n                }]\r\n        }\r\n    });\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/main/webapp/resources/js/offer/offer-creation/ngOfferCreationDirective.js\n ** module id = 18\n ** module chunks = 0\n **/","/**\r\n * Created by hasiermetal on 16/03/14.\r\n */\r\naporlaofertaApp\r\n    .directive('ngOfferUpdate', function () {\r\n        return {\r\n            restrict: 'A',\r\n            templateUrl: 'resources/js/offer/offer-creation/offerCreation.html',\r\n            scope: {\r\n                overheadDisplay: '=',\r\n                customCloseCallback: '=',\r\n                displayCallback: '=',\r\n                offer: \"=\"\r\n            },\r\n            controller: ['$scope', 'offerManager', 'requestManager', 'configService', 'alertService', 'vcRecaptchaService',\r\n                function ($scope, offerManager, requestManager, configService, alertService, vcRecaptchaService) {\r\n                    $scope.widgetId = null;\r\n                    $scope.publicKey = \"6LdqHQoTAAAAAAht2VhkrLGU26eBOjL-nK9zXxcn\";\r\n                    $scope.createOffer = function () {\r\n                        if (vcRecaptchaService.getResponse($scope.widgetId) === \"\") {\r\n                            $scope.offerCreationError(\"Por favor, haga click en el captcha para demostrar que no es un robot\");\r\n                            vcRecaptchaService.restartRecaptcha();\r\n                        }\r\n                        else {\r\n                            $scope.processing = true;\r\n                            requestManager.makePostCall($scope.parseOffer(), {recaptcha: vcRecaptchaService.getResponse($scope.widgetId)}, configService.getEndpoint('update.offer'))\r\n                                .success(function (data, status, headers, config) {\r\n                                    if (!alertService.isAllOk(data)) {\r\n                                        $scope.offerCreationError(data.descriptionEsp);\r\n                                    }\r\n                                    else {\r\n                                        alertService.sendErrorMessage(data.descriptionEsp);\r\n                                        $scope.resetValues();\r\n                                        $scope.customCloseCallback = function () {\r\n                                            offerManager.requestNewestOffers($scope.appliedOfferFilters);\r\n                                        }\r\n                                    }\r\n                                }).error(function (data, status, headers, config) {\r\n                                    $scope.offerCreationError(alertService.getDefaultMessage());\r\n                                }).finally(function () {\r\n                                    $scope.processing = false;\r\n                                });\r\n                            //$scope.overheadDisplay = false;\r\n                        }\r\n                    };\r\n\r\n                    $scope.parseOffer = function () {\r\n                        var theOffer = angular.copy($scope.offer);\r\n                        try {\r\n                            theOffer.originalPrice = parseFloat(theOffer.originalPrice.replace(/,/, '.'));\r\n                        } catch (e) {/*float already*/\r\n                        }\r\n                        try {\r\n                            theOffer.finalPrice = parseFloat(theOffer.finalPrice.replace(/,/, '.'));\r\n                        } catch (e) {/*float already*/\r\n                        }\r\n                        return theOffer;\r\n                    }\r\n\r\n                    $scope.restartRecaptcha = function () {\r\n                        vcRecaptchaService.reload($scope.widgetId);\r\n                    }\r\n\r\n                    $scope.offerCreationError = function (customMessage) {\r\n                        alertService.sendErrorMessage(customMessage);\r\n                        $scope.restartRecaptcha();\r\n                        $scope.customCloseCallback = $scope.displayCallback;\r\n                    }\r\n\r\n                    $scope.bigDecimalsOnly = /^\\-?\\d+((\\.|\\,)\\d+)?$/;\r\n                    $scope.resetValues = function () {\r\n                        $scope.restartRecaptcha();\r\n                        $scope.offer = {};\r\n                        $scope.brandNewCompany = false;\r\n                        $scope.resetCategory = true;\r\n                        $scope.resetCompany = true;\r\n                    };\r\n                    $scope.setWidgetId = function (widgetId) {\r\n                        $scope.widgetId = widgetId;\r\n                    };\r\n\r\n                    $scope.isCompanyDefined = function () {\r\n                        if ($scope.offer) {\r\n                            return $scope.offer.offerCompany != undefined && $scope.selectedcompany != \"\";\r\n                        }\r\n                    };\r\n                    $scope.isCategorySelected = function () {\r\n                        return $scope.offer\r\n                            && $scope.offer.offerCategory != \"\"\r\n                            && $scope.offer.offerCategory != null\r\n                            && $scope.offer.offerCategory != undefined\r\n                            && $scope.offer.offerCategory != \"CATEGORÍA\";\r\n                    };\r\n                    $scope.selectionPerformed = function () {\r\n                        return $scope.isCompanyDefined() && $scope.isCategorySelected();\r\n                    }\r\n                }]\r\n        }\r\n    });\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/main/webapp/resources/js/offer/offer-creation/ngOfferUpdateDirective.js\n ** module id = 19\n ** module chunks = 0\n **/","/**\r\n * Created by hasiermetal on 16/03/14.\r\n */\r\naporlaofertaApp\r\n    .directive('ngCompanyManager', function () {\r\n        return {\r\n            restrict: 'A',\r\n            templateUrl: 'resources/js/offer/offer-creation/companyManagement.html',\r\n            scope: {\r\n                reset: '=',\r\n                selectedcompany: '='\r\n            },\r\n            controller: ['$rootScope', '$scope', 'requestManager', 'configService', function ($rootScope, $scope, requestManager, configService) {\r\n                $scope.offerCompanies = {};\r\n\r\n                $scope.populateCompanyList = function () {\r\n                    requestManager.makePostCall({}, {}, configService.getEndpoint('get.companies'))\r\n                        .success(function (data, status, headers, config) {\r\n                            $scope.offerCompanies = angular.copy(data);\r\n                        }).error(function (data, status, headers, config) {\r\n                            var theResponse = {};\r\n                            theResponse.description = data;\r\n                            theResponse.responseResult = \"error\";\r\n                            $rootScope.$broadcast('serverResponse', theResponse);\r\n                        });\r\n                };\r\n\r\n                $scope.searchCompanyChange = function (companyName) {\r\n                    if (companyName != \"\") {\r\n                        $scope.selectedcompany = {companyName: companyName}\r\n                    }\r\n                }\r\n                $scope.selectedItemChange = function (company) {\r\n                    $scope.selectedcompany = company\r\n                }\r\n\r\n                $scope.$watch('reset', function () {\r\n                    if ($scope.reset) {\r\n                        $scope.selectedcompany = \"\";\r\n                        $scope.searchCompany = \"\";\r\n                    }\r\n                    $scope.reset = false;\r\n                });\r\n\r\n                $scope.querySearch = function (company) {\r\n                    if ($scope.offerCompanies.length > 0) {\r\n                        return company ? $scope.offerCompanies.filter($scope.createFilterFor(company)) : $scope.offerCompanies;\r\n                    }\r\n                };\r\n\r\n                $scope.createFilterFor = function (companyName) {\r\n                    var lowercaseQuery = angular.lowercase(companyName);\r\n                    return function filterFn(company) {\r\n                        return (angular.lowercase(company.companyName)\r\n                            .indexOf(lowercaseQuery) === 0);\r\n                    };\r\n                };\r\n\r\n                $scope.populateCompanyList();\r\n            }]\r\n        }\r\n    });\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/main/webapp/resources/js/offer/offer-creation/ngCompanyManagerDirective.js\n ** module id = 20\n ** module chunks = 0\n **/","/**\r\n * Created by hasiermetal on 16/03/14.\r\n */\r\naporlaofertaApp\r\n    .directive('ngOfferCategoryManager', function () {\r\n        return {\r\n            restrict: 'A',\r\n            templateUrl: 'resources/js/offer/offer-creation/offerCategoryManagement.html',\r\n            scope: {\r\n                reset: '=',\r\n                selectedcategory: '=',\r\n                includeAll: '='\r\n            },\r\n            controller: ['$rootScope', '$scope', 'requestManager', 'configService', function ($rootScope, $scope, requestManager, configService) {\r\n                $scope.offerCategories = {};\r\n                $scope.offerCategory = {\r\n                    text: \"CATEGORÍA\"\r\n                };\r\n                $scope.populateAllCategories = function () {\r\n                    requestManager.makePostCall({}, {}, configService.getEndpoint('get.offer.categories'))\r\n                        .success(function (data, status, headers, config) {\r\n                            $scope.offerCategories = angular.copy(data);\r\n                            if ($scope.includeAll) {\r\n                                $scope.offerCategories.push({text: \"TODAS\", value: \"\"})\r\n                            }\r\n                        }).error(function (data, status, headers, config) {\r\n                            var theResponse = {};\r\n                            theResponse.description = data;\r\n                            theResponse.responseResult = \"error\";\r\n                            $rootScope.$broadcast('serverResponse', theResponse);\r\n                        });\r\n                }\r\n                $scope.onCategoryChange = function (category) {\r\n                    $scope.selectedcategory = category;\r\n                }\r\n                $scope.populateAllCategories();\r\n                $scope.$watch('reset', function () {\r\n                    if ($scope.reset) {\r\n                        $scope.offerCategory = {\r\n                            text: \"CATEGORÍA\"\r\n                        };\r\n                    }\r\n                    $scope.reset = false;\r\n                });\r\n                $scope.$watch('offerCategory', function () {\r\n                    $scope.selectedcategory = $scope.offerCategory.text;\r\n                });\r\n                $scope.isCategorySelected = function () {\r\n                    return $scope.category != \"\"\r\n                        && $scope.category != null\r\n                        && $scope.category != undefined;\r\n                };\r\n            }]\r\n        }\r\n    });\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/main/webapp/resources/js/offer/offer-creation/ngOfferCategoryManagerDirective.js\n ** module id = 21\n ** module chunks = 0\n **/","/**\r\n * Created by hasiermetal on 30/06/15.\r\n */\r\naporlaofertaApp\r\n    .directive('ngOfferFilter', function () {\r\n        return {\r\n            restrict: 'A',\r\n            templateUrl: 'resources/js/offer/offer-filter/offerFilter.html',\r\n            scope: {\r\n                offerList: '=',\r\n                selection: '=',\r\n                offerFilter: '='\r\n            },\r\n            controller: ['$scope', '$rootScope', 'requestManager', 'configService', function ($scope, $rootScope, requestManager, configService) {\r\n                $scope.filter = {};\r\n                $scope.displayFilterContent = \"\";\r\n                $scope.previousCategory = \"all\";\r\n\r\n                $scope.requestFilterApply = function () {\r\n                    $scope.processing = true;\r\n                    $scope.filter.hot = $scope.selection === 'hottestOffers';\r\n                    if (!$scope.isCategorySelected()) {\r\n                        $scope.filter.selectedcategory = \"\";\r\n                    }\r\n                    $scope.offerFilter = angular.copy($scope.filter);\r\n                    if ($scope.offerFilter.text.length < 3) {\r\n                        $scope.offerFilter.text = \"\";\r\n                    }\r\n                    $rootScope.$broadcast('appliedOfferFilters', angular.copy($scope.offerFilter));\r\n                    requestManager.makePostCall($scope.offerFilter, {}, configService.getEndpoint('get.filtered.offers'))\r\n                        .success(function (data, status, headers, config) {\r\n                            $scope.offerList = data.theOffers;\r\n                        }).error(function (data, status, headers, config) {\r\n                            var theResponse = {};\r\n                            theResponse.description = data;\r\n                            theResponse.responseResult = \"error\";\r\n                            $rootScope.$broadcast('serverResponse', theResponse);\r\n                        }).finally(function () {\r\n                            $scope.processing = false;\r\n                        });\r\n                };\r\n\r\n                $scope.$watch('filter.dateRange', function () {\r\n                    $scope.requestFilterApply();\r\n                });\r\n\r\n                $scope.searchCriteriaChanged = function () {\r\n                    $scope.offerFilter = angular.copy($scope.filter);\r\n                    if ($scope.filter.text.length > 2 || $scope.filter.text.length==0) {\r\n                        $scope.requestFilterApply();\r\n                    }\r\n                };\r\n\r\n                $scope.$watch('filter.selectedcategory', function () {\r\n                    if ($scope.previousCategory !== $scope.filter.selectedcategory) {\r\n                        $scope.previousCategory = $scope.filter.selectedcategory;\r\n                        $scope.requestFilterApply();\r\n                    }\r\n                });\r\n\r\n                $scope.cleanFilters = function () {\r\n                    $scope.filter.expired = false;\r\n                    $scope.filter.text = \"\";\r\n                    $scope.resetCategory = true;\r\n                    $scope.filter.selectedcategory = \"\";\r\n                    $scope.filter.selectedcategory = \"\";\r\n                    $scope.filter.dateRange = 1;\r\n//                    $scope.requestFilterApply();\r\n                    $rootScope.$broadcast('appliedOfferFilters', angular.copy($scope.offerFilter));\r\n                };\r\n\r\n                $scope.displayFilterContents = function () {\r\n                    $scope.displayFilterContent = ($scope.displayFilterContent == 'filters-displayed') ?\r\n                        'filters-hidden' : 'filters-displayed';\r\n                };\r\n                $scope.isCategorySelected = function () {\r\n                    return $scope.filter.selectedcategory != \"\"\r\n                        && $scope.filter.selectedcategory != null\r\n                        && $scope.filter.selectedcategory != undefined\r\n                        && $scope.filter.selectedcategory != \"CATEGORÍA\"\r\n                        && $scope.filter.selectedcategory != \"TODAS\";\r\n                };\r\n                $scope.cleanFilters();\r\n            }]\r\n        }\r\n    });\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/main/webapp/resources/js/offer/offer-filter/ngOfferFilterDirective.js\n ** module id = 22\n ** module chunks = 0\n **/","/**\r\n * Created by hasiermetal on 16/03/14.\r\n */\r\naporlaofertaApp\r\n    .directive('ngOverheadDisplay', function () {\r\n        return {\r\n            restrict: 'A',\r\n            templateUrl: 'resources/js/header-display/headDisplay.jsp',\r\n            scope: {\r\n                specificOffer: '@',\r\n                overheadVisible: '=',\r\n                noAccounts: '='\r\n            },\r\n            controller: ['$scope', 'offerManager', '$timeout', '$cookies',\r\n                function ($scope, $offerManager, $timeout, $cookies) {\r\n                    $scope.customCloseCallback = {};\r\n                    $scope.theResponse = {};\r\n                    $scope.fullscreen = false;\r\n                    $scope.displayLogin = function () {\r\n                        $scope.setDefaultVisibility();\r\n                        $scope.displayAccountLogin = true;\r\n                        $scope.overheadVisible = true;\r\n                    };\r\n                    $scope.displaySignup = function () {\r\n                        $scope.setDefaultVisibility();\r\n                        $scope.displayAccountCreation = true;\r\n                        $scope.overheadVisible = true;\r\n                    };\r\n                    $scope.displayAccountUpdateForm = function () {\r\n                        $scope.setDefaultVisibility();\r\n                        $scope.displayAccountUpdate = true;\r\n                        $scope.overheadVisible = true;\r\n                    };\r\n                    $scope.displayOfferCreate = function () {\r\n                        $scope.setDefaultVisibility();\r\n                        $scope.displayOfferCreation = true;\r\n                        $scope.overheadVisible = true;\r\n                    };\r\n                    $scope.displayOfferUpdate = function () {\r\n                        $scope.setDefaultVisibility();\r\n                        $scope.displayOfferToBeUpdate = true;\r\n                        $scope.overheadVisible = true;\r\n                    };\r\n                    $scope.displayOfferDetails = function () {\r\n                        $scope.setDefaultVisibility();\r\n                        $scope.displayOfferSpecifications = true;\r\n                        $scope.overheadVisible = true;\r\n                    };\r\n                    $scope.displayServerResponse = function () {\r\n                        $scope.setDefaultVisibility();\r\n                        $scope.displayResponseFromServer = true;\r\n                        $scope.overheadVisible = true;\r\n                    }\r\n                    $scope.displayTutorialDiagram = function () {\r\n                        $scope.setDefaultVisibility();\r\n                        $scope.displayTutorial = true;\r\n                        $scope.overheadVisible = true;\r\n                    }\r\n                    $scope.setDefaultVisibility = function () {\r\n                        $scope.overheadVisible = false;\r\n                        $scope.displayOfferCreation = false;\r\n                        $scope.displayOfferToBeUpdate = false;\r\n                        $scope.displayAccountLogin = false;\r\n                        $scope.displayAccountCreation = false;\r\n                        $scope.displayAccountUpdate = false;\r\n                        $scope.displayOfferSpecifications = false;\r\n                        $scope.displayResponseFromServer = false;\r\n                        $scope.displayTutorial = false;\r\n                    };\r\n                    $scope.closeOverheadDisplay = function (customCloseCallback) {\r\n                        $scope.overheadVisible = false;\r\n                        if (typeof customCloseCallback == \"function\") {\r\n                            customCloseCallback();\r\n                            $scope.customCloseCallback = {};\r\n                        }\r\n                    };\r\n                    $scope.$watch('specificOffer', function () {\r\n                        if (/^\\d+$/.exec($scope.specificOffer) != null) {\r\n                            $scope.fullscreen = true;\r\n                            $scope.customCloseCallback = function () {\r\n                                $scope.fullscreen = false;\r\n                            };\r\n                            $offerManager.showSpecifications($scope.specificOffer);\r\n                        }\r\n                    });\r\n                    $scope.$on('offerSpecifications', function (event, args) {\r\n                        $scope.offerSpecifications = args;\r\n                        $scope.displayOfferDetails();\r\n                        $scope.customCloseCallback = function () {\r\n                            $timeout(function () {\r\n                                $scope.offerSpecifications = [];\r\n                            }, 100);\r\n                            $scope.fullscreen = false;\r\n                        }\r\n\r\n                    });\r\n\r\n                    $scope.$on('updateTheOffer', function (event, args) {\r\n                        $scope.offerSpecifications = [args];\r\n                        $scope.customCloseCallback = function () {\r\n                            $scope.displayOfferDetails();\r\n                        }\r\n                        $scope.displayOfferUpdate();\r\n                    });\r\n\r\n                    $scope.$on('closeResponse', function () {\r\n                        $scope.setDefaultVisibility();\r\n                    });\r\n\r\n                    $scope.$on('serverResponse', function (event, args) {\r\n                        $scope.theResponse = args;\r\n                        $scope.displayServerResponse();\r\n\r\n                    });\r\n\r\n                    $scope.$on('displayTutorial', function () {\r\n                        $scope.displayTutorialDiagram();\r\n                    });\r\n\r\n                    $scope.$on('keydownControl', function (event, args) {\r\n                        var keyDownCode = args;\r\n                        if (keyDownCode == 27) {\r\n                            $scope.justCloseOverheadDisplay();\r\n                        }\r\n                    });\r\n\r\n                    $scope.justCloseOverheadDisplay = function () {\r\n                        $scope.customCloseCallback = {};\r\n                        $scope.closeOverheadDisplay();\r\n                        $scope.fullscreen = false;\r\n                    }\r\n\r\n                    $scope.checkForErrors = function () {\r\n                        if (document.getElementById(\"errorMessage\")) {\r\n                            var errorMessage = document.getElementById(\"errorMessage\").value;\r\n                            if (typeof errorMessage != undefined && errorMessage != '') {\r\n                                var theResponse = {};\r\n                                theResponse.descriptionEsp = errorMessage;\r\n                                theResponse.responseResult = \"error\";\r\n                                $scope.theResponse = theResponse;\r\n                                $scope.displayServerResponse();\r\n                            }\r\n                        }\r\n                    };\r\n\r\n                    $scope.setDefaultVisibility();\r\n                    $scope.checkForErrors();\r\n\r\n                    $timeout(function () {\r\n                        angular.element($('#overheadSubContainer')).removeClass('hiddencontainer');\r\n                    }, 100);\r\n                }]\r\n        }\r\n    });\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/main/webapp/resources/js/header-display/ngHeadDisplayDirective.js\n ** module id = 23\n ** module chunks = 0\n **/","/**\r\n * Created by hasiermetal on 19/06/16.\r\n */\r\naporlaofertaApp\r\n    .directive('ngHeadAccountAndOfferManagement', ['$window', '$anchorScroll', function ($window, $anchorScroll) {\r\n        return {\r\n            restrict: 'A',\r\n            templateUrl: 'resources/js/header-display/headAccountAndOfferManagement.jsp',\r\n            scope: {\r\n                displayLogin: '=',\r\n                displaySignup: '=',\r\n                displayOfferCreate: '=',\r\n                displayAccountUpdateForm: '='\r\n            },\r\n            link: function ($scope) {\r\n                $scope.scrollPosition = true;\r\n                angular.element($window).bind(\"scroll\", function () {\r\n                    $scope.scrollPosition = this.pageYOffset <= 50;\r\n                    $scope.$apply();\r\n                });\r\n                $scope.toTheTop = function () {\r\n                    $anchorScroll();\r\n                }\r\n            }\r\n        }\r\n    }]);\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/main/webapp/resources/js/header-display/ngHeadAccountAndOfferManagementDirective.js\n ** module id = 24\n ** module chunks = 0\n **/","/**\r\n * Created by hasiermetal on 10/08/16.\r\n */\r\naporlaofertaApp\r\n    .directive('ngMainSlogan', function () {\r\n        return {\r\n            restrict: 'A',\r\n            templateUrl: 'resources/js/header-display/mainSlogan.html',\r\n            controller: ['$scope', '$timeout',\r\n                function ($scope, $timeout) {\r\n                    $timeout(function () {\r\n                        $scope.faded=true;\r\n                    }, 1200);\r\n                }]\r\n        }\r\n    });\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/main/webapp/resources/js/header-display/ngMainSlogan.js\n ** module id = 25\n ** module chunks = 0\n **/","/**\r\n * Created by hasiermetal on 19/06/15.\r\n */\r\naporlaofertaApp\r\n    .directive('ngImageUploader', function () {\r\n        return {\r\n            restrict: 'A',\r\n            scope: {\r\n                finalUrl: '=',\r\n                alreadyUploadedImage: '='\r\n            },\r\n            templateUrl: 'resources/js/uploader/imageUpload.html',\r\n            controller: ['$rootScope', '$scope', 'configService', '$timeout', function ($rootScope, $scope, configService, $timeout) {\r\n                $scope.uploader = {};\r\n                $scope.displayThumbnail = true;\r\n                $scope.invalidSize = false;\r\n                $scope.invalidImage = false;\r\n                $scope.maxImageSize = configService.getEndpoint('max.image.size');\r\n                $scope.alreadyUploadedImage=\"\";\r\n                $scope.fileAdded = function (file) {\r\n                    var fileReader = new FileReader();\r\n                    fileReader.onload = function (event) {\r\n                        var img = new Image();\r\n                        $scope.alreadyUploadedImage=\"\";\r\n                        img.onerror = function () {\r\n                            $scope.displayInvalidImageMessage();\r\n                            return false;\r\n                        };\r\n                        img.onload = function () {\r\n                            if (this.width > $scope.maxImageSize ||\r\n                                this.height > $scope.maxImageSize\r\n                                ) {\r\n                                $scope.displayInvalidImageSizeMessage();\r\n                                return false;\r\n                            }\r\n                            $scope.uploader.flow.upload();\r\n                            $scope.defaultThumbnailView();\r\n                        };\r\n                        img.src = event.target.result;\r\n                    };\r\n                    fileReader.readAsDataURL(file.file);\r\n                };\r\n\r\n                $scope.deleteImage=function(){\r\n                    $scope.alreadyUploadedImage = \"\";\r\n                    $scope.uploader.flow.cancel();\r\n                }\r\n\r\n                $scope.changeImage=function(){\r\n                    $scope.alreadyUploadedImage = \"\";\r\n                }\r\n\r\n                $scope.alreadyUploaded = function () {\r\n                    return $scope.alreadyUploadedImage !== \"\";\r\n                }\r\n\r\n                $scope.defaultThumbnailView = function () {\r\n                    $scope.displayThumbnail = true;\r\n                    $scope.invalidImage = false;\r\n                    $scope.invalidSize = false;\r\n                };\r\n\r\n                $scope.filesIsUploaded = function (message) {\r\n                    var responseResult = JSON.parse(message);\r\n                    if (responseResult.code == 0) {\r\n                        $scope.finalUrl = responseResult.description;\r\n                    }\r\n                    else {\r\n                        $scope.handleUploadError(responseResult);\r\n                    }\r\n                };\r\n                $scope.handleUploadError = function (error) {\r\n                    $rootScope.$broadcast('serverResponse', error);\r\n                };\r\n                $scope.$watch('finalUrl', function (newValue, oldValue) {\r\n                    if (newValue === \"\" || typeof newValue === 'undefined') {\r\n                        $scope.uploader.flow.cancel();\r\n                    }\r\n                });\r\n\r\n                $scope.isInvalidThumbnailShown = function () {\r\n                    return $scope.invalidImage || $scope.invalidSize;\r\n                };\r\n\r\n                $scope.displayInvalidImageSizeMessage = function () {\r\n                    $scope.defaultThumbnailView();\r\n                    $scope.invalidSize = true;\r\n                    $scope.displayThumbnail = false;\r\n                    $timeout(function () {\r\n                        $scope.uploader.flow.cancel();\r\n                    }, 500);\r\n                };\r\n                $scope.displayInvalidImageMessage = function () {\r\n                    $scope.defaultThumbnailView();\r\n                    $scope.invalidImage = true;\r\n                    $scope.displayThumbnail = false;\r\n                    $timeout(function () {\r\n                        $scope.uploader.flow.cancel();\r\n                    }, 500);\r\n                }\r\n            }]\r\n        }\r\n    });\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/main/webapp/resources/js/uploader/ngImageUploadDirective.js\n ** module id = 26\n ** module chunks = 0\n **/","/**\r\n * Created by hasiermetal on 22/06/15.\r\n */\r\naporlaofertaApp\r\n    .directive('ngResponseFromServer', function () {\r\n        return {\r\n            restrict: 'A',\r\n            templateUrl: 'resources/js/response/serverResponse.html',\r\n            scope: {\r\n                theResponse: '='\r\n            }\r\n        }\r\n    });\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/main/webapp/resources/js/response/ngResponseFromServer.js\n ** module id = 27\n ** module chunks = 0\n **/","/**\r\n * Created by hasiermetal on 16/03/14.\r\n */\r\naporlaofertaApp\r\n    .directive('ngSocialMedia', function () {\r\n        return {\r\n            restrict: 'A',\r\n            templateUrl: 'resources/js/social/socialMedia.html',\r\n            scope: {\r\n                shareUrl: '=',\r\n                shareText: '='\r\n            },\r\n            controller: ['$scope',\r\n                function ($scope) {\r\n                    $scope.facebookUrl = \"https://www.facebook.com/sharer/sharer.php?u=\" + $scope.shareUrl;\r\n                    $scope.twitterUrl = \"https://twitter.com/intent/tweet?url=\" +\r\n                        $scope.shareUrl + \"&text=\" + $scope.shareText + \"&via=aporlaoferta\";\r\n                    $scope.googlePlusUrl = \"https://plus.google.com/share?url=\" + $scope.shareUrl\r\n                }]\r\n\r\n        }\r\n    });\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/main/webapp/resources/js/social/ngSocialMediaDirective.js\n ** module id = 28\n ** module chunks = 0\n **/","/**\r\n * Created by hasiermetal on 14/05/16.\r\n */\r\naporlaofertaApp\r\n    .directive('ngRedirectComponents', function () {\r\n        return {\r\n            restrict: 'A',\r\n            templateUrl: 'resources/js/error/redirectComponents.html'\r\n        }\r\n    });\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/main/webapp/resources/js/error/ngRedirectComponents.js\n ** module id = 29\n ** module chunks = 0\n **/","/**\r\n * Created by hasiermetal on 16/03/14.\r\n */\r\naporlaofertaApp\r\n    .directive('ngPasswordForgotten', function () {\r\n        return {\r\n            restrict: 'A',\r\n            templateUrl: 'resources/js/account/password-forgotten/forgottenForm.html',\r\n            scope: {\r\n                uuid: '=',\r\n                nick: '=',\r\n                customCloseCallback: '='\r\n            },\r\n            controller: ['$scope', '$http', 'requestManager', 'configService', 'alertService',\r\n                function ($scope, http, requestManager, configService, alertService) {\r\n                    $scope.validPassword= /^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d!$%@#£€*?&]{8,}$/;\r\n                    $scope.theUser = {userNickname: $scope.nick, uuid: $scope.uuid};\r\n                    $scope.updatePassword = function (theUser) {\r\n                        $scope.processing=true;\r\n                        requestManager.makePostCall(theUser, {}, configService.getEndpoint('password.forgotten'))\r\n                            .success(function (data, status, headers, config) {\r\n                                $scope.processPasswordResponse(data)\r\n                            }).error(function (data, status, headers, config) {\r\n                                alertService.sendDefaultErrorMessage();\r\n                            }).finally(function(){\r\n                                $scope.processing=false;\r\n                            });\r\n                        $scope.theUser = {userNickname: $scope.nick, uuid: $scope.uuid};\r\n                    }\r\n                    $scope.processPasswordResponse = function (data) {\r\n                        if(alertService.isAllOk(data)){\r\n                            $scope.customCloseCallback = function(){\r\n                                window.location.replace(\"/\");\r\n                            };\r\n                        }\r\n                        alertService.sendErrorMessage(data.descriptionEsp);\r\n                    }\r\n                }]\r\n        }\r\n    });\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/main/webapp/resources/js/account/password-forgotten/ngPasswordForgottenDirective.js\n ** module id = 30\n ** module chunks = 0\n **/","require(\"./loader.scss\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/main/webapp/resources/sass/loader.js\n ** module id = 31\n ** module chunks = 0\n **/"],"sourceRoot":""}