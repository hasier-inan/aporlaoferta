{"version":3,"sources":["webpack:///bundle.js","webpack:///webpack/bootstrap b57977ee02766ff45278","webpack:///./src/main/webapp/resources/js/request-handler/requestManagerService.js","webpack:///./src/main/webapp/resources/js/config/configService.js","webpack:///./src/main/webapp/resources/js/response/alertService.js","webpack:///./src/main/webapp/resources/js/offer/offer-list/offerManagerService.js","webpack:///./src/main/webapp/resources/js/main-controller/mainController.js","webpack:///./src/main/webapp/resources/js/account/account-signup/ngAccountCreationDirective.js","webpack:///./src/main/webapp/resources/js/account/account-signup/ngAccountUpdateDirective.js","webpack:///./src/main/webapp/resources/js/account/account-signup/pwdCheck.js","webpack:///./src/main/webapp/resources/js/account/account-login/ngAccountLoginDirective.js","webpack:///./src/main/webapp/resources/js/account/account-logout/ngAccountLogoutDirective.js","webpack:///./src/main/webapp/resources/js/offer/offer-list/ngOfferListDirective.js","webpack:///./src/main/webapp/resources/js/offer/offer-list/ngPromotionListDirective.js","webpack:///./src/main/webapp/resources/js/offer/offer-specifications/ngOfferSpecifications.js","webpack:///./src/main/webapp/resources/js/header-display/tutorial/ngQuickTutorial.js","webpack:///./src/main/webapp/resources/js/footer/ngFooterDirective.js","webpack:///./src/main/webapp/resources/js/offer/offer-specifications/offer-comments/ngOfferComments.js","webpack:///./src/main/webapp/resources/js/offer/offer-specifications/offer-comments/ngOfferCommentsQuotes.js","webpack:///./src/main/webapp/resources/js/offer/offer-creation/ngOfferCreationDirective.js","webpack:///./src/main/webapp/resources/js/offer/offer-creation/ngOfferUpdateDirective.js","webpack:///./src/main/webapp/resources/js/offer/offer-creation/ngOfferCategoryManagerDirective.js","webpack:///./src/main/webapp/resources/js/offer/offer-filter/ngOfferFilterDirective.js","webpack:///./src/main/webapp/resources/js/header-display/ngHeadDisplayDirective.js","webpack:///./src/main/webapp/resources/js/header-display/ngHeadAccountAndOfferManagementDirective.js","webpack:///./src/main/webapp/resources/js/header-display/ngMainSlogan.js","webpack:///./src/main/webapp/resources/js/uploader/ngImageUploadDirective.js","webpack:///./src/main/webapp/resources/js/response/ngResponseFromServer.js","webpack:///./src/main/webapp/resources/js/social/ngSocialMediaDirective.js","webpack:///./src/main/webapp/resources/js/error/ngRedirectComponents.js","webpack:///./src/main/webapp/resources/js/account/password-forgotten/ngPasswordForgottenDirective.js","webpack:///./src/main/webapp/resources/sass/loader.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","requestManager","angular","service","$http","csrfToken","requestControllerService","initMainController","$","attr","makePostCall","data","params","url","_csrf","method","headers","Content-Type","X-CSRF-TOKEN","getActualToken","configManager","configService","GET_OFFERS_ENDPOINT","GET_HOTTEST_OFFERS_ENDPOINT","GET_OFFER_ENDPOINT","CREATE_OFFER_ENDPOINT","UPDATE_OFFER_ENDPOINT","EXPIRE_OFFER_ENDPOINT","REMOVE_OFFER_ENDPOINT","CREATE_ACCOUNT_ENDPOINT","UPDATE_ACCOUNT_ENDPOINT","BAN_USER","GET_ACCOUNT_DETAILS_ENDPOINT","GET_COMPANIES_ENDPOINT","GET_OFFER_CATEGORIES_ENDPOINT","POSITIVE_FEEDBACK_ENDPOINT","NEGATIVE_FEEDBACK_ENDPOINT","CREATE_COMMENT_ENDPOINT","DELETE_COMMENT_ENDPOINT","QUOTE_COMMENT_ENDPOINT","GET_FILTERED_ENDPOINT","REQUEST_PASSWORD_UPDATE","REQUEST_PASSWORD","TUTORIAL_COOKIE","LAW_COOKIE","IMAGE_MAX_SIZE","getEndpoint","key","configMap","get.offers","get.hottest.offers","get.offer","create.offer","update.offer","expire.offer","remove.offer","create.account","update.account","get.account.details","get.companies","get.offer.categories","ban.user","positive.feedback","negative.feedback","create.comment","delete.comment","quote.comment","get.filtered.offers","password.forgotten","password.forgotten.request","max.image.size","tutorial.cookie","law.cookie","alertManager","$rootScope","alertService","defaultMessage","isAllOk","code","sendErrorMessage","theResponse","descriptionEsp","responseResult","$broadcast","sendDefaultErrorMessage","getDefaultMessage","offerManager","offerManagerController","requestNewestOffers","offerFilter","hot","requestMoreOffers","undefined","broadcastOfferList","requestHottestOffers","offerList","lastOffer","callback","errorCallback","number","success","status","config","theOffers","error","showSpecifications","aporlaofertaApp","controller","$scope","keyHandler","$event","keyCode","time","Date","getTime","element","document","body","bind","minute","refresh","window","location","reload","setTimeout","directive","link","scope","msg","ngConfirmClick","clickAction","confirmedClick","event","confirm","$eval","flowFactoryProvider","defaults","target","permanentErrors","maxChunkRetries","chunkRetryInterval","simultaneousUploads","singleFile","restrict","templateUrl","overheadDisplay","customCloseCallback","displayCallback","vcRecaptchaService","theUser","widgetId","publicKey","disableNickname","passwordUpdateRequired","validMail","validPassword","createAccount","getResponse","displayErrorMessageAndDisplayAccount","oldPassword","processing","recaptcha","processAccountResponse","accountDefaultError","userPassword2","restartRecaptcha","accountError","customMessage","setWidgetId","http","copy","getUserDetails","processLogin","resetPassword","userPassword","require","elem","attrs","ctrl","firstPassword","pwCheck","add","on","$apply","v","val","$setValidity","trigger","requestPassword","userEmail","accountUpdate","profileOptions","text","value","defaultProfileModel","profileModel","$watch","userAvatar","formSubmit","logoutForm","submit","$on","args","getElementById","defaultList","moreOffersLoading","showMoreOffers","isCategorySelected","selectedcategory","concat","updateIndex","index","initialiseScrollyButtons","scrolly","speed","parsePrice","price","toString","replace","isEmptyCategory","category","indexOf","offerFeedbackStyle","offer","offerFeedback","offerPositiveVote","offerNegativeVote","appliedOfferFilters","displayTutorialModal","theOffer","sharePrefix","sharePrice","commentsCustomCloseCallback","votePositive","offerId","sendMessageAndShowSpecifications","sendDefaultErrorMessageAndShowSpecifications","voteNegative","feedback","updateOffer","expireOffer","banUser","nickname","removeOffer","processRegister","customCallback","isDisplayed","$element","$timeout","shareUrl","shareText","refreshTutorial","resize","find","theComments","$filter","quoteActionEnable","qComment","comment","getQuotedComment","comments","quoteAction","isQuoteActionEnabled","writeComment","quoteComment","quotedComment","message","restartCommentTexts","updateViewAndCloseCallback","commentText","deleteComment","description","resetCategory","createOffer","offerCreationError","parseOffer","resetValues","originalPrice","parseFloat","e","finalPrice","bigDecimalsOnly","brandNewCompany","isCompanyDefined","offerCompany","companyName","offerCategory","selectionPerformed","offerCompanies","suggest_company","term","q","toLowerCase","trim","results","i","length","company","push","label","autocomplete_options","suggest","populateCompanyList","resetCompany","selectedcompany","reset","includeAll","offerCategories","display","populateAllCategories","onCategoryChange","selection","filter","displayFilterContent","previousCategory","requestFilterApply","searchCriteriaChanged","cleanFilters","expired","dateRange","displayFilterContents","specificOffer","specificOfferData","overheadVisible","noAccounts","fullscreen","$window","$offerManager","$cookies","tutorialIsDisplayed","loadingOfferSpecifications","displayLogin","setDefaultVisibility","displayAccountLogin","displaySignup","displayAccountCreation","displayAccountUpdateForm","displayAccountUpdate","displayOfferCreate","displayOfferCreation","displayOfferUpdate","displayOfferToBeUpdate","displayOfferDetails","displayOfferSpecifications","displayOfferLoading","displayServerResponse","displayResponseFromServer","displayTutorialDiagram","setTutorialCookie","displayTutorial","closeOverheadDisplay","exec","console","log","JSON","parse","openOfferSpecifications","offerSpecifications","redirectHome","href","keyDownCode","justCloseOverheadDisplay","checkForErrors","errorMessage","expireDate","setDate","getDate","put","expires","removeClass","get","$anchorScroll","scrollPosition","this","pageYOffset","toTheTop","faded","finalUrl","alreadyUploadedImage","uploader","displayThumbnail","invalidSize","invalidImage","maxImageSize","fileAdded","file","fileReader","FileReader","onload","img","Image","onerror","displayInvalidImageMessage","width","height","displayInvalidImageSizeMessage","flow","upload","defaultThumbnailView","src","result","readAsDataURL","deleteImage","cancel","changeImage","alreadyUploaded","filesIsUploaded","handleUploadError","newValue","oldValue","isInvalidThumbnailShown","facebookUrl","twitterUrl","googlePlusUrl","uuid","nick","userNickname","updatePassword","processPasswordResponse"],"mappings":"CAAS,SAAUA,GCInB,QAAAC,GAAAC,GAGA,GAAAC,EAAAD,GACA,MAAAC,GAAAD,GAAAE,OAGA,IAAAC,GAAAF,EAAAD,IACAE,WACAE,GAAAJ,EACAK,QAAA,EAUA,OANAP,GAAAE,GAAAM,KAAAH,EAAAD,QAAAC,IAAAD,QAAAH,GAGAI,EAAAE,QAAA,EAGAF,EAAAD,QAvBA,GAAAD,KAqCA,OATAF,GAAAQ,EAAAT,EAGAC,EAAAS,EAAAP,EAGAF,EAAAU,EAAA,GAGAV,EAAA,KDMM,SAASI,EAAQD,EAASH,GAE/BA,EAAoB,GACpBA,EAAoB,GACpBA,EAAoB,GACpBA,EAAoB,GACpBA,EAAoB,GACpBA,EAAoB,GACpBA,EAAoB,GACpBA,EAAoB,GACpBA,EAAoB,GACpBA,EAAoB,IACpBA,EAAoB,IACpBA,EAAoB,IACpBA,EAAoB,IACpBA,EAAoB,IACpBA,EAAoB,IACpBA,EAAoB,IACpBA,EAAoB,IACpBA,EAAoB,IACpBA,EAAoB,IACpBA,EAAoB,IACpBA,EAAoB,IACpBA,EAAoB,IACpBA,EAAoB,IACpBA,EAAoB,IACpBA,EAAoB,IACpBA,EAAoB,IACpBA,EAAoB,IACpBA,EAAoB,IACpBA,EAAoB,IACpBI,EAAOD,QAAUH,EAAoB,KAKhC,SAASI,EAAQD,GEhFvB,GAAAQ,GAAAC,QAAAR,OAAA,oBAEAO,GAAAE,QAAA,0BACA,SAAAC,GACA,GACAC,GADAC,IAsBA,OApBAA,GAAAC,mBAAA,WACAF,EAAAG,EAAA,sBAAAC,KAAA,YAEAH,EAAAI,aAAA,SAAAC,EAAAC,EAAAC,GAEA,MADAD,GAAAE,MAAAT,EACAD,GACAW,OAAA,OACAF,MACAG,SACAC,eAAA,mBACAC,eAAAb,GAEAO,SACAD,UAGAL,EAAAa,eAAA,WACA,MAAAd,IAEAC,EAAAC,qBACAD,MF0FM,SAASZ,EAAQD,GGpHvB,GAAA2B,GAAAlB,QAAAR,OAAA,mBAEA0B,GAAAjB,QAAA,4BACA,GAAAkB,MACAC,EAAA,YACAC,EAAA,mBACAC,EAAA,WACAC,EAAA,cACAC,EAAA,cACAC,EAAA,cACAC,EAAA,cACAC,EAAA,aACAC,EAAA,aACAC,EAAA,UACAC,EAAA,iBACAC,EAAA,cACAC,EAAA,qBACAC,EAAA,eACAC,EAAA,eACAC,EAAA,gBACAC,EAAA,gBACAC,EAAA,eACAC,EAAA,oBACAC,EAAA,oBACAC,EAAA,2BACAC,EAAA,mBACAC,EAAA,mBACAC,EAAA,IACAxB,GAAAyB,YAAA,SAAAC,GACA,MAAAC,GAAAD,GAEA,IAAAC,IACAC,aAAA3B,EACA4B,qBAAA3B,EACA4B,YAAA3B,EACA4B,eAAA3B,EACA4B,eAAA3B,EACA4B,eAAA3B,EACA4B,eAAA3B,EACA4B,iBAAA3B,EACA4B,iBAAA3B,EACA4B,sBAAA1B,EACA2B,gBAAA1B,EACA2B,uBAAA1B,EACA2B,WAAA9B,EACA+B,oBAAA3B,EACA4B,oBAAA3B,EACA4B,iBAAA3B,EACA4B,iBAAA3B,EACA4B,gBAAA3B,EACA4B,sBAAA3B,EACA4B,qBAAA3B,EACA4B,6BAAA3B,EACA4B,iBAAAzB,EACA0B,kBAAA5B,EACA6B,aAAA5B,EAEA,OAAAvB,OH2HM,SAAS3B,EAAQD,GIpLvB,GAAAgF,GAAAvE,QAAAR,OAAA,kBAEA+E,GAAAtE,QAAA,sCAAAuE,GACA,GAAAC,MACAC,EAAA,uCAoBA,OAnBAD,GAAAE,QAAA,SAAAlE,GACA,UAAAA,EAAAmE,MAEAH,EAAAI,iBAAA,SAAApE,GACA,GAAAqE,KACAA,GAAAC,eAAAtE,EACAqE,EAAAE,eAAA,QACAR,EAAAS,WAAA,iBAAAH,IAEAL,EAAAS,wBAAA,WACA,GAAAJ,KACAA,GAAAC,eAAAN,EAAAU,oBACAL,EAAAE,eAAA,QACAR,EAAAS,WAAA,iBAAAH,IAEAL,EAAAU,kBAAA,WACA,MAAAT,IAGAD,MJ2LM,SAASjF,EAAQD,GKnNvB,GAAA6F,GAAApF,QAAAR,OAAA,kBAEA4F,GAAAnF,QAAA,6EACA,SAAAuE,EAAAC,EAAA1E,EAAAoB,GACA,GAAAkE,KA2CA,OA1CAA,GAAAC,oBAAA,SAAAC,GACAA,EAAAC,KAAA,EACAH,EAAAI,kBAAAF,EAAAG,OAAAL,EAAAM,mBACA,eAIAN,EAAAO,qBAAA,SAAAL,GACAA,EAAAC,KAAA,EACAH,EAAAI,kBAAAF,EAAAG,OAAAL,EAAAM,mBACA,eAIAN,EAAAM,mBAAA,SAAAE,GACArB,EAAAS,WAAA,YAAAY,IAGAR,EAAAI,kBAAA,SAAAF,EAAAO,EAAAC,EAAAC,GACAjG,EAAAS,aAAA+E,GAAsDU,OAAAH,GAAoB3E,EAAAyB,YAAA,wBAC1EsD,QAAA,SAAAzF,EAAA0F,EAAArF,EAAAsF,GACAL,EAAAtF,EAAA4F,aAEiBC,MAAA,SAAA7F,EAAA0F,EAAArF,EAAAsF,GACjB3B,EAAAS,0BACAc,OAGAX,EAAAkB,mBAAA,SAAA9G,GACA+E,EAAAS,WAAA,8BACAlF,EAAAS,iBAA6Cf,MAAS0B,EAAAyB,YAAA,cACtDsD,QAAA,SAAAzF,EAAA0F,EAAArF,EAAAsF,GACA3B,EAAAE,QAAAlE,GACA+D,EAAAS,WAAA,sBAAAxE,EAAA4F,WAGA5B,EAAAI,iBAAApE,EAAAsE,kBAEiBuB,MAAA,SAAA7F,EAAA0F,EAAArF,EAAAsF,GACjB3B,EAAAS,6BAGAG,ML6NM,SAAS7F,EAAQD,GMzQvBiH,gBAAAxG,QAAAR,OAAA,gBACA,iBACA,iBACA,eACA,gBACA,OACA,YACA,cACA,eACA,gBACA,aACA,cACA,aACA,mBACA,WACA,qBACA,YACA,UAIAgH,gBAAAC,WAAA,yDAAAC,EAAAlC,GACAkC,EAAAC,WAAA,SAAAC,GACApC,EAAAS,WAAA,iBAAA2B,EAAAC,UAGAH,EAAAI,MAAA,GAAAC,OAAAC,UACAhH,QAAAiH,QAAAC,SAAAC,MAAAC,KAAA,gCACAV,EAAAI,MAAA,GAAAC,OAAAC,YAEAN,EAAAW,OAAA,IACAX,EAAAY,QAAA,YACA,GAAAP,OAAAC,UAAAN,EAAAI,MAAA,GAAAJ,EAAAW,OAAAE,OAAAC,SAAAC,SAAAC,WAAAhB,EAAAY,QAAA,GAAAZ,EAAAW,SAEAK,WAAAhB,EAAAY,QAAA,GAAAZ,EAAAW,WAGAb,gBAAAmB,UAAA,kBACA,WACA,OACAC,KAAA,SAAAC,EAAAZ,EAAA1G,GACA,GAAAuH,GAAAvH,EAAAwH,gBAAA,GACAC,EAAAzH,EAAA0H,cACAhB,GAAAG,KAAA,iBAAAc,GACAX,OAAAY,QAAAL,IACAD,EAAAO,MAAAJ,UAOAxB,gBAAAJ,QAAA,+BAAAiC,GACAA,EAAAC,UACAC,OAAA,cACAC,iBAAA,aACAC,gBAAA,EACAC,mBAAA,IACAC,oBAAA,EACAC,YAAA,ONqRM,SAASpJ,EAAQD,GOhVvBiH,gBACAmB,UAAA,+BACA,OACAkB,SAAA,IACAC,YAAA,wDACAjB,OACAkB,gBAAA,IACAC,oBAAA,IACAC,gBAAA,KAEAxC,YAAA,8EACA,SAAAC,EAAA3G,EAAAoB,EAAA+H,EAAAzE,GACAiC,EAAAyC,WACAzC,EAAA0C,SAAA,KACA1C,EAAA2C,UAAA,2CACA3C,EAAA4C,iBAAA,EACA5C,EAAA6C,wBAAA,EACA7C,EAAA8C,UAAA,mEACA9C,EAAA+C,cAAA,gDACA/C,EAAAgD,cAAA,SAAAP,GACA,KAAAD,EAAAS,YAAAjD,EAAA0C,UACA1C,EAAAkD,8CAGAlD,GAAAyC,QAAAU,YACAnD,EAAAoD,YAAA,EACA/J,EAAAS,aAAA2I,GAAkEY,UAAAb,EAAAS,YAAAjD,EAAA0C,WAA2DjI,EAAAyB,YAAA,mBAC7HsD,QAAA,SAAAzF,EAAA0F,EAAArF,EAAAsF,GACAM,EAAAsD,uBAAAvJ,KACiC6F,MAAA,SAAA7F,EAAA0F,EAAArF,EAAAsF,GACjCM,EAAAuD,wBAJAlK,WAKiC,WACjC2G,EAAAoD,YAAA,IAEApD,EAAAyC,WACAzC,EAAAwD,cAAA,KAIAxD,EAAAkD,qCAAA,WACAnF,EAAAI,iBAAA,yEACA6B,EAAAyD,mBACAzD,EAAAsC,oBAAAtC,EAAAuC,iBAEAvC,EAAAsD,uBAAA,SAAAvJ,GACAgE,EAAAE,QAAAlE,IAIAgE,EAAAI,iBAAApE,EAAAsE,gBACA2B,EAAAsC,qBAAA,GAJAtC,EAAA0D,aAAA3J,EAAAsE,gBAMA2B,EAAAyD,oBAEAzD,EAAAyD,iBAAA,WACAjB,EAAAzB,OAAAf,EAAA0C,WAGA1C,EAAAuD,oBAAA,WACAxF,EAAAS,0BACAgE,EAAAzB,OAAAf,EAAA0C,UACA1C,EAAAsC,oBAAAtC,EAAAuC,iBAGAvC,EAAA0D,aAAA,SAAAC,GACA5F,EAAAI,iBAAAwF,GACA3D,EAAAyD,mBACAzD,EAAAsC,oBAAAtC,EAAAuC,iBAGAvC,EAAA4D,YAAA,SAAAlB,GACA1C,EAAA0C,kBP6VM,SAAS5J,EAAQD,GQpavBiH,gBACAmB,UAAA,6BACA,OACAkB,SAAA,IACAC,YAAA,wDACAjB,OACAkB,gBAAA,IACAC,oBAAA,IACAC,gBAAA,KAEAxC,YAAA,mGACA,SAAAC,EAAAwC,EAAAzE,EAAA8F,EAAAxK,EAAAoB,EAAAqD,GACAkC,EAAA4C,iBAAA,EACA5C,EAAAyC,WACAzC,EAAA0C,SAAA,KACA1C,EAAA6C,wBAAA,EACA7C,EAAA8C,UAAA,mEACA9C,EAAA+C,cAAA,gDACA/C,EAAA2C,UAAA,2CACA3C,EAAAgD,cAAA,SAAAP,GACA,KAAAD,EAAAS,YAAAjD,EAAA0C,UACA1C,EAAAkD,wCAGAlD,EAAAoD,YAAA,EACA/J,EAAAS,aAAA2I,GAAkEY,UAAAb,EAAAS,YAAAjD,EAAA0C,WAA2DjI,EAAAyB,YAAA,mBAC7HsD,QAAA,SAAAzF,EAAA0F,EAAArF,EAAAsF,GACAM,EAAAsD,uBAAAvJ,IACA+D,EAAAS,WAAA,aAAAjF,QAAAwK,KAAArB,MAEiC7C,MAAA,SAAA7F,EAAA0F,EAAArF,EAAAsF,GACjCM,EAAAuD,wBANAlK,WAQA,WACA2G,EAAAoD,YAAA,EACApD,EAAA+D,iBACA/D,EAAA6C,wBAAA,MAOA7C,EAAAgE,aAAA,WACAlG,EAAAS,WAAA,qBAGAyB,EAAA+D,eAAA,WACA1K,EAAAS,mBAA0DW,EAAAyB,YAAA,wBAC1DsD,QAAA,SAAAzF,EAAA0F,EAAArF,EAAAsF,GACAM,EAAAyC,QAAA1I,IAC6B6F,MAAA,SAAA7F,EAAA0F,EAAArF,EAAAsF,GAC7B3B,EAAAI,iBAAA,sDACA6B,EAAAsC,qBAAA,KAGAtC,EAAA+D,iBAEA/D,EAAAiE,cAAA,WACAjE,EAAAyC,QAAAU,YAAA,KACAnD,EAAAyC,QAAAyB,aAAA,KACAlE,EAAAwD,cAAA,MAGAxD,EAAAkD,qCAAA,WACAnF,EAAAI,iBAAA,yEACA6B,EAAAyD,mBACAzD,EAAAsC,oBAAAtC,EAAAuC,iBAEAvC,EAAAsD,uBAAA,SAAAvJ,GACA,MAAAgE,GAAAE,QAAAlE,IAIAgE,EAAAI,iBAAApE,EAAAsE,iBACA,IAJA2B,EAAA0D,aAAA3J,EAAAsE,gBAMA2B,EAAAyD,oBACA,IAGAzD,EAAAuD,oBAAA,WACAxF,EAAAS,0BACAwB,EAAAyD,mBACAzD,EAAAsC,oBAAAtC,EAAAuC,iBAGAvC,EAAA0D,aAAA,SAAAC,GACA5F,EAAAI,iBAAAwF,GACA3D,EAAAyD,mBACAzD,EAAAsC,oBAAAtC,EAAAuC,iBAEAvC,EAAA4D,YAAA,SAAAlB,GACA1C,EAAA0C,YAEA1C,EAAAyD,iBAAA,WACAjB,EAAAzB,OAAAf,EAAA0C,iBRibM,SAAS5J,EAAQD,GSphBvBS,QAAAR,OAAA,oBACAmI,UAAA,sBACA,OACAkD,QAAA,UACAjD,KAAA,SAAAC,EAAAiD,EAAAC,EAAAC,GACA,GAAAC,GAAA,IAAAF,EAAAG,OACAJ,GAAAK,IAAAF,GAAAG,GAAA,mBACAvD,EAAAwD,OAAA,WACA,GAAAC,GAAAR,EAAAS,QAAAjL,EAAA2K,GAAAM,KACAP,GAAAQ,aAAA,UAAAF,aT+hBM,SAAS9L,EAAQD,GUriBvBiH,gBACAmB,UAAA,4BACA,OACAkB,SAAA,IACAC,YAAA,iBACArC,YAAA,yDACA,SAAAC,EAAA3G,EAAAoB,EAAAsD,GACAiC,EAAA8C,UAAA,mEACA9C,EAAAgE,aAAA,WACAhE,EAAAoD,YAAA,EACA9J,QAAAiH,QAAA,cAAAwE,QAAA,WAGA/E,EAAAgF,gBAAA,SAAAC,GACAjF,EAAAoD,YAAA,EAEA/J,EAAAS,aAAAmL,GAAgEA,aAAqBxK,EAAAyB,YAAA,+BACrFsD,QAAA,SAAAzF,EAAA0F,EAAArF,EAAAsF,GACAM,EAAAsD,uBAAAvJ,KAC6B6F,MAAA,SAAA7F,EAAA0F,EAAArF,EAAAsF,GAC7BM,EAAAuD,wBAJAlK,WAK6B,WAC7B2G,EAAAoD,YAAA,KAIApD,EAAAsD,uBAAA,SAAAvJ,GACAgE,EAAAI,iBAAApE,EAAAsE,gBACA2B,EAAAyD,kBACAzD,EAAAyD,oBAIAzD,EAAAuD,oBAAA,WACAxF,EAAAS,iCVmjBM,SAAS1F,EAAQD,GWrlBvBiH,gBACAmB,UAAA,6BACA,OACAkB,SAAA,IACAC,YAAA,kDACAjB,OACA+D,cAAA,KAEAnF,YAAA,kEAAAC,EAAAjC,EAAA1E,EAAAoB,GACAuF,EAAAmF,iBACqBC,KAAA,oBAAAC,MAAA,kBACAD,KAAA,gBAAAC,MAAA,eAErBrF,EAAAsF,qBACAF,KAAA,YAEApF,EAAAuF,aAAAjM,QAAAwK,KAAA9D,EAAAsF,qBAEAtF,EAAAwF,OAAA,0BACA,aAAAxF,EAAAuF,aAAAH,OACApF,IAAAuF,aAAAF,SACArF,EAAAuF,aAAAjM,QAAAwK,KAAA9D,EAAAsF,wBAIAtF,EAAA+D,eAAA,WACA1K,EAAAS,mBAAsDW,EAAAyB,YAAA,wBACtDsD,QAAA,SAAAzF,EAAA0F,EAAArF,EAAAsF,GACAM,EAAAyF,WAAA1L,EAAA0L,aACyB7F,MAAA,SAAA7F,EAAA0F,EAAArF,EAAAsF,GACzB3B,EAAAI,iBAAA,sDACA6B,EAAAsC,qBAAA,KAKAtC,EAAA+D,iBAEA/D,EAAA0F,WAAA,WACA1F,EAAA2F,WAAAC,UAGA5F,EAAA6F,IAAA,sBAAArE,EAAAsE,GACA9F,EAAAyF,WAAAK,EAAAL,aAGAzF,EAAA0F,WAAA,WACAlF,SAAAuF,eAAA,cAAAH,gBXmmBM,SAAS9M,EAAQD,GYlpBvBiH,gBACAmB,UAAA,yBACA,OACAkB,SAAA,IACAC,YAAA,+CACAjB,OACA6E,YAAA,KAEAjG,YAAA,wBACA,SAAAC,EAAAtB,GACAsB,EAAAb,aACAa,EAAAiG,mBAAA,EACAjG,EAAAZ,UAAA,EAEAY,EAAAkG,eAAA,SAAA9G,GACAY,EAAAiG,mBAAA,EACAjG,EAAAnB,YAAAC,IAAA,kBAAAkB,EAAAgG,YACAhG,EAAAmG,uBACAnG,EAAAnB,YAAAuH,iBAAA,IAEA1H,EAAAK,kBAAAiB,EAAAnB,YAAAO,EACA,SAAArF,GACAiG,EAAAb,UAAAa,EAAAb,UAAAkH,OAAAtM,GACAiG,EAAAiG,mBAAA,GAC6B,WAC7BjG,EAAAiG,mBAAA,KAIAjG,EAAAsG,YAAA,SAAAC,GACAvG,EAAAZ,UAAAmH,GAGAvG,EAAA6F,IAAA,qBAAArE,EAAAsE,GACA9F,EAAAiG,mBAAA,EACAjG,EAAAb,UAAA2G,IAGA9F,EAAAH,mBAAA,SAAA9G,GACA2F,EAAAmB,mBAAA9G,IAGAiH,EAAAwG,yBAAA,WACA5M,EAAA,YACA6M,SACAC,MAAA,QAIA1G,EAAA2G,WAAA,SAAAC,GACA,GAAAA,GAAA,GAAAA,EACA,MAAAA,GAAAC,WAAAC,QAAA,WAIA9G,EAAAmG,mBAAA,WACA,OAAAnG,EAAA+G,gBAAA/G,EAAAnB,YAAAuH,mBAGApG,EAAA+G,gBAAA,SAAAC,GACA,eAAAhI,OAAA,yCAAAiI,QAAAD,OAGAhH,EAAAkH,mBAAA,SAAAC,GACA,GAAAC,GAAAD,EAAAE,kBAAAF,EAAAG,iBACA,OAAAF,GAAA,GAAAA,GAAA,IACA,cAEAA,EAAA,IACA,kBAEAA,EAAA,EACA,eAEA,mBAGApH,EAAA6F,IAAA,iCACA7F,EAAAiG,mBAAA,IAGAjG,EAAAwF,OAAA,uBACAxF,EAAAiG,mBAAA,IAGAjG,EAAAwG,iCZ8pBM,SAAS1N,EAAQD,GanvBvBiH,gBACAmB,UAAA,6BACA,OACAkB,SAAA,IACAC,YAAA,mDACArC,YAAA,qCACA,SAAAC,EAAAlC,EAAAY,GACAsB,EAAAgG,YAAA,GACAhG,EAAAuH,uBAEAvH,EAAA6F,IAAA,+BAAArE,EAAAsE,GACA9F,EAAAuH,oBAAAzB,IAGA9F,EAAApB,oBAAA,WACAF,EAAAE,oBAAAoB,EAAAuH,qBACAvH,EAAAgG,YAAA,gBAGAhG,EAAAd,qBAAA,WACAR,EAAAQ,qBAAAc,EAAAuH,qBACAvH,EAAAgG,YAAA,iBAGAhG,EAAAwH,qBAAA,WACA1J,EAAAS,WAAA,0BbgwBM,SAASzF,EAAQD,GczxBvBiH,gBACAmB,UAAA,mCACA,OACAkB,SAAA,IACAC,YAAA,kEACAjB,OACAsG,SAAA,IACAnF,oBAAA,KAEAvC,YAAA,qFACA,SAAArB,EAAAX,EAAAiC,EAAAlC,EAAAzE,EAAAoB,GACAuF,EAAA0H,YAAA,4BACA1H,EAAA2H,WAAA,MACA3H,EAAA4H,+BACA5H,EAAAuH,uBAEAvH,EAAA6H,aAAA,SAAA9O,GACAM,EAAAS,iBAAyDgO,QAAA/O,GAAc0B,EAAAyB,YAAA,sBACvEsD,QAAA,SAAAzF,GACAiG,EAAA+H,iCAAAhO,EAAAhB,EAAA,uBAC6B6G,MAAA,WAC7BI,EAAAgI,6CAAAjP,MAGAiH,EAAAiI,aAAA,SAAAlP,GACAM,EAAAS,iBAAyDgO,QAAA/O,GAAc0B,EAAAyB,YAAA,sBACvEsD,QAAA,SAAAzF,GACAiG,EAAA+H,iCAAAhO,EAAAhB,EAAA,uBAC6B6G,MAAA,WAC7BI,EAAAgI,6CAAAjP,MAGAiH,EAAA+H,iCAAA,SAAAhO,EAAAhB,EAAAmP,GACAnK,EAAAE,QAAAlE,GAOAiG,EAAAyH,SAAA,GAAAS,GAAAlI,EAAAyH,SAAA,GAAAS,GAAA,GANAnK,EAAAI,iBAAApE,EAAAsE,gBACA2B,EAAAsC,oBAAA,WACA5D,EAAAmB,mBAAA9G,MAOAiH,EAAAgI,6CAAA,SAAAjP,GACAgF,EAAAS,0BACAwB,EAAAsC,oBAAA,WACA5D,EAAAmB,mBAAA9G,KAGAiH,EAAAmI,YAAA,SAAAV,GACA3J,EAAAS,WAAA,iBAAAjF,QAAAwK,KAAA2D,KAEAzH,EAAAoI,YAAA,SAAAX,GACApO,EAAAS,iBAAyDf,GAAA0O,EAAA1O,IAAkB0B,EAAAyB,YAAA,iBAC3EsD,QAAA,SAAAzF,GACAgE,EAAAE,QAAAlE,IAIAgE,EAAAI,iBAAApE,EAAAsE,gBACA2B,EAAAsC,oBAAA,WACA5D,EAAAE,oBAAAoB,EAAAuH,uBALAxJ,EAAAI,iBAAApE,EAAAsE,kBAQ6BuB,MAAA,WAC7B7B,EAAAS,6BAIAwB,EAAAqI,QAAA,SAAAC,GACAjP,EAAAS,iBAAyDwO,YAAqB7N,EAAAyB,YAAA,aAC9EsD,QAAA,SAAAzF,GACAgE,EAAAI,iBAAApE,EAAAsE,kBAC6BuB,MAAA,WAC7B7B,EAAAS,6BAIAwB,EAAAuI,YAAA,SAAAxP,GACAM,EAAAS,iBAAyDf,MAAS0B,EAAAyB,YAAA,iBAClEsD,QAAA,SAAAzF,GACAgE,EAAAI,iBAAApE,EAAAsE,gBACA2B,EAAAsC,oBAAA,WACA5D,EAAAE,oBAAAoB,EAAAuH,wBAE6B3H,MAAA,WAC7B7B,EAAAS,6BAIAwB,EAAA2G,WAAA,SAAAC,GACA,GAAAA,GAAA,GAAAA,EACA,MAAAA,GAAAC,WAAAC,QAAA,WAIA9G,EAAAkH,mBAAA,SAAAC,GACA,GAAAC,GAAAD,EAAAE,kBAAAF,EAAAG,iBACA,OAAAF,GAAA,GAAAA,GAAA,IACA,cAEAA,EAAA,IACA,kBAEAA,EAAA,EACA,eAEA,mBAGApH,EAAAgE,aAAA,WACAlG,EAAAS,WAAA,qBAGAyB,EAAAwI,gBAAA,WACA1K,EAAAS,WAAA,wBAGAyB,EAAA6F,IAAA,uCAAArE,EAAAsE,GACA,GAAA2C,GAAA3C,CACA9F,GAAAsC,oBAAAmG,IAGAzI,EAAA6F,IAAA,+BAAArE,EAAAsE,GACA9F,EAAAuH,oBAAAzB,UdsyBM,SAAShN,EAAQD,Gel6BvBiH,gBACAmB,UAAA,6BACA,OACAkB,SAAA,IACAhB,OACAuH,YAAA,KAEAtG,YAAA,yDACArC,YAAA,+BACA,SAAAC,EAAA2I,EAAAC,GACA5I,EAAA6I,SAAA,uBACA7I,EAAA8I,UAAAlP,EAAA,mCAAAC,KAAA,WAEAmG,EAAAwF,OAAA,yBACAxF,EAAA0I,cACA1I,EAAA+I,kBACAH,EAAA,WACA5I,EAAA+I,mBAC6B,QAI7B/I,EAAA+I,gBAAA,WACAJ,EAAAK,SACAL,EAAAM,KAAA,0BAAAlE,QAAA,SACA/E,EAAA0I,YAAA,Sfi7BM,SAAS5P,EAAQD,GgB18BvBiH,gBACAmB,UAAA,sBACA,OACAkB,SAAA,IACAC,YAAA,iCACArC,YAAA,sBACA,SAAAC,EAAAlC,GACAkC,EAAAwH,qBAAA,WACA1J,EAAAS,WAAA,0BhBu9BM,SAASzF,EAAQD,GiB/9BvBiH,gBACAmB,UAAA,6BACA,OACAkB,SAAA,IACAC,YAAA,2EAEAjB,OACA+H,YAAA,IACAzB,SAAA,IACAG,4BAAA,KAEA7H,YAAA,+FACA,SAAAoJ,EAAApL,EAAAiC,EAAAlC,EAAAzE,EAAAoB,EAAAiE,GACAsB,EAAAoJ,qBACApJ,EAAAqJ,YACArJ,EAAAsJ,WACAtJ,EAAAuJ,iBAAA,SAAAxQ,EAAAyQ,GACA,MAAAL,GAAA,UAAAK,GAA4DzQ,OAAO,IAGnEiH,EAAAyJ,YAAA,SAAA1Q,GACAiH,EAAAoJ,mBAAArQ,EACAiH,EAAAoJ,qBAGApJ,EAAAoJ,kBAAArQ,GAIAiH,EAAA0J,qBAAA,SAAA3Q,GACA,MAAAiH,GAAAoJ,mBAAArQ,GAGAiH,EAAA2J,aAAA,SAAAL,EAAAvQ,GACAiH,EAAAoD,YAAA,EACA/J,EAAAS,aAAAwP,GAA8DnC,MAAApO,GAAY0B,EAAAyB,YAAA,mBAC1EsD,QAAA,SAAAzF,EAAA0F,EAAArF,EAAAsF,GACAM,EAAA+H,iCAAAhO,EAAAsE,kBAC6BuB,MAAA,SAAA7F,EAAA0F,EAAArF,EAAAsF,GAC7BM,EAAAgI,iDAJA3O,WAKyB,WACzB2G,EAAAoD,YAAA,KAIApD,EAAA4J,aAAA,SAAAN,EAAAvQ,GACAiH,EAAAoD,YAAA,EACA/J,EAAAS,aAAAwP,GAA8DO,cAAA9Q,GAAoB0B,EAAAyB,YAAA,kBAClFsD,QAAA,SAAAzF,EAAA0F,EAAArF,EAAAsF,GACAM,EAAA+H,iCAAAhO,EAAAsE,kBAC6BuB,MAAA,SAAA7F,EAAA0F,EAAArF,EAAAsF,GAC7BM,EAAAgI,iDAJA3O,WAKyB,WACzB2G,EAAAoD,YAAA,KAIApD,EAAA+H,iCAAA,SAAA+B,GAGA9J,EAAA+J,sBACArL,EAAAmB,mBAAAG,EAAAyH,WAGAzH,EAAAgI,6CAAA,WACAjK,EAAAS,0BACAwB,EAAAgK,8BAGAhK,EAAAgK,2BAAA,WACAhK,EAAA4H,4BAAA,WACAlJ,EAAAmB,mBAAAG,EAAAyH,WAEA3J,EAAAS,WAAA,8BAAAyB,EAAA4H,6BACA5H,EAAA+J,uBAGA/J,EAAA+J,oBAAA,WACA/J,EAAAsJ,QAAAW,YAAA,GACAjK,EAAAqJ,SAAAY,YAAA,IAGAjK,EAAAgE,aAAA,WACAlG,EAAAS,WAAA,qBAGAyB,EAAAwI,gBAAA,WACA1K,EAAAS,WAAA,wBAGAyB,EAAAkK,cAAA,SAAAnR,GACAM,EAAAS,iBAAyDwP,QAAAvQ,GAAc0B,EAAAyB,YAAA,mBACvEsD,QAAA,SAAAzF,GACAiG,EAAA+H,iCAAAhO,EAAAsE,kBAC6BuB,MAAA,WAC7BI,EAAAgI,kDAIAhI,EAAAqI,QAAA,SAAAC,GACAjP,EAAAS,iBAAyDwO,YAAqB7N,EAAAyB,YAAA,aAC9EsD,QAAA,SAAAzF,GACAgE,EAAAI,iBAAApE,EAAAsE,kBAC6BuB,MAAA,WAC7B7B,EAAAI,iBAAApE,KAAAsE,yBjB++BM,SAASvF,EAAQD,GkBvlCvBiH,gBACAmB,UAAA,mCACA,OACAkB,SAAA,IACAC,YAAA,4EAEAjB,OACA+H,YAAA,IACAW,cAAA,KAEA9J,YAAA,gEAAAjC,EAAAkC,EAAA3G,EAAAoB,GACAuF,EAAAoJ,qBACApJ,EAAAyJ,YAAA,SAAA1Q,GACAiH,EAAAoJ,mBAAArQ,EACAiH,EAAAoJ,qBAGApJ,EAAAoJ,kBAAArQ,GAGAiH,EAAA0J,qBAAA,SAAA3Q,GACA,MAAAiH,GAAAoJ,mBAAArQ,GAEAiH,EAAA4J,aAAA,SAAAN,EAAAvQ,GACAM,EAAAS,aAAAwP,GAA0DO,cAAA9Q,GAAoB0B,EAAAyB,YAAA,kBAC9EsD,QAAA,SAAAzF,EAAA0F,EAAArF,EAAAsF,GACA5B,EAAAS,WAAA,iBAAAxE,GACAiG,EAAAqJ,SAAAY,YAAA,KACyBrK,MAAA,SAAA7F,EAAA0F,EAAArF,EAAAsF,GACzB,GAAAtB,KACAA,GAAA+L,YAAApQ,EACAqE,EAAAE,eAAA,QACAR,EAAAS,WAAA,iBAAAH,YlBsmCM,SAAStF,EAAQD,GmBtoCvBiH,gBACAmB,UAAA,6BACA,OACAkB,SAAA,IACAC,YAAA,uDACAjB,OACAkB,gBAAA,IACAC,oBAAA,IACAC,gBAAA,KAEAxC,YAAA,0GACA,SAAAC,EAAAlC,EAAAY,EAAArF,EAAAoB,EAAAsD,EAAAyE,GACAxC,EAAAmH,SACAnH,EAAA0C,SAAA,KACA1C,EAAA2C,UAAA,2CACA3C,EAAAoK,eAAA,EACApK,EAAAuH,uBAEAvH,EAAAqK,YAAA,WACA,KAAA7H,EAAAS,YAAAjD,EAAA0C,WACA1C,EAAAsK,mBAAA,yEACA9H,EAAAzB,OAAAf,EAAA0C,YAGA1C,EAAAoD,YAAA,EACA/J,EAAAS,aAAAkG,EAAAuK,cAA8ElH,UAAAb,EAAAS,YAAAjD,EAAA0C,WAA2DjI,EAAAyB,YAAA,iBACzIsD,QAAA,SAAAzF,EAAA0F,EAAArF,EAAAsF,GACA3B,EAAAE,QAAAlE,IAIAgE,EAAAI,iBAAApE,EAAAsE,gBACA2B,EAAAwK,cACAxK,EAAAsC,oBAAA,WACA5D,EAAAE,oBAAAoB,EAAAuH,uBANAvH,EAAAsK,mBAAAvQ,EAAAsE,kBASiCuB,MAAA,SAAA7F,EAAA0F,EAAArF,EAAAsF,GACjCM,EAAAsK,mBAAAvM,EAAAU,uBAbApF,WAciC,WACjC2G,EAAAoD,YAAA,MAMApD,EAAA6F,IAAA,+BAAArE,EAAAsE,GACA9F,EAAAuH,oBAAAzB,IAGA9F,EAAAuK,WAAA,WACA,GAAA9C,GAAAnO,QAAAwK,KAAA9D,EAAAmH,MACA,KACAM,EAAAgD,cAAAC,WAAAjD,EAAAgD,cAAA3D,QAAA,UACyB,MAAA6D,IAEzB,IACAlD,EAAAmD,WAAAF,WAAAjD,EAAAmD,WAAA9D,QAAA,UACyB,MAAA6D,IAEzB,MAAAlD,IAGAzH,EAAAyD,iBAAA,WACAjB,EAAAzB,OAAAf,EAAA0C,WAGA1C,EAAAsK,mBAAA,SAAA3G,GACA5F,EAAAI,iBAAAwF,GACA3D,EAAAyD,mBACAzD,EAAAsC,oBAAAtC,EAAAuC,iBAGAvC,EAAA6K,gBAAA,wBACA7K,EAAAwK,YAAA,WACAxK,EAAAyD,mBACAzD,EAAAmH,SACAnH,EAAA8K,iBAAA,EACA9K,EAAAoK,eAAA,GAEApK,EAAA4D,YAAA,SAAAlB,GACA1C,EAAA0C,YAGA1C,EAAA+K,iBAAA,WACA,GAAA/K,EAAAmH,MACA,MAAAnH,GAAAmH,MAAA6D,cAAAhL,EAAAmH,MAAA6D,aAAAC,aAIAjL,EAAAmG,mBAAA,WACA,OAAAnG,EAAA+G,gBAAA/G,EAAAmH,MAAA+D,gBAGAlL,EAAA+G,gBAAA,SAAAC,GACA,eAAAhI,OAAA,yCAAAiI,QAAAD,OAGAhH,EAAAmL,mBAAA,WACA,MAAAnL,GAAA+K,oBAAA/K,EAAAmG,sBAGAnG,EAAAoL,kBAEApL,EAAAqL,gBAAA,SAAAC,GAGA,OAFAC,GAAAD,EAAAE,cAAAC,OACAC,KACAC,EAAA,EAAuCA,EAAA3L,EAAAoL,eAAAQ,QAAAF,EAAAE,OAAA,GAAyDD,IAAA,CAChG,GAAAE,GAAA7L,EAAAoL,eAAAO,GAAAV,WACA,KAAAY,EAAAL,cAAAvE,QAAAsE,IACAG,EAAAI,MAA8CC,MAAAF,EAAAxG,MAAAwG,IAE9C,MAAAH,IAGA1L,EAAAgM,sBACAC,QAAAjM,EAAAqL,iBAGArL,EAAAkM,oBAAA,WACA7S,EAAAS,mBAA0DW,EAAAyB,YAAA,kBAC1DsD,QAAA,SAAAzF,EAAA0F,EAAArF,EAAAsF,GACAM,EAAAoL,eAAA9R,QAAAwK,KAAA/J,KAC6B6F,MAAA,SAAA7F,EAAA0F,EAAArF,EAAAsF,GAC7B,GAAAtB,KACAA,GAAA+L,YAAApQ,EACAqE,EAAAE,eAAA,QACAR,EAAAS,WAAA,iBAAAH,MAIA4B,EAAAkM,4BnBkpCM,SAASpT,EAAQD,GoBrxCvBiH,gBACAmB,UAAA,2BACA,OACAkB,SAAA,IACAC,YAAA,uDACAjB,OACAkB,gBAAA,IACAC,oBAAA,IACAC,gBAAA,IACA4E,MAAA,KAEApH,YAAA,6FACA,SAAAC,EAAAtB,EAAArF,EAAAoB,EAAAsD,EAAAyE,GACAxC,EAAA0C,SAAA,KACA1C,EAAA2C,UAAA,2CACA3C,EAAAqK,YAAA,WACA,KAAA7H,EAAAS,YAAAjD,EAAA0C,WACA1C,EAAAsK,mBAAA,yEACA9H,EAAAiB,qBAGAzD,EAAAoD,YAAA,EACA/J,EAAAS,aAAAkG,EAAAuK,cAA8ElH,UAAAb,EAAAS,YAAAjD,EAAA0C,WAA2DjI,EAAAyB,YAAA,iBACzIsD,QAAA,SAAAzF,EAAA0F,EAAArF,EAAAsF,GACA3B,EAAAE,QAAAlE,IAIAgE,EAAAI,iBAAApE,EAAAsE,gBACA2B,EAAAwK,cACAxK,EAAAsC,oBAAA,WACA5D,EAAAE,oBAAAoB,EAAAuH,uBANAvH,EAAAsK,mBAAAvQ,EAAAsE,kBASiCuB,MAAA,SAAA7F,EAAA0F,EAAArF,EAAAsF,GACjCM,EAAAsK,mBAAAvM,EAAAU,uBAbApF,WAciC,WACjC2G,EAAAoD,YAAA,MAMApD,EAAAuK,WAAA,WACA,GAAA9C,GAAAnO,QAAAwK,KAAA9D,EAAAmH,MACA,KACAM,EAAAgD,cAAAC,WAAAjD,EAAAgD,cAAA3D,QAAA,UACyB,MAAA6D,IAEzB,IACAlD,EAAAmD,WAAAF,WAAAjD,EAAAmD,WAAA9D,QAAA,UACyB,MAAA6D,IAEzB,MAAAlD,IAGAzH,EAAAyD,iBAAA,WACAjB,EAAAzB,OAAAf,EAAA0C,WAGA1C,EAAAsK,mBAAA,SAAA3G,GACA5F,EAAAI,iBAAAwF,GACA3D,EAAAyD,mBACAzD,EAAAsC,oBAAAtC,EAAAuC,iBAGAvC,EAAA6K,gBAAA,wBACA7K,EAAAwK,YAAA,WACAxK,EAAAyD,mBACAzD,EAAAmH,SACAnH,EAAA8K,iBAAA,EACA9K,EAAAoK,eAAA,EACApK,EAAAmM,cAAA,GAEAnM,EAAA4D,YAAA,SAAAlB,GACA1C,EAAA0C,YAGA1C,EAAA+K,iBAAA,WACA,GAAA/K,EAAAmH,MACA,MAAAnI,SAAAgB,EAAAmH,MAAA6D,cAAA,IAAAhL,EAAAoM,iBAGApM,EAAAmG,mBAAA,WACA,MAAAnG,GAAAmH,OACA,IAAAnH,EAAAmH,MAAA+D,eACA,MAAAlL,EAAAmH,MAAA+D,eACAlM,QAAAgB,EAAAmH,MAAA+D,eACA,aAAAlL,EAAAmH,MAAA+D,eACA,aAAAlL,EAAAmH,MAAA+D,eAEAlL,EAAAmL,mBAAA,WACA,MAAAnL,GAAA+K,oBAAA/K,EAAAmG,4BpBkyCM,SAASrN,EAAQD,GqB93CvBiH,gBACAmB,UAAA,oCACA,OACAkB,SAAA,IACAC,YAAA,iEACAjB,OACAkL,MAAA,IACAjG,iBAAA,IACAkG,WAAA,KAEAvM,YAAA,gEAAAjC,EAAAkC,EAAA3G,EAAAoB,GACAuF,EAAAuM,mBACAvM,EAAAkL,eACA9F,KAAA,YACAoH,QAAA,aAEAxM,EAAAyM,sBAAA,WACApT,EAAAS,mBAAsDW,EAAAyB,YAAA,yBACtDsD,QAAA,SAAAzF,GACAiG,EAAAuM,gBAAAjT,QAAAwK,KAAA/J,GACAiG,EAAAsM,YACAtM,EAAAuM,gBAAAT,MAA6D1G,KAAA,QAAAC,MAAA,GAAAmH,QAAA,YAEpC5M,MAAA,SAAA7F,GACzB,GAAAqE,KACAA,GAAA+L,YAAApQ,EACAqE,EAAAE,eAAA,QACAR,EAAAS,WAAA,iBAAAH,MAGA4B,EAAA0M,iBAAA,SAAA1F,GACAhH,EAAAoG,iBAAAY,GAEAhH,EAAAyM,wBACAzM,EAAAwF,OAAA,mBACAxF,EAAAqM,QACArM,EAAAkL,eACA9F,KAAA,YACAoH,QAAA,cAGAxM,EAAAqM,OAAA,IAEArM,EAAAwF,OAAA,2BACAxF,EAAAoG,iBAAApG,EAAAkL,cAAA9F,OAEApF,EAAAmG,mBAAA,WACA,UAAAnG,EAAAgH,UACA,MAAAhH,EAAAgH,UACAhI,QAAAgB,EAAAgH,gBrB24CM,SAASlO,EAAQD,GsB57CvBiH,gBACAmB,UAAA,2BACA,OACAkB,SAAA,IACAC,YAAA,mDACAjB,OACAhC,UAAA,IACAwN,UAAA,IACA9N,YAAA,KAEAkB,YAAA,gEAAAC,EAAAlC,EAAAzE,EAAAoB,GACAuF,EAAA4M,UACA5M,EAAA6M,qBAAA,GACA7M,EAAA8M,iBAAA,GAEA9M,EAAA+M,mBAAA,WACA/M,EAAAoD,YAAA,EACApD,EAAA4M,OAAA9N,IAAA,kBAAAkB,EAAA2M,UACA3M,EAAAmG,uBACAnG,EAAA4M,OAAAxG,iBAAA,IAEApG,EAAAnB,YAAAvF,QAAAwK,KAAA9D,EAAA4M,QACA5M,EAAAnB,YAAAuG,KAAAwG,OAAA,IACA5L,EAAAnB,YAAAuG,KAAA,IAEAtH,EAAAS,WAAA,sBAAAjF,QAAAwK,KAAA9D,EAAAnB,cACAxF,EAAAS,aAAAkG,EAAAnB,eAAsEpE,EAAAyB,YAAA,wBACtEsD,QAAA,SAAAzF,EAAA0F,EAAArF,EAAAsF,GACAM,EAAAb,UAAApF,EAAA4F,YACyBC,MAAA,SAAA7F,EAAA0F,EAAArF,EAAAsF,GACzB,GAAAtB,KACAA,GAAA+L,YAAApQ,EACAqE,EAAAE,eAAA,QACAR,EAAAS,WAAA,iBAAAH,KAPA/E,WAQqB,WACrB2G,EAAAoD,YAAA,KAIApD,EAAAwF,OAAA,8BACAxF,EAAA+M,uBAGA/M,EAAAgN,sBAAA,WACAhN,EAAAnB,YAAAvF,QAAAwK,KAAA9D,EAAA4M,SACA5M,EAAA4M,OAAAxH,KAAAwG,OAAA,MAAA5L,EAAA4M,OAAAxH,KAAAwG,SACA5L,EAAA+M,sBAIA/M,EAAAwF,OAAA,qCACAxF,EAAA+G,gBAAA/G,EAAA8M,mBACA9M,EAAA+G,gBAAA/G,EAAA4M,OAAAxG,mBACApG,EAAA8M,mBAAA9M,EAAA4M,OAAAxG,mBACApG,EAAA8M,iBAAA9M,EAAA4M,OAAAxG,iBACApG,EAAA+M,wBAIA/M,EAAAiN,aAAA,WACAjN,EAAA4M,OAAAM,SAAA,EACAlN,EAAA4M,OAAAxH,KAAA,GACApF,EAAAoK,eAAA,EACApK,EAAA4M,OAAAxG,iBAAA,GACApG,EAAA4M,OAAAxG,iBAAA,GACApG,EAAA4M,OAAAO,UAAA,EAEArP,EAAAS,WAAA,sBAAAjF,QAAAwK,KAAA9D,EAAAnB,eAGAmB,EAAAoN,sBAAA,WACApN,EAAA6M,qBAAA,qBAAA7M,EAAA6M,qBACA,sCAEA7M,EAAAmG,mBAAA,WACA,OAAAnG,EAAA+G,gBAAA/G,EAAA4M,OAAAxG,mBAGApG,EAAA+G,gBAAA,SAAAC,GACA,eAAAhI,OAAA,yCAAAiI,QAAAD,OAGAhH,EAAAiN,qBtBw8CM,SAASnU,EAAQD,GuB1hDvBiH,gBACAmB,UAAA,+BACA,OACAkB,SAAA,IACAC,YAAA,8CACAjB,OACAkM,cAAA,IACAC,kBAAA,IACAC,gBAAA,IACAC,WAAA,IACAC,WAAA,KAEA1N,YAAA,wEACA,SAAAC,EAAA0N,EAAAC,EAAA/E,EAAAgF,EAAAnT,GACAuF,EAAAsC,uBACAtC,EAAA5B,eACA4B,EAAAyN,YAAA,EACAzN,EAAA6N,qBAAA,EACA7N,EAAA8N,4BAAA,EAEA9N,EAAA+N,aAAA,WACA/N,EAAAgO,uBACAhO,EAAAiO,qBAAA,EACAjO,EAAAuN,iBAAA,GAEAvN,EAAAkO,cAAA,WACAlO,EAAAgO,uBACAhO,EAAAmO,wBAAA,EACAnO,EAAAuN,iBAAA,GAEAvN,EAAAoO,yBAAA,WACApO,EAAAgO,uBACAhO,EAAAqO,sBAAA,EACArO,EAAAuN,iBAAA,GAEAvN,EAAAsO,mBAAA,WACAtO,EAAAgO,uBACAhO,EAAAuO,sBAAA,EACAvO,EAAAuN,iBAAA,GAEAvN,EAAAwO,mBAAA,WACAxO,EAAAgO,uBACAhO,EAAAyO,wBAAA,EACAzO,EAAAuN,iBAAA,GAEAvN,EAAA0O,oBAAA,WACA1O,EAAAgO,uBACAhO,EAAA2O,4BAAA,EACA3O,EAAAuN,iBAAA,GAEAvN,EAAA4O,oBAAA,WACA5O,EAAAgO,uBACAhO,EAAA8N,4BAAA,EACA9N,EAAAuN,iBAAA,GAEAvN,EAAA6O,sBAAA,WACA7O,EAAAgO,uBACAhO,EAAA8O,2BAAA,EACA9O,EAAAuN,iBAAA,GAEAvN,EAAA+O,uBAAA,WACA/O,EAAAsC,oBAAA,WACAtC,EAAAgP,qBAEAhP,EAAAgO,uBACAhO,EAAAiP,iBAAA,EACAjP,EAAAuN,iBAAA,EACAvN,EAAA6N,qBAAA,GAEA7N,EAAAgO,qBAAA,WACAhO,EAAAuN,iBAAA,EACAvN,EAAAuO,sBAAA,EACAvO,EAAAyO,wBAAA,EACAzO,EAAAiO,qBAAA,EACAjO,EAAAmO,wBAAA,EACAnO,EAAAqO,sBAAA,EACArO,EAAA2O,4BAAA,EACA3O,EAAA8O,2BAAA,EACA9O,EAAAiP,iBAAA,EACAjP,EAAA6N,qBAAA,EACA7N,EAAA8N,4BAAA,GAEA9N,EAAAkP,qBAAA,SAAA5M,GACAtC,EAAAgO,uBACA,kBAAA1L,KACAA,IACAtC,EAAAsC,yBAGAtC,EAAAwF,OAAA,2BACA,cAAA2J,KAAAnP,EAAAqN,iBACArN,EAAAyN,YAAA,EACAzN,EAAAsC,oBAAA,WACAtC,EAAAyN,YAAA,GAEA2B,QAAAC,IAAArP,EAAAsN,mBACA8B,QAAAC,IAAAC,KAAAC,MAAAvP,EAAAsN,oBACAtN,EAAAwP,wBAAAF,KAAAC,MAAAvP,EAAAsN,uBAIAtN,EAAA6F,IAAA,+BAAArE,EAAAsE,GACA9F,EAAAwP,wBAAA1J,KAGA9F,EAAAwP,wBAAA,SAAAC,GACAzP,EAAAyP,sBACAzP,EAAA8N,4BAAA,EACA9N,EAAA0O,sBACA1O,EAAAsC,oBAAA,WACAtC,EAAAyP,uBACAzP,EAAAyN,YAAA,IAIAzN,EAAA0P,aAAA,WACAhC,EAAA5M,SAAA6O,KAAA,KAEA3P,EAAA6F,IAAA,wCACA7F,EAAA4O,wBAGA5O,EAAA6F,IAAA,0BAAArE,EAAAsE,GACA9F,EAAAyP,qBAAA3J,GACA9F,EAAAsC,oBAAA,WACAtC,EAAA0O,uBAEA1O,EAAAwO,uBAGAxO,EAAA6F,IAAA,0BAAArE,EAAAsE,GACA9F,EAAA5B,YAAA0H,EACA9F,EAAAyN,YAAA,EACAzN,EAAA6O,0BAGA7O,EAAA6F,IAAA,6BACA7F,EAAA+O,2BAGA/O,EAAA6F,IAAA,8BACA7F,EAAA+N,iBAGA/N,EAAA6F,IAAA,iCACA7F,EAAAkO,kBAGAlO,EAAA6F,IAAA,0BAAArE,EAAAsE,GACA,GAAA8J,GAAA9J,CACA,KAAA8J,GACA5P,EAAA6P,6BAIA7P,EAAA6P,yBAAA,WACA7P,EAAAsC,uBACAtC,EAAAkP,uBACAlP,EAAAyN,YAAA,GAGAzN,EAAA8P,eAAA,WACA,GAAAtP,SAAAuF,eAAA,iBACA,GAAAgK,GAAAvP,SAAAuF,eAAA,gBAAAV,KACA,IAAArG,cAAA+Q,IAAA,IAAAA,EAAA,CACA,GAAA3R,KACAA,GAAAC,eAAA0R,EACA3R,EAAAE,eAAA,QACA0B,EAAA5B,cACA4B,EAAA6O,2BAKA7O,EAAAgP,kBAAA,WACA,GAAAgB,GAAA,GAAA3P,KACA2P,GAAAC,QAAAD,EAAAE,UAAA,KACAtC,EAAAuC,IAAA1V,EAAAyB,YAAA,2BAA4FkU,QAAAJ,KAG5FhQ,EAAAgO,uBACAhO,EAAA8P,iBAEAlH,EAAA,WACAtP,QAAAiH,QAAA3G,EAAA,0BAAAyW,YAAA,oBACqB,KAErB,QAAAzC,EAAA0C,IAAA7V,EAAAyB,YAAA,qBAAA8D,EAAAqN,eACAzE,EAAA,WACA5I,EAAA+O,0BACyB,WvBuiDnB,SAASjW,EAAQD,GwBruDvBiH,gBACAmB,UAAA,sEAAAyM,EAAA6C,GACA,OACApO,SAAA,IACAC,YAAA,gEACAjB,OACA4M,aAAA,IACAG,cAAA,IACAI,mBAAA,IACAF,yBAAA,KAEAlN,KAAA,SAAAlB,GACAA,EAAA6I,SAAA,uBACA7I,EAAA8I,UAAAlP,EAAA,mCAAAC,KAAA,WACAmG,EAAAwQ,gBAAA,EACAlX,QAAAiH,QAAAmN,GAAAhN,KAAA,oBACAV,EAAAwQ,eAAAC,KAAAC,aAAA,GACA1Q,EAAA2E,WAEA3E,EAAA2Q,SAAA,WACAJ,WxBkvDM,SAASzX,EAAQD,GyBtwDvBiH,gBACAmB,UAAA,0BACA,OACAkB,SAAA,IACAC,YAAA,8CACArC,YAAA,oBACA,SAAAC,EAAA4I,GACAA,EAAA,WACA5I,EAAA4Q,OAAA,GACqB,YzBkxDf,SAAS9X,EAAQD,G0B3xDvBiH,gBACAmB,UAAA,6BACA,OACAkB,SAAA,IACAhB,OACA0P,SAAA,IACAC,qBAAA,KAEA1O,YAAA,yCACArC,YAAA,0DAAAjC,EAAAkC,EAAAvF,EAAAmO;AACA5I,EAAA+Q,YACA/Q,EAAAgR,kBAAA,EACAhR,EAAAiR,aAAA,EACAjR,EAAAkR,cAAA,EACAlR,EAAAmR,aAAA1W,EAAAyB,YAAA,kBACA8D,EAAA8Q,qBAAA,GACA9Q,EAAAoR,UAAA,SAAAC,GACA,GAAAC,GAAA,GAAAC,WACAD,GAAAE,OAAA,SAAAhQ,GACA,GAAAiQ,GAAA,GAAAC,MACA1R,GAAA8Q,qBAAA,GACAW,EAAAE,QAAA,WAEA,MADA3R,GAAA4R,8BACA,GAEAH,EAAAD,OAAA,WACA,MAAAf,MAAAoB,MAAA7R,EAAAmR,cACAV,KAAAqB,OAAA9R,EAAAmR,cAEAnR,EAAA+R,kCACA,IAEA/R,EAAA+Q,SAAAiB,KAAAC,aACAjS,GAAAkS,yBAEAT,EAAAU,IAAA3Q,EAAAK,OAAAuQ,QAEAd,EAAAe,cAAAhB,SAGArR,EAAAsS,YAAA,WACAtS,EAAA8Q,qBAAA,GACA9Q,EAAA+Q,SAAAiB,KAAAO,UAGAvS,EAAAwS,YAAA,WACAxS,EAAA8Q,qBAAA,IAGA9Q,EAAAyS,gBAAA,WACA,WAAAzS,EAAA8Q,sBAGA9Q,EAAAkS,qBAAA,WACAlS,EAAAgR,kBAAA,EACAhR,EAAAkR,cAAA,EACAlR,EAAAiR,aAAA,GAGAjR,EAAA0S,gBAAA,SAAA5I,GACA,GAAAxL,GAAAgR,KAAAC,MAAAzF,EACA,IAAAxL,EAAAJ,KACA8B,EAAA6Q,SAAAvS,EAAA6L,YAGAnK,EAAA2S,kBAAArU,IAGA0B,EAAA2S,kBAAA,SAAA/S,GACA9B,EAAAS,WAAA,iBAAAqB,IAEAI,EAAAwF,OAAA,oBAAAoN,EAAAC,GACA,KAAAD,GAAA,mBAAAA,IACA5S,EAAA+Q,SAAAiB,KAAAO,WAIAvS,EAAA8S,wBAAA,WACA,MAAA9S,GAAAkR,cAAAlR,EAAAiR,aAGAjR,EAAA+R,+BAAA,WACA/R,EAAAkS,uBACAlS,EAAAiR,aAAA,EACAjR,EAAAgR,kBAAA,EACApI,EAAA,WACA5I,EAAA+Q,SAAAiB,KAAAO,UACqB,MAErBvS,EAAA4R,2BAAA,WACA5R,EAAAkS,uBACAlS,EAAAkR,cAAA,EACAlR,EAAAgR,kBAAA,EACApI,EAAA,WACA5I,EAAA+Q,SAAAiB,KAAAO,UACqB,Y1BwyDf,SAASzZ,EAAQD,G2Bv4DvBiH,gBACAmB,UAAA,kCACA,OACAkB,SAAA,IACAC,YAAA,4CACAjB,OACA/C,YAAA,S3Bm5DM,SAAStF,EAAQD,G4Bz5DvBiH,gBACAmB,UAAA,2BACA,OACAkB,SAAA,IACAC,YAAA,uCACAjB,OACA0H,SAAA,IACAC,UAAA,KAEA/I,YAAA,SACA,SAAAC,GACAA,EAAA+S,YAAA,gDAAA/S,EAAA6I,SACA7I,EAAAgT,WAAA,wCACAhT,EAAA6I,SAAA,SAAA7I,EAAA8I,UAAA,oBACA9I,EAAAiT,cAAA,qCAAAjT,EAAA6I,e5Bs6DM,SAAS/P,EAAQD,G6Bp7DvBiH,gBACAmB,UAAA,kCACA,OACAkB,SAAA,IACAC,YAAA,iD7B+7DM,SAAStJ,EAAQD,G8Bn8DvBiH,gBACAmB,UAAA,iCACA,OACAkB,SAAA,IACAC,YAAA,6DACAjB,OACA+R,KAAA,IACAC,KAAA,IACA7Q,oBAAA,KAEAvC,YAAA,4EACA,SAAAC,EAAA6D,EAAAxK,EAAAoB,EAAAsD,EAAA6K,GACA5I,EAAA+C,cAAA,mDACA/C,EAAAyC,SAAsC2Q,aAAApT,EAAAmT,KAAAD,KAAAlT,EAAAkT,MACtClT,EAAAqT,eAAA,SAAA5Q,GACAzC,EAAAoD,YAAA,EACA/J,EAAAS,aAAA2I,KAA+DhI,EAAAyB,YAAA,uBAC/DsD,QAAA,SAAAzF,EAAA0F,EAAArF,EAAAsF,GACAM,EAAAsT,wBAAAvZ,KAC6B6F,MAAA,SAAA7F,EAAA0F,EAAArF,EAAAsF,GAC7B3B,EAAAS,4BAJAnF,WAK6B,WAC7B2G,EAAAoD,YAAA,IAEApD,EAAAyC,SAA0C2Q,aAAApT,EAAAmT,KAAAD,KAAAlT,EAAAkT,OAE1ClT,EAAAsT,wBAAA,SAAAvZ,GACAgE,EAAAI,iBAAApE,EAAAsE,gBACAN,EAAAE,QAAAlE,IACA6O,EAAA,WACA/H,OAAAC,SAAAgG,QAAA,MAC6B,Y9Bi9DvB,SAAShO,EAAQD,EAASH,G+Bn/DhCA,EAAA,K/By/DM,SAASI,EAAQD","file":"bundle.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t__webpack_require__(1);\n\t__webpack_require__(2);\n\t__webpack_require__(3);\n\t__webpack_require__(4);\n\t__webpack_require__(5);\n\t__webpack_require__(6);\n\t__webpack_require__(7);\n\t__webpack_require__(8);\n\t__webpack_require__(9);\n\t__webpack_require__(10);\n\t__webpack_require__(11);\n\t__webpack_require__(12);\n\t__webpack_require__(13);\n\t__webpack_require__(14);\n\t__webpack_require__(15);\n\t__webpack_require__(16);\n\t__webpack_require__(17);\n\t__webpack_require__(18);\n\t__webpack_require__(19);\n\t__webpack_require__(20);\n\t__webpack_require__(21);\n\t__webpack_require__(22);\n\t__webpack_require__(23);\n\t__webpack_require__(24);\n\t__webpack_require__(25);\n\t__webpack_require__(26);\n\t__webpack_require__(27);\n\t__webpack_require__(28);\n\t__webpack_require__(29);\n\tmodule.exports = __webpack_require__(30);\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\tvar requestManager = angular.module('requestManager', []);\r\n\t\r\n\trequestManager.service('requestManager', ['$http',\r\n\t    function ($http) {\r\n\t        var requestControllerService = {};\r\n\t        var csrfToken;\r\n\t        requestControllerService.initMainController = function () {\r\n\t            csrfToken = $(\"meta[name='_csrf']\").attr(\"content\");\r\n\t        };\r\n\t        requestControllerService.makePostCall=function(data, params, url){\r\n\t            params._csrf= csrfToken;\r\n\t            return $http({\r\n\t                method: 'POST',\r\n\t                url: url,\r\n\t                headers: {\r\n\t                    'Content-Type': 'application/json',\r\n\t                    'X-CSRF-TOKEN': csrfToken\r\n\t                },\r\n\t                params: params,\r\n\t                data: data\r\n\t            });\r\n\t        };\r\n\t        requestControllerService.getActualToken=function(){\r\n\t            return csrfToken;\r\n\t        }\r\n\t        requestControllerService.initMainController();\r\n\t        return requestControllerService;\r\n\t    }]);\r\n\t\r\n\t\r\n\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\tvar configManager = angular.module('configService', []);\r\n\t\r\n\tconfigManager.service('configService', [function () {\r\n\t    var configService = {};\r\n\t    var GET_OFFERS_ENDPOINT = \"getOffers\";\r\n\t    var GET_HOTTEST_OFFERS_ENDPOINT = \"getHottestOffers\";\r\n\t    var GET_OFFER_ENDPOINT = \"getOffer\";\r\n\t    var CREATE_OFFER_ENDPOINT = \"createOffer\";\r\n\t    var UPDATE_OFFER_ENDPOINT = \"updateOffer\";\r\n\t    var EXPIRE_OFFER_ENDPOINT = \"expireOffer\";\r\n\t    var REMOVE_OFFER_ENDPOINT = \"removeOffer\";\r\n\t    var CREATE_ACCOUNT_ENDPOINT = \"createUser\";\r\n\t    var UPDATE_ACCOUNT_ENDPOINT = \"updateUser\";\r\n\t    var BAN_USER = \"banUser\";\r\n\t    var GET_ACCOUNT_DETAILS_ENDPOINT = \"accountDetails\";\r\n\t    var GET_COMPANIES_ENDPOINT = \"companyList\";\r\n\t    var GET_OFFER_CATEGORIES_ENDPOINT = \"getOfferCategories\";\r\n\t    var POSITIVE_FEEDBACK_ENDPOINT = \"votePositive\";\r\n\t    var NEGATIVE_FEEDBACK_ENDPOINT = \"voteNegative\";\r\n\t    var CREATE_COMMENT_ENDPOINT = \"createComment\";\r\n\t    var DELETE_COMMENT_ENDPOINT = \"deleteComment\";\r\n\t    var QUOTE_COMMENT_ENDPOINT = \"quoteComment\";\r\n\t    var GET_FILTERED_ENDPOINT = \"getFilteredOffers\";\r\n\t    var REQUEST_PASSWORD_UPDATE = \"forgottenPassword\";\r\n\t    var REQUEST_PASSWORD = \"requestForgottenPassword\";\r\n\t    var TUTORIAL_COOKIE = \"aporlaoferta-tut\";\r\n\t    var LAW_COOKIE = \"aporlaoferta-cle\";\r\n\t    var IMAGE_MAX_SIZE = 4500;\r\n\t    configService.getEndpoint = function (key) {\r\n\t        return configMap[key];\r\n\t    };\r\n\t    var configMap = {\r\n\t        'get.offers': GET_OFFERS_ENDPOINT,\r\n\t        'get.hottest.offers': GET_HOTTEST_OFFERS_ENDPOINT,\r\n\t        'get.offer': GET_OFFER_ENDPOINT,\r\n\t        'create.offer': CREATE_OFFER_ENDPOINT,\r\n\t        'update.offer': UPDATE_OFFER_ENDPOINT,\r\n\t        'expire.offer': EXPIRE_OFFER_ENDPOINT,\r\n\t        'remove.offer': REMOVE_OFFER_ENDPOINT,\r\n\t        'create.account': CREATE_ACCOUNT_ENDPOINT,\r\n\t        'update.account': UPDATE_ACCOUNT_ENDPOINT,\r\n\t        'get.account.details': GET_ACCOUNT_DETAILS_ENDPOINT,\r\n\t        'get.companies': GET_COMPANIES_ENDPOINT,\r\n\t        'get.offer.categories': GET_OFFER_CATEGORIES_ENDPOINT,\r\n\t        'ban.user': BAN_USER,\r\n\t        'positive.feedback': POSITIVE_FEEDBACK_ENDPOINT,\r\n\t        'negative.feedback': NEGATIVE_FEEDBACK_ENDPOINT,\r\n\t        'create.comment': CREATE_COMMENT_ENDPOINT,\r\n\t        'delete.comment': DELETE_COMMENT_ENDPOINT,\r\n\t        'quote.comment': QUOTE_COMMENT_ENDPOINT,\r\n\t        'get.filtered.offers': GET_FILTERED_ENDPOINT,\r\n\t        'password.forgotten': REQUEST_PASSWORD_UPDATE,\r\n\t        'password.forgotten.request': REQUEST_PASSWORD,\r\n\t        'max.image.size': IMAGE_MAX_SIZE,\r\n\t        'tutorial.cookie':TUTORIAL_COOKIE,\r\n\t        'law.cookie':LAW_COOKIE\r\n\t    };\r\n\t    return configService;\r\n\t}]);\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\tvar alertManager = angular.module('alertService', []);\r\n\t\r\n\talertManager.service('alertService', ['$rootScope', function ($rootScope) {\r\n\t    var alertService = {};\r\n\t    var defaultMessage = \"No se ha podido ejecutar la operación\";\r\n\t    alertService.isAllOk = function (data) {\r\n\t        return data.code == 0;\r\n\t    }\r\n\t    alertService.sendErrorMessage = function (data) {\r\n\t        var theResponse = {};\r\n\t        theResponse.descriptionEsp = data;\r\n\t        theResponse.responseResult = \"error\";\r\n\t        $rootScope.$broadcast('serverResponse', theResponse);\r\n\t    };\r\n\t    alertService.sendDefaultErrorMessage = function () {\r\n\t        var theResponse = {};\r\n\t        theResponse.descriptionEsp = alertService.getDefaultMessage();\r\n\t        theResponse.responseResult = \"error\";\r\n\t        $rootScope.$broadcast('serverResponse', theResponse);\r\n\t    }\r\n\t    alertService.getDefaultMessage = function () {\r\n\t        return defaultMessage;\r\n\t        ;\r\n\t    }\r\n\t    return alertService;\r\n\t}]);\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\tvar offerManager = angular.module('offerManager', []);\r\n\t\r\n\tofferManager.service('offerManager', ['$rootScope', 'alertService', 'requestManager', 'configService',\r\n\t    function ($rootScope, alertService, requestManager, configService) {\r\n\t        var offerManagerController = {};\r\n\t        offerManagerController.requestNewestOffers = function (offerFilter) {\r\n\t            offerFilter.hot = false;\r\n\t            offerManagerController.requestMoreOffers(offerFilter, undefined, offerManagerController.broadcastOfferList,\r\n\t                function () {\r\n\t                });\r\n\t        }\r\n\t\r\n\t        offerManagerController.requestHottestOffers = function (offerFilter) {\r\n\t            offerFilter.hot = true;\r\n\t            offerManagerController.requestMoreOffers(offerFilter, undefined, offerManagerController.broadcastOfferList,\r\n\t                function () {\r\n\t                });\r\n\t        }\r\n\t\r\n\t        offerManagerController.broadcastOfferList = function (offerList) {\r\n\t            $rootScope.$broadcast('offerList', offerList);\r\n\t        }\r\n\t\r\n\t        offerManagerController.requestMoreOffers = function (offerFilter, lastOffer, callback, errorCallback) {\r\n\t            requestManager.makePostCall(offerFilter, {'number': lastOffer}, configService.getEndpoint('get.filtered.offers'))\r\n\t                .success(function (data, status, headers, config) {\r\n\t                    callback(data.theOffers);\r\n\t                    //$rootScope.$broadcast('offerList', data.theOffers);\r\n\t                }).error(function (data, status, headers, config) {\r\n\t                alertService.sendDefaultErrorMessage();\r\n\t                errorCallback();\r\n\t            });\r\n\t        }\r\n\t        offerManagerController.showSpecifications = function (id) {\r\n\t            $rootScope.$broadcast('loadingOfferSpecifications');\r\n\t            requestManager.makePostCall({}, {'id': id}, configService.getEndpoint('get.offer'))\r\n\t                .success(function (data, status, headers, config) {\r\n\t                    if (alertService.isAllOk(data)){\r\n\t                        $rootScope.$broadcast('offerSpecifications', data.theOffers);\r\n\t                    }\r\n\t                    else {\r\n\t                        alertService.sendErrorMessage(data.descriptionEsp);\r\n\t                    }\r\n\t                }).error(function (data, status, headers, config) {\r\n\t                    alertService.sendDefaultErrorMessage();\r\n\t            });\r\n\t        }\r\n\t        return offerManagerController;\r\n\t    }]);\r\n\t\r\n\t\r\n\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\n\t/**\r\n\t * Created by hasiermetal on 16/03/15.\r\n\t */\r\n\taporlaofertaApp = angular.module('aPorLaOferta', [\r\n\t    'angular.filter',\r\n\t    'requestManager',\r\n\t    'alertService',\r\n\t    'configService',\r\n\t    'flow',\r\n\t    'ngAnimate',\r\n\t    'vcRecaptcha',\r\n\t    'offerManager',\r\n\t    'pwCheckModule',\r\n\t    'ngMessages',\r\n\t    'ngDropdowns',\r\n\t    'ngSanitize',\r\n\t    'MassAutoComplete',\r\n\t    'truncate',\r\n\t    'angular-cookie-law',\r\n\t    'ngCookies',\r\n\t    'slick'\r\n\t]);\r\n\t\r\n\t//main controller\r\n\taporlaofertaApp.controller('APorLaOfertaController', ['$scope', '$rootScope', function ($scope, $rootScope) {\r\n\t    $scope.keyHandler = function ($event) {\r\n\t        $rootScope.$broadcast('keydownControl', $event.keyCode);\r\n\t    };\r\n\t\r\n\t    $scope.time = new Date().getTime();\r\n\t    angular.element(document.body).bind(\"mousemove keypress\", function () {\r\n\t        $scope.time = new Date().getTime();\r\n\t    });\r\n\t    $scope.minute = 60000;\r\n\t    $scope.refresh = function () {\r\n\t        (new Date().getTime() - $scope.time >= 20 * $scope.minute) ? window.location.reload() : setTimeout($scope.refresh, 10 * $scope.minute);\r\n\t    }\r\n\t    setTimeout($scope.refresh, 10 * $scope.minute);\r\n\t}]);\r\n\t\r\n\taporlaofertaApp.directive('ngConfirmClick', [\r\n\t    function () {\r\n\t        return {\r\n\t            link: function (scope, element, attr) {\r\n\t                var msg = attr.ngConfirmClick || \"\";\r\n\t                var clickAction = attr.confirmedClick;\r\n\t                element.bind('click', function (event) {\r\n\t                    if (window.confirm(msg)) {\r\n\t                        scope.$eval(clickAction)\r\n\t                    }\r\n\t                });\r\n\t            }\r\n\t        };\r\n\t    }]);\r\n\t\r\n\taporlaofertaApp.config(['flowFactoryProvider', function (flowFactoryProvider) {\r\n\t    flowFactoryProvider.defaults = {\r\n\t        target: 'uploadImage',\r\n\t        permanentErrors: [404, 500, 501],\r\n\t        maxChunkRetries: 1,\r\n\t        chunkRetryInterval: 5000,\r\n\t        simultaneousUploads: 4,\r\n\t        singleFile: true\r\n\t    };\r\n\t\r\n\t}]);\n\n/***/ },\n/* 6 */\n/***/ function(module, exports) {\n\n\t/**\r\n\t * Created by hasiermetal on 16/03/14.\r\n\t */\r\n\taporlaofertaApp\r\n\t    .directive('ngAccountCreation', function () {\r\n\t        return {\r\n\t            restrict: 'A',\r\n\t            templateUrl: 'resources/js/account/account-signup/createAccount.jsp',\r\n\t            scope: {\r\n\t                overheadDisplay: '=',\r\n\t                customCloseCallback: '=',\r\n\t                displayCallback: '='\r\n\t            },\r\n\t            controller: ['$scope', 'requestManager', 'configService', 'vcRecaptchaService', 'alertService',\r\n\t                function ($scope, requestManager, configService, vcRecaptchaService, alertService) {\r\n\t                    $scope.theUser = {};\r\n\t                    $scope.widgetId = null;\r\n\t                    $scope.publicKey = \"6LdqHQoTAAAAAAht2VhkrLGU26eBOjL-nK9zXxcn\";\r\n\t                    $scope.disableNickname = false;\r\n\t                    $scope.passwordUpdateRequired = true;\r\n\t                    $scope.validMail = /^[_a-z0-9-]+(\\.[_a-z0-9-]+)*(\\+[a-z0-9-]+)?@[a-z]+\\.[a-z.]{2,5}$/;\r\n\t                    $scope.validPassword= /^(?=.*?)(?=.*?[a-z])(?=.*?[0-9])(?=.*?).{8,}$/;\r\n\t                    $scope.createAccount = function (theUser) {\r\n\t                        if (vcRecaptchaService.getResponse($scope.widgetId) === \"\") {\r\n\t                            $scope.displayErrorMessageAndDisplayAccount();\r\n\t                        }\r\n\t                        else {\r\n\t                            delete $scope.theUser.oldPassword;\r\n\t                            $scope.processing = true;\r\n\t                            requestManager.makePostCall(theUser, {recaptcha: vcRecaptchaService.getResponse($scope.widgetId)}, configService.getEndpoint('create.account'))\r\n\t                                .success(function (data, status, headers, config) {\r\n\t                                    $scope.processAccountResponse(data);\r\n\t                                }).error(function (data, status, headers, config) {\r\n\t                                    $scope.accountDefaultError();\r\n\t                                }).finally(function () {\r\n\t                                    $scope.processing = false;\r\n\t                                });\r\n\t                            $scope.theUser = {};\r\n\t                            $scope.userPassword2 = \"\";\r\n\t                            //$scope.overheadDisplay = false;\r\n\t                        }\r\n\t                    }\r\n\t                    $scope.displayErrorMessageAndDisplayAccount = function () {\r\n\t                        alertService.sendErrorMessage(\"Por favor, haga click en el captcha para demostrar que no es un robot\");\r\n\t                        $scope.restartRecaptcha();\r\n\t                        $scope.customCloseCallback = $scope.displayCallback;\r\n\t                    }\r\n\t                    $scope.processAccountResponse = function (data) {\r\n\t                        if (!alertService.isAllOk(data)) {\r\n\t                            $scope.accountError(data.descriptionEsp);\r\n\t                        }\r\n\t                        else {\r\n\t                            alertService.sendErrorMessage(data.descriptionEsp);\r\n\t                            $scope.customCloseCallback = false;\r\n\t                        }\r\n\t                        $scope.restartRecaptcha();\r\n\t                    }\r\n\t                    $scope.restartRecaptcha = function () {\r\n\t                        vcRecaptchaService.reload($scope.widgetId);\r\n\t                    }\r\n\t\r\n\t                    $scope.accountDefaultError = function () {\r\n\t                        alertService.sendDefaultErrorMessage();\r\n\t                        vcRecaptchaService.reload($scope.widgetId);\r\n\t                        $scope.customCloseCallback = $scope.displayCallback;\r\n\t                    }\r\n\t\r\n\t                    $scope.accountError = function (customMessage) {\r\n\t                        alertService.sendErrorMessage(customMessage);\r\n\t                        $scope.restartRecaptcha();\r\n\t                        $scope.customCloseCallback = $scope.displayCallback;\r\n\t                    };\r\n\t\r\n\t                    $scope.setWidgetId = function (widgetId) {\r\n\t                        $scope.widgetId = widgetId;\r\n\t                    };\r\n\t                }]\r\n\t        }\r\n\t    });\n\n/***/ },\n/* 7 */\n/***/ function(module, exports) {\n\n\t/**\r\n\t * Created by hasiermetal on 22/06/15.\r\n\t */\r\n\taporlaofertaApp\r\n\t    .directive('ngAccountUpdate', function () {\r\n\t        return {\r\n\t            restrict: 'A',\r\n\t            templateUrl: 'resources/js/account/account-signup/createAccount.jsp',\r\n\t            scope: {\r\n\t                overheadDisplay: '=',\r\n\t                customCloseCallback: '=',\r\n\t                displayCallback: '='\r\n\t            },\r\n\t            controller: ['$scope', 'vcRecaptchaService', 'alertService', '$http', 'requestManager', 'configService', '$rootScope',\r\n\t                function ($scope, vcRecaptchaService, alertService, http, requestManager, configService, $rootScope) {\r\n\t                    $scope.disableNickname = true;\r\n\t                    $scope.theUser = {};\r\n\t                    $scope.widgetId = null;\r\n\t                    $scope.passwordUpdateRequired = false;\r\n\t                    $scope.validMail = /^[_a-z0-9-]+(\\.[_a-z0-9-]+)*(\\+[a-z0-9-]+)?@[a-z]+\\.[a-z.]{2,5}$/;\r\n\t                    $scope.validPassword = /^(?=.*?)(?=.*?[a-z])(?=.*?[0-9])(?=.*?).{8,}$/;\r\n\t                    $scope.publicKey = \"6LdqHQoTAAAAAAht2VhkrLGU26eBOjL-nK9zXxcn\";\r\n\t                    $scope.createAccount = function (theUser) {\r\n\t                        if (vcRecaptchaService.getResponse($scope.widgetId) === \"\") {\r\n\t                            $scope.displayErrorMessageAndDisplayAccount();\r\n\t                        }\r\n\t                        else {\r\n\t                            $scope.processing = true;\r\n\t                            requestManager.makePostCall(theUser, {recaptcha: vcRecaptchaService.getResponse($scope.widgetId)}, configService.getEndpoint('update.account'))\r\n\t                                .success(function (data, status, headers, config) {\r\n\t                                    if ($scope.processAccountResponse(data)) {\r\n\t                                        $rootScope.$broadcast('userAvatar', angular.copy(theUser));\r\n\t                                    }\r\n\t                                }).error(function (data, status, headers, config) {\r\n\t                                    $scope.accountDefaultError();\r\n\t                                })\r\n\t                                .finally(function () {\r\n\t                                    $scope.processing = false;\r\n\t                                    $scope.getUserDetails();\r\n\t                                    $scope.passwordUpdateRequired = false;\r\n\t                                });\r\n\t                            //$scope.theUser = {};\r\n\t                            //$scope.overheadDisplay = false;\r\n\t                        }\r\n\t                    }\r\n\t\r\n\t                    $scope.processLogin = function(){\r\n\t                        $rootScope.$broadcast('userLoginRequest');\r\n\t                    }\r\n\t\r\n\t                    $scope.getUserDetails = function () {\r\n\t                        requestManager.makePostCall({}, {}, configService.getEndpoint('get.account.details'))\r\n\t                            .success(function (data, status, headers, config) {\r\n\t                                $scope.theUser = data;\r\n\t                            }).error(function (data, status, headers, config) {\r\n\t                                alertService.sendErrorMessage(\"No se ha podido obtener la información del usuario\");\r\n\t                                $scope.customCloseCallback = false;\r\n\t                            });\r\n\t                    }\r\n\t                    $scope.getUserDetails();\r\n\t\r\n\t                    $scope.resetPassword=function(){\r\n\t                        $scope.theUser.oldPassword=null;\r\n\t                        $scope.theUser.userPassword=null;\r\n\t                        $scope.userPassword2=null;\r\n\t                    }\r\n\t\r\n\t                    $scope.displayErrorMessageAndDisplayAccount = function () {\r\n\t                        alertService.sendErrorMessage(\"Por favor, haga click en el captcha para demostrar que no es un robot\");\r\n\t                        $scope.restartRecaptcha();\r\n\t                        $scope.customCloseCallback = $scope.displayCallback;\r\n\t                    }\r\n\t                    $scope.processAccountResponse = function (data) {\r\n\t                        if (!alertService.isAllOk(data)) {\r\n\t                            $scope.accountError(data.descriptionEsp);\r\n\t                        }\r\n\t                        else {\r\n\t                            alertService.sendErrorMessage(data.descriptionEsp);\r\n\t                            return true;\r\n\t                        }\r\n\t                        $scope.restartRecaptcha();\r\n\t                        return false;\r\n\t                    }\r\n\t\r\n\t                    $scope.accountDefaultError = function () {\r\n\t                        alertService.sendDefaultErrorMessage();\r\n\t                        $scope.restartRecaptcha();\r\n\t                        $scope.customCloseCallback = $scope.displayCallback;\r\n\t                    }\r\n\t\r\n\t                    $scope.accountError = function (customMessage) {\r\n\t                        alertService.sendErrorMessage(customMessage);\r\n\t                        $scope.restartRecaptcha();\r\n\t                        $scope.customCloseCallback = $scope.displayCallback;\r\n\t                    }\r\n\t                    $scope.setWidgetId = function (widgetId) {\r\n\t                        $scope.widgetId = widgetId;\r\n\t                    };\r\n\t                    $scope.restartRecaptcha = function () {\r\n\t                        vcRecaptchaService.reload($scope.widgetId);\r\n\t                    }\r\n\t                }]\r\n\t        }\r\n\t    });\n\n/***/ },\n/* 8 */\n/***/ function(module, exports) {\n\n\tangular.module('pwCheckModule', [])\r\n\t    .directive('pwCheck', [function () {\r\n\t        return {\r\n\t            require: 'ngModel',\r\n\t            link: function (scope, elem, attrs, ctrl) {\r\n\t                var firstPassword = '#' + attrs.pwCheck;\r\n\t                elem.add(firstPassword).on('keyup', function () {\r\n\t                    scope.$apply(function () {\r\n\t                        var v = elem.val()===$(firstPassword).val();\r\n\t                        ctrl.$setValidity('pwmatch', v);\r\n\t                    });\r\n\t                });\r\n\t            }\r\n\t        }\r\n\t    }]);\n\n/***/ },\n/* 9 */\n/***/ function(module, exports) {\n\n\t/**\r\n\t * Created by hasiermetal on 16/03/14.\r\n\t */\r\n\taporlaofertaApp\r\n\t    .directive('ngAccountLogin', function () {\r\n\t        return {\r\n\t            restrict: 'A',\r\n\t            templateUrl: 'view/login.jsp',\r\n\t            controller: ['$scope', 'requestManager', 'configService', 'alertService',\r\n\t                function ($scope, requestManager, configService, alertService) {\r\n\t                    $scope.validMail = /^[_a-z0-9-]+(\\.[_a-z0-9-]+)*(\\+[a-z0-9-]+)?@[a-z]+\\.[a-z.]{2,5}$/;\r\n\t                    $scope.processLogin=function(){\r\n\t                        $scope.processing=true;\r\n\t                        angular.element('#loginForm').trigger('submit');\r\n\t                    }\r\n\t\r\n\t                    $scope.requestPassword = function (userEmail) {\r\n\t                        $scope.processing = true;\r\n\t\r\n\t                        requestManager.makePostCall(userEmail, {userEmail: userEmail}, configService.getEndpoint('password.forgotten.request'))\r\n\t                            .success(function (data, status, headers, config) {\r\n\t                                $scope.processAccountResponse(data);\r\n\t                            }).error(function (data, status, headers, config) {\r\n\t                                $scope.accountDefaultError();\r\n\t                            }).finally(function () {\r\n\t                                $scope.processing = false;\r\n\t                            });\r\n\t                    }\r\n\t\r\n\t                    $scope.processAccountResponse = function (data) {\r\n\t                        alertService.sendErrorMessage(data.descriptionEsp);\r\n\t                        if ($scope.restartRecaptcha) {\r\n\t                            $scope.restartRecaptcha();\r\n\t                        }\r\n\t                    }\r\n\t\r\n\t                    $scope.accountDefaultError = function () {\r\n\t                        alertService.sendDefaultErrorMessage();\r\n\t                    }\r\n\t\r\n\t                }]\r\n\t        }\r\n\t    });\n\n/***/ },\n/* 10 */\n/***/ function(module, exports) {\n\n\t/**\r\n\t * Created by hasiermetal on 16/03/14.\r\n\t */\r\n\taporlaofertaApp\r\n\t    .directive('ngAccountLogout', function () {\r\n\t        return {\r\n\t            restrict: 'A',\r\n\t            templateUrl: 'resources/js/account/account-logout/profile.jsp',\r\n\t            scope: {\r\n\t                accountUpdate: '='\r\n\t            },\r\n\t            controller: ['$scope', 'alertService', 'requestManager', 'configService', function ($scope, alertService, requestManager, configService) {\r\n\t                $scope.profileOptions = [\r\n\t                    {text: 'Actualizar perfil', value: 'accountUpdate'},\r\n\t                    {text: 'Cerrar sesión', value: 'formSubmit'}\r\n\t                ];\r\n\t                $scope.defaultProfileModel = {\r\n\t                    text: \"Opciones\"\r\n\t                };\r\n\t                $scope.profileModel = angular.copy($scope.defaultProfileModel);\r\n\t\r\n\t                $scope.$watch('profileModel', function () {\r\n\t                    if ($scope.profileModel.text !== \"Opciones\") {\r\n\t                        $scope[$scope.profileModel.value]();\r\n\t                        $scope.profileModel = angular.copy($scope.defaultProfileModel);\r\n\t                    }\r\n\t                });\r\n\t\r\n\t                $scope.getUserDetails = function () {\r\n\t                    requestManager.makePostCall({}, {}, configService.getEndpoint('get.account.details'))\r\n\t                        .success(function (data, status, headers, config) {\r\n\t                            $scope.userAvatar = data.userAvatar;\r\n\t                        }).error(function (data, status, headers, config) {\r\n\t                            alertService.sendErrorMessage(\"No se ha podido obtener la información del usuario\");\r\n\t                            $scope.customCloseCallback = false;\r\n\t                        });\r\n\t                }\r\n\t\r\n\t\r\n\t                $scope.getUserDetails();\r\n\t\r\n\t                $scope.formSubmit = function () {\r\n\t                    $scope.logoutForm.submit();\r\n\t                }\r\n\t\r\n\t                $scope.$on('userAvatar', function (event, args) {\r\n\t                    $scope.userAvatar = args.userAvatar;\r\n\t                });\r\n\t\r\n\t                $scope.formSubmit = function () {\r\n\t                    document.getElementById(\"logoutForm\").submit();\r\n\t                }\r\n\t            }]\r\n\t        }\r\n\t    });\r\n\n\n/***/ },\n/* 11 */\n/***/ function(module, exports) {\n\n\t/**\r\n\t * Created by hasiermetal on 16/03/14.\r\n\t */\r\n\taporlaofertaApp\r\n\t    .directive('ngOfferList', function () {\r\n\t        return {\r\n\t            restrict: 'A',\r\n\t            templateUrl: 'resources/js/offer/offer-list/offerList.html',\r\n\t            scope: {\r\n\t                defaultList: '='\r\n\t            },\r\n\t            controller: ['$scope', 'offerManager',\r\n\t                function ($scope, offerManager) {\r\n\t                    $scope.offerList = [];\r\n\t                    $scope.moreOffersLoading = true;\r\n\t                    $scope.lastOffer = 0;\r\n\t\r\n\t                    $scope.showMoreOffers = function (lastOffer) {\r\n\t                        $scope.moreOffersLoading = true;\r\n\t                        $scope.offerFilter.hot = $scope.defaultList === 'hottestOffers';\r\n\t                        if (!$scope.isCategorySelected()) {\r\n\t                            $scope.offerFilter.selectedcategory = \"\";\r\n\t                        }\r\n\t                        offerManager.requestMoreOffers($scope.offerFilter, lastOffer,\r\n\t                            function (data) {\r\n\t                                $scope.offerList = $scope.offerList.concat(data);\r\n\t                                $scope.moreOffersLoading = false;\r\n\t                            }, function () {\r\n\t                                $scope.moreOffersLoading = false;\r\n\t                            });\r\n\t                    }\r\n\t\r\n\t                    $scope.updateIndex = function (index) {\r\n\t                        $scope.lastOffer = index;\r\n\t                    }\r\n\t\r\n\t                    $scope.$on('offerList', function (event, args) {\r\n\t                        $scope.moreOffersLoading = false;\r\n\t                        $scope.offerList = args;\r\n\t                    });\r\n\t\r\n\t                    $scope.showSpecifications = function (id) {\r\n\t                        offerManager.showSpecifications(id);\r\n\t                    }\r\n\t\r\n\t                    $scope.initialiseScrollyButtons = function () {\r\n\t                        $('.scrolly')\r\n\t                            .scrolly({\r\n\t                                speed: 1500\r\n\t                            });\r\n\t                    }\r\n\t\r\n\t                    $scope.parsePrice = function (price) {\r\n\t                        if (price || price==0) {\r\n\t                            return price.toString().replace(/\\./, ',');\r\n\t                        }\r\n\t                    }\r\n\t\r\n\t                    $scope.isCategorySelected = function () {\r\n\t                        return !$scope.isEmptyCategory($scope.offerFilter.selectedcategory);\r\n\t                    };\r\n\t\r\n\t                    $scope.isEmptyCategory = function (category) {\r\n\t                        return [\"\", null, undefined, \"Categoría\", \"Todas\", \"CATEGORÍA\", \"TODAS\"].indexOf(category) > -1;\r\n\t                    }\r\n\t\r\n\t                    $scope.offerFeedbackStyle = function (offer) {\r\n\t                        var offerFeedback = offer.offerPositiveVote - offer.offerNegativeVote;\r\n\t                        if (offerFeedback > 0 && offerFeedback <= 100) {\r\n\t                            return 'hotFeedback';\r\n\t                        }\r\n\t                        else if (offerFeedback > 100) {\r\n\t                            return 'veryHotFeedback';\r\n\t                        }\r\n\t                        else if (offerFeedback < 0) {\r\n\t                            return 'coldFeedback';\r\n\t                        }\r\n\t                        return 'neutralFeedback';\r\n\t                    }\r\n\t\r\n\t                    $scope.$on('appliedOfferFilters', function () {\r\n\t                        $scope.moreOffersLoading = true;\r\n\t                    });\r\n\t\r\n\t                    $scope.$watch('offerList', function () {\r\n\t                        $scope.moreOffersLoading = false;\r\n\t                    });\r\n\t\r\n\t                    $scope.initialiseScrollyButtons();\r\n\t                }]\r\n\t        }\r\n\t    });\n\n/***/ },\n/* 12 */\n/***/ function(module, exports) {\n\n\t/**\r\n\t * Created by hasiermetal on 16/03/14.\r\n\t */\r\n\taporlaofertaApp\r\n\t    .directive('ngPromotionList', function () {\r\n\t        return {\r\n\t            restrict: 'A',\r\n\t            templateUrl: 'resources/js/offer/offer-list/promotionList.html',\r\n\t            controller: ['$scope', '$rootScope', 'offerManager',\r\n\t                function ($scope, $rootScope, offerManager) {\r\n\t                    $scope.defaultList = \"\";\r\n\t                    $scope.appliedOfferFilters = {};\r\n\t\r\n\t                    $scope.$on('appliedOfferFilters', function (event, args) {\r\n\t                        $scope.appliedOfferFilters = args;\r\n\t                    });\r\n\t\r\n\t                    $scope.requestNewestOffers = function () {\r\n\t                        offerManager.requestNewestOffers($scope.appliedOfferFilters);\r\n\t                        $scope.defaultList = 'newestOffers';\r\n\t                    }\r\n\t\r\n\t                    $scope.requestHottestOffers = function () {\r\n\t                        offerManager.requestHottestOffers($scope.appliedOfferFilters);\r\n\t                        $scope.defaultList = 'hottestOffers';\r\n\t                    }\r\n\t\r\n\t                    $scope.displayTutorialModal = function () {\r\n\t                        $rootScope.$broadcast('displayTutorial');\r\n\t                    }\r\n\t                }]\r\n\t        }\r\n\t    });\n\n/***/ },\n/* 13 */\n/***/ function(module, exports) {\n\n\t/**\r\n\t * Created by hasiermetal on 11/06/15.\r\n\t */\r\n\taporlaofertaApp\r\n\t    .directive('ngOfferSpecifications', function () {\r\n\t        return {\r\n\t            restrict: 'A',\r\n\t            templateUrl: 'resources/js/offer/offer-specifications/offerSpecifications.jsp',\r\n\t            scope: {\r\n\t                theOffer: '=',\r\n\t                customCloseCallback: '='\r\n\t            },\r\n\t            controller: ['offerManager', 'alertService', '$scope', '$rootScope', 'requestManager', 'configService',\r\n\t                function (offerManager, alertService, $scope, $rootScope, requestManager, configService) {\r\n\t                    $scope.sharePrefix = \"www.aporlaoferta.com/?sh=\";\r\n\t                    $scope.sharePrice = \"€: \";\r\n\t                    $scope.commentsCustomCloseCallback = {};\r\n\t                    $scope.appliedOfferFilters = {};\r\n\t\r\n\t                    $scope.votePositive = function (id) {\r\n\t                        requestManager.makePostCall({}, {'offerId': id}, configService.getEndpoint('positive.feedback'))\r\n\t                            .success(function (data) {\r\n\t                                $scope.sendMessageAndShowSpecifications(data, id, 'offerPositiveVote');\r\n\t                            }).error(function () {\r\n\t                            $scope.sendDefaultErrorMessageAndShowSpecifications(id);\r\n\t                        });\r\n\t                    }\r\n\t                    $scope.voteNegative = function (id) {\r\n\t                        requestManager.makePostCall({}, {'offerId': id}, configService.getEndpoint('negative.feedback'))\r\n\t                            .success(function (data) {\r\n\t                                $scope.sendMessageAndShowSpecifications(data, id, 'offerNegativeVote');\r\n\t                            }).error(function () {\r\n\t                            $scope.sendDefaultErrorMessageAndShowSpecifications(id);\r\n\t                        });\r\n\t                    }\r\n\t                    $scope.sendMessageAndShowSpecifications = function (data, id, feedback) {\r\n\t                        if (!alertService.isAllOk(data)) {\r\n\t                            alertService.sendErrorMessage(data.descriptionEsp);\r\n\t                            $scope.customCloseCallback = function () {\r\n\t                                offerManager.showSpecifications(id);\r\n\t                            }\r\n\t                        }\r\n\t                        else {\r\n\t                            $scope.theOffer[0][feedback] = $scope.theOffer[0][feedback] + 1;\r\n\t                        }\r\n\t                    }\r\n\t                    $scope.sendDefaultErrorMessageAndShowSpecifications = function (id) {\r\n\t                        alertService.sendDefaultErrorMessage();\r\n\t                        $scope.customCloseCallback = function () {\r\n\t                            offerManager.showSpecifications(id);\r\n\t                        }\r\n\t                    }\r\n\t                    $scope.updateOffer = function (theOffer) {\r\n\t                        $rootScope.$broadcast('updateTheOffer', angular.copy(theOffer));\r\n\t                    }\r\n\t                    $scope.expireOffer = function (theOffer) {\r\n\t                        requestManager.makePostCall({}, {'id': theOffer.id}, configService.getEndpoint('expire.offer'))\r\n\t                            .success(function (data) {\r\n\t                                if (!alertService.isAllOk(data)) {\r\n\t                                    alertService.sendErrorMessage(data.descriptionEsp);\r\n\t                                }\r\n\t                                else {\r\n\t                                    alertService.sendErrorMessage(data.descriptionEsp);\r\n\t                                    $scope.customCloseCallback = function () {\r\n\t                                        offerManager.requestNewestOffers($scope.appliedOfferFilters);\r\n\t                                    }\r\n\t                                }\r\n\t                            }).error(function () {\r\n\t                            alertService.sendDefaultErrorMessage();\r\n\t                        });\r\n\t                    }\r\n\t\r\n\t                    $scope.banUser = function (nickname) {\r\n\t                        requestManager.makePostCall({}, {'nickname': nickname}, configService.getEndpoint('ban.user'))\r\n\t                            .success(function (data) {\r\n\t                                alertService.sendErrorMessage(data.descriptionEsp);\r\n\t                            }).error(function () {\r\n\t                            alertService.sendDefaultErrorMessage();\r\n\t                        });\r\n\t                    }\r\n\t\r\n\t                    $scope.removeOffer = function (id) {\r\n\t                        requestManager.makePostCall({}, {'id': id}, configService.getEndpoint('remove.offer'))\r\n\t                            .success(function (data) {\r\n\t                                alertService.sendErrorMessage(data.descriptionEsp);\r\n\t                                $scope.customCloseCallback = function () {\r\n\t                                    offerManager.requestNewestOffers($scope.appliedOfferFilters);\r\n\t                                }\r\n\t                            }).error(function () {\r\n\t                            alertService.sendDefaultErrorMessage();\r\n\t                        });\r\n\t                    }\r\n\t\r\n\t                    $scope.parsePrice = function (price) {\r\n\t                        if (price || price==0) {\r\n\t                            return price.toString().replace(/\\./, ',');\r\n\t                        }\r\n\t                    }\r\n\t\r\n\t                    $scope.offerFeedbackStyle = function (offer) {\r\n\t                        var offerFeedback = offer.offerPositiveVote - offer.offerNegativeVote;\r\n\t                        if (offerFeedback > 0 && offerFeedback <= 100) {\r\n\t                            return 'hotFeedback';\r\n\t                        }\r\n\t                        else if (offerFeedback > 100) {\r\n\t                            return 'veryHotFeedback';\r\n\t                        }\r\n\t                        else if (offerFeedback < 0) {\r\n\t                            return 'coldFeedback';\r\n\t                        }\r\n\t                        return 'neutralFeedback';\r\n\t                    }\r\n\t\r\n\t                    $scope.processLogin = function(){\r\n\t                        $rootScope.$broadcast('userLoginRequest');\r\n\t                    }\r\n\t\r\n\t                    $scope.processRegister = function(){\r\n\t                        $rootScope.$broadcast('userRegisterRequest');\r\n\t                    }\r\n\t\r\n\t                    $scope.$on('commentsCustomCloseCallback', function (event, args) {\r\n\t                        var customCallback = args;\r\n\t                        $scope.customCloseCallback = customCallback;\r\n\t                    });\r\n\t\r\n\t                    $scope.$on('appliedOfferFilters', function (event, args) {\r\n\t                        $scope.appliedOfferFilters = args;\r\n\t                    });\r\n\t                }]\r\n\t        }\r\n\t    });\n\n/***/ },\n/* 14 */\n/***/ function(module, exports) {\n\n\t/**\r\n\t * Created by hasiermetal on 08/08/16.\r\n\t */\r\n\taporlaofertaApp\r\n\t    .directive('ngQuickTutorial', function () {\r\n\t        return {\r\n\t            restrict: 'A',\r\n\t            scope: {\r\n\t                isDisplayed: '=',\r\n\t            },\r\n\t            templateUrl: 'resources/js/header-display/tutorial/quickTutorial.jsp',\r\n\t            controller: ['$scope', '$element', '$timeout',\r\n\t                function ($scope, $element, $timeout) {\r\n\t                    $scope.shareUrl = \"www.aporlaoferta.com\";\r\n\t                    $scope.shareText = $(\"meta[property='og:description']\").attr(\"content\");\r\n\t\r\n\t                    $scope.$watch('isDisplayed', function () {\r\n\t                        if ($scope.isDisplayed) {\r\n\t                            $scope.refreshTutorial();\r\n\t                            $timeout(function () {\r\n\t                                $scope.refreshTutorial();\r\n\t                            }, 300);\r\n\t                        }\r\n\t                    });\r\n\t\r\n\t                    $scope.refreshTutorial = function () {\r\n\t                        $element.resize();\r\n\t                        $element.find('.slick-dots li:first a').trigger('click');\r\n\t                        $scope.isDisplayed = 0;\r\n\t                    }\r\n\t\r\n\t\r\n\t                }]\r\n\t        }\r\n\t    });\n\n/***/ },\n/* 15 */\n/***/ function(module, exports) {\n\n\t/**\r\n\t * Created by hasiermetal on 14/08/16.\r\n\t */\r\n\taporlaofertaApp\r\n\t    .directive('ngFooter', function () {\r\n\t        return {\r\n\t            restrict: 'A',\r\n\t            templateUrl: 'resources/js/footer/footer.jsp',\r\n\t            controller: ['$scope', '$rootScope',\r\n\t                function ($scope, $rootScope) {\r\n\t                    $scope.displayTutorialModal = function () {\r\n\t                        $rootScope.$broadcast('displayTutorial');\r\n\t                    }\r\n\t                }]\r\n\t        }\r\n\t    });\n\n/***/ },\n/* 16 */\n/***/ function(module, exports) {\n\n\t/**\r\n\t * Created by hasiermetal on 11/06/15.\r\n\t */\r\n\taporlaofertaApp\r\n\t    .directive('ngOfferComments', function () {\r\n\t        return {\r\n\t            restrict: 'A',\r\n\t            templateUrl: 'resources/js/offer/offer-specifications/offer-comments/' +\r\n\t            'offerComments.jsp',\r\n\t            scope: {\r\n\t                theComments: '=',\r\n\t                theOffer: '=',\r\n\t                commentsCustomCloseCallback: '='\r\n\t            },\r\n\t            controller: ['$filter', 'alertService', '$scope', '$rootScope', 'requestManager', 'configService', 'offerManager',\r\n\t                function ($filter, alertService, $scope, $rootScope, requestManager, configService, offerManager) {\r\n\t                    $scope.quoteActionEnable = -1;\r\n\t                    $scope.qComment = {};\r\n\t                    $scope.comment = {};\r\n\t                    $scope.getQuotedComment = function (id, comments) {\r\n\t                        return $filter('filter')(comments, {id: id})[0];\r\n\t                    }\r\n\t\r\n\t                    $scope.quoteAction = function (id) {\r\n\t                        if ($scope.quoteActionEnable == id) {\r\n\t                            $scope.quoteActionEnable = -1;\r\n\t                        }\r\n\t                        else {\r\n\t                            $scope.quoteActionEnable = id;\r\n\t                        }\r\n\t                    }\r\n\t\r\n\t                    $scope.isQuoteActionEnabled = function (id) {\r\n\t                        return $scope.quoteActionEnable == id;\r\n\t                    }\r\n\t\r\n\t                    $scope.writeComment = function (comment, id) {\r\n\t                        $scope.processing = true;\r\n\t                        requestManager.makePostCall(comment, {'offer': id}, configService.getEndpoint('create.comment'))\r\n\t                            .success(function (data, status, headers, config) {\r\n\t                                $scope.sendMessageAndShowSpecifications(data.descriptionEsp);\r\n\t                            }).error(function (data, status, headers, config) {\r\n\t                            $scope.sendDefaultErrorMessageAndShowSpecifications();\r\n\t                        }).finally(function () {\r\n\t                            $scope.processing = false;\r\n\t                        });\r\n\t                    };\r\n\t\r\n\t                    $scope.quoteComment = function (comment, id) {\r\n\t                        $scope.processing = true;\r\n\t                        requestManager.makePostCall(comment, {'quotedComment': id}, configService.getEndpoint('quote.comment'))\r\n\t                            .success(function (data, status, headers, config) {\r\n\t                                $scope.sendMessageAndShowSpecifications(data.descriptionEsp);\r\n\t                            }).error(function (data, status, headers, config) {\r\n\t                            $scope.sendDefaultErrorMessageAndShowSpecifications();\r\n\t                        }).finally(function () {\r\n\t                            $scope.processing = false;\r\n\t                        });\r\n\t                    }\r\n\t\r\n\t                    $scope.sendMessageAndShowSpecifications = function (message) {\r\n\t                        //alertService.sendErrorMessage(message);\r\n\t                        //$scope.updateViewAndCloseCallback();\r\n\t                        $scope.restartCommentTexts();\r\n\t                        offerManager.showSpecifications($scope.theOffer);\r\n\t                    }\r\n\t\r\n\t                    $scope.sendDefaultErrorMessageAndShowSpecifications = function () {\r\n\t                        alertService.sendDefaultErrorMessage();\r\n\t                        $scope.updateViewAndCloseCallback();\r\n\t                    }\r\n\t\r\n\t                    $scope.updateViewAndCloseCallback = function () {\r\n\t                        $scope.commentsCustomCloseCallback = function () {\r\n\t                            offerManager.showSpecifications($scope.theOffer);\r\n\t                        }\r\n\t                        $rootScope.$broadcast('commentsCustomCloseCallback', $scope.commentsCustomCloseCallback);\r\n\t                        $scope.restartCommentTexts();\r\n\t                    }\r\n\t\r\n\t                    $scope.restartCommentTexts = function () {\r\n\t                        $scope.comment.commentText = \"\";\r\n\t                        $scope.qComment.commentText = \"\";\r\n\t                    }\r\n\t\r\n\t                    $scope.processLogin = function(){\r\n\t                        $rootScope.$broadcast('userLoginRequest');\r\n\t                    }\r\n\t\r\n\t                    $scope.processRegister = function(){\r\n\t                        $rootScope.$broadcast('userRegisterRequest');\r\n\t                    }\r\n\t\r\n\t                    $scope.deleteComment = function (id) {\r\n\t                        requestManager.makePostCall({}, {'comment': id}, configService.getEndpoint('delete.comment'))\r\n\t                            .success(function (data) {\r\n\t                                $scope.sendMessageAndShowSpecifications(data.descriptionEsp);\r\n\t                            }).error(function () {\r\n\t                            $scope.sendDefaultErrorMessageAndShowSpecifications();\r\n\t                        });\r\n\t                    }\r\n\t\r\n\t                    $scope.banUser = function (nickname) {\r\n\t                        requestManager.makePostCall({}, {'nickname': nickname}, configService.getEndpoint('ban.user'))\r\n\t                            .success(function (data) {\r\n\t                                alertService.sendErrorMessage(data.descriptionEsp);\r\n\t                            }).error(function () {\r\n\t                            alertService.sendErrorMessage(data.descriptionEsp);\r\n\t                        });\r\n\t                    }\r\n\t                }\r\n\t            ]\r\n\t        }\r\n\t    })\r\n\t;\n\n/***/ },\n/* 17 */\n/***/ function(module, exports) {\n\n\t/**\r\n\t * Created by hasiermetal on 26/06/15.\r\n\t */\r\n\taporlaofertaApp\r\n\t    .directive('ngOfferCommentsQuotes', function () {\r\n\t        return {\r\n\t            restrict: 'A',\r\n\t            templateUrl: 'resources/js/offer/offer-specifications/offer-comments/' +\r\n\t                'commentsQuotes.jsp',\r\n\t            scope: {\r\n\t                theComments: '=',\r\n\t                quotedComment: '='\r\n\t            },\r\n\t            controller: ['$rootScope', '$scope', 'requestManager', 'configService', function ($rootScope, $scope, requestManager, configService) {\r\n\t                $scope.quoteActionEnable = -1;\r\n\t                $scope.quoteAction = function (id) {\r\n\t                    if ($scope.quoteActionEnable == id) {\r\n\t                        $scope.quoteActionEnable = -1;\r\n\t                    }\r\n\t                    else {\r\n\t                        $scope.quoteActionEnable = id;\r\n\t                    }\r\n\t                }\r\n\t                $scope.isQuoteActionEnabled = function (id) {\r\n\t                    return $scope.quoteActionEnable == id;\r\n\t                }\r\n\t                $scope.quoteComment = function (comment, id) {\r\n\t                    requestManager.makePostCall(comment, {'quotedComment': id}, configService.getEndpoint('quote.comment'))\r\n\t                        .success(function (data, status, headers, config) {\r\n\t                            $rootScope.$broadcast('serverResponse', data);\r\n\t                            $scope.qComment.commentText=\"\";\r\n\t                        }).error(function (data, status, headers, config) {\r\n\t                            var theResponse = {};\r\n\t                            theResponse.description = data;\r\n\t                            theResponse.responseResult = \"error\";\r\n\t                            $rootScope.$broadcast('serverResponse', theResponse);\r\n\t                        });\r\n\t                };\r\n\t\r\n\t            }]\r\n\t        }\r\n\t    });\n\n/***/ },\n/* 18 */\n/***/ function(module, exports) {\n\n\t/**\r\n\t * Created by hasiermetal on 16/03/14.\r\n\t */\r\n\taporlaofertaApp\r\n\t    .directive('ngOfferCreation', function () {\r\n\t        return {\r\n\t            restrict: 'A',\r\n\t            templateUrl: 'resources/js/offer/offer-creation/offerCreation.html',\r\n\t            scope: {\r\n\t                overheadDisplay: '=',\r\n\t                customCloseCallback: '=',\r\n\t                displayCallback: '='\r\n\t            },\r\n\t            controller: ['$scope', '$rootScope', 'offerManager', 'requestManager', 'configService', 'alertService', 'vcRecaptchaService',\r\n\t                function ($scope, $rootScope, offerManager, requestManager, configService, alertService, vcRecaptchaService) {\r\n\t                    $scope.offer = {};\r\n\t                    $scope.widgetId = null;\r\n\t                    $scope.publicKey = \"6LdqHQoTAAAAAAht2VhkrLGU26eBOjL-nK9zXxcn\";\r\n\t                    $scope.resetCategory = true;\r\n\t                    $scope.appliedOfferFilters = {};\r\n\t\r\n\t                    $scope.createOffer = function () {\r\n\t                        if (vcRecaptchaService.getResponse($scope.widgetId) === \"\") {\r\n\t                            $scope.offerCreationError(\"Por favor, haga click en el captcha para demostrar que no es un robot\");\r\n\t                            vcRecaptchaService.reload($scope.widgetId);\r\n\t                        }\r\n\t                        else {\r\n\t                            $scope.processing = true;\r\n\t                            requestManager.makePostCall($scope.parseOffer(), {recaptcha: vcRecaptchaService.getResponse($scope.widgetId)}, configService.getEndpoint('create.offer'))\r\n\t                                .success(function (data, status, headers, config) {\r\n\t                                    if (!alertService.isAllOk(data)) {\r\n\t                                        $scope.offerCreationError(data.descriptionEsp);\r\n\t                                    }\r\n\t                                    else {\r\n\t                                        alertService.sendErrorMessage(data.descriptionEsp);\r\n\t                                        $scope.resetValues();\r\n\t                                        $scope.customCloseCallback = function () {\r\n\t                                            offerManager.requestNewestOffers($scope.appliedOfferFilters);\r\n\t                                        }\r\n\t                                    }\r\n\t                                }).error(function (data, status, headers, config) {\r\n\t                                    $scope.offerCreationError(alertService.getDefaultMessage());\r\n\t                                }).finally(function () {\r\n\t                                    $scope.processing = false;\r\n\t                                });\r\n\t                            //$scope.overheadDisplay = false;\r\n\t                        }\r\n\t                    };\r\n\t\r\n\t                    $scope.$on('appliedOfferFilters', function (event, args) {\r\n\t                        $scope.appliedOfferFilters = args;\r\n\t                    });\r\n\t\r\n\t                    $scope.parseOffer = function () {\r\n\t                        var theOffer = angular.copy($scope.offer);\r\n\t                        try {\r\n\t                            theOffer.originalPrice = parseFloat(theOffer.originalPrice.replace(/,/, '.'));\r\n\t                        } catch (e) {/*float already*/\r\n\t                        }\r\n\t                        try {\r\n\t                            theOffer.finalPrice = parseFloat(theOffer.finalPrice.replace(/,/, '.'));\r\n\t                        } catch (e) {/*float already*/\r\n\t                        }\r\n\t                        return theOffer;\r\n\t                    }\r\n\t\r\n\t                    $scope.restartRecaptcha = function () {\r\n\t                        vcRecaptchaService.reload($scope.widgetId);\r\n\t                    }\r\n\t\r\n\t                    $scope.offerCreationError = function (customMessage) {\r\n\t                        alertService.sendErrorMessage(customMessage);\r\n\t                        $scope.restartRecaptcha();\r\n\t                        $scope.customCloseCallback = $scope.displayCallback;\r\n\t                    }\r\n\t\r\n\t                    $scope.bigDecimalsOnly = /^\\-?\\d+((\\.|\\,)\\d+)?$/;\r\n\t                    $scope.resetValues = function () {\r\n\t                        $scope.restartRecaptcha();\r\n\t                        $scope.offer = {};\r\n\t                        $scope.brandNewCompany = false;\r\n\t                        $scope.resetCategory = true;\r\n\t                    };\r\n\t                    $scope.setWidgetId = function (widgetId) {\r\n\t                        $scope.widgetId = widgetId;\r\n\t                    };\r\n\t\r\n\t                    $scope.isCompanyDefined = function () {\r\n\t                        if ($scope.offer) {\r\n\t                            return $scope.offer.offerCompany && $scope.offer.offerCompany.companyName;\r\n\t                        }\r\n\t                    };\r\n\t\r\n\t                    $scope.isCategorySelected = function () {\r\n\t                        return !$scope.isEmptyCategory($scope.offer.offerCategory);\r\n\t                    };\r\n\t\r\n\t                    $scope.isEmptyCategory = function (category) {\r\n\t                        return [\"\", null, undefined, \"Categoría\", \"Todas\", \"CATEGORÍA\", \"TODAS\"].indexOf(category) > -1;\r\n\t                    }\r\n\t\r\n\t                    $scope.selectionPerformed = function () {\r\n\t                        return $scope.isCompanyDefined() && $scope.isCategorySelected();\r\n\t                    }\r\n\t\r\n\t                    $scope.offerCompanies = {};\r\n\t\r\n\t                    $scope.suggest_company=function(term) {\r\n\t                        var q = term.toLowerCase().trim();\r\n\t                        var results = [];\r\n\t                        for (var i = 0; i < $scope.offerCompanies.length && results.length < 10; i++) {\r\n\t                            var company = $scope.offerCompanies[i].companyName;\r\n\t                            if (company.toLowerCase().indexOf(q) === 0)\r\n\t                                results.push({ label: company, value: company });\r\n\t                        }\r\n\t                        return results;\r\n\t                    }\r\n\t\r\n\t                    $scope.autocomplete_options = {\r\n\t                        suggest: $scope.suggest_company\r\n\t                    };\r\n\t\r\n\t                    $scope.populateCompanyList = function () {\r\n\t                        requestManager.makePostCall({}, {}, configService.getEndpoint('get.companies'))\r\n\t                            .success(function (data, status, headers, config) {\r\n\t                                $scope.offerCompanies = angular.copy(data);\r\n\t                            }).error(function (data, status, headers, config) {\r\n\t                            var theResponse = {};\r\n\t                            theResponse.description = data;\r\n\t                            theResponse.responseResult = \"error\";\r\n\t                            $rootScope.$broadcast('serverResponse', theResponse);\r\n\t                        });\r\n\t                    };\r\n\t\r\n\t                    $scope.populateCompanyList();\r\n\t                }]\r\n\t        }\r\n\t    });\n\n/***/ },\n/* 19 */\n/***/ function(module, exports) {\n\n\t/**\r\n\t * Created by hasiermetal on 16/03/14.\r\n\t */\r\n\taporlaofertaApp\r\n\t    .directive('ngOfferUpdate', function () {\r\n\t        return {\r\n\t            restrict: 'A',\r\n\t            templateUrl: 'resources/js/offer/offer-creation/offerCreation.html',\r\n\t            scope: {\r\n\t                overheadDisplay: '=',\r\n\t                customCloseCallback: '=',\r\n\t                displayCallback: '=',\r\n\t                offer: \"=\"\r\n\t            },\r\n\t            controller: ['$scope', 'offerManager', 'requestManager', 'configService', 'alertService', 'vcRecaptchaService',\r\n\t                function ($scope, offerManager, requestManager, configService, alertService, vcRecaptchaService) {\r\n\t                    $scope.widgetId = null;\r\n\t                    $scope.publicKey = \"6LdqHQoTAAAAAAht2VhkrLGU26eBOjL-nK9zXxcn\";\r\n\t                    $scope.createOffer = function () {\r\n\t                        if (vcRecaptchaService.getResponse($scope.widgetId) === \"\") {\r\n\t                            $scope.offerCreationError(\"Por favor, haga click en el captcha para demostrar que no es un robot\");\r\n\t                            vcRecaptchaService.restartRecaptcha();\r\n\t                        }\r\n\t                        else {\r\n\t                            $scope.processing = true;\r\n\t                            requestManager.makePostCall($scope.parseOffer(), {recaptcha: vcRecaptchaService.getResponse($scope.widgetId)}, configService.getEndpoint('update.offer'))\r\n\t                                .success(function (data, status, headers, config) {\r\n\t                                    if (!alertService.isAllOk(data)) {\r\n\t                                        $scope.offerCreationError(data.descriptionEsp);\r\n\t                                    }\r\n\t                                    else {\r\n\t                                        alertService.sendErrorMessage(data.descriptionEsp);\r\n\t                                        $scope.resetValues();\r\n\t                                        $scope.customCloseCallback = function () {\r\n\t                                            offerManager.requestNewestOffers($scope.appliedOfferFilters);\r\n\t                                        }\r\n\t                                    }\r\n\t                                }).error(function (data, status, headers, config) {\r\n\t                                    $scope.offerCreationError(alertService.getDefaultMessage());\r\n\t                                }).finally(function () {\r\n\t                                    $scope.processing = false;\r\n\t                                });\r\n\t                            //$scope.overheadDisplay = false;\r\n\t                        }\r\n\t                    };\r\n\t\r\n\t                    $scope.parseOffer = function () {\r\n\t                        var theOffer = angular.copy($scope.offer);\r\n\t                        try {\r\n\t                            theOffer.originalPrice = parseFloat(theOffer.originalPrice.replace(/,/, '.'));\r\n\t                        } catch (e) {/*float already*/\r\n\t                        }\r\n\t                        try {\r\n\t                            theOffer.finalPrice = parseFloat(theOffer.finalPrice.replace(/,/, '.'));\r\n\t                        } catch (e) {/*float already*/\r\n\t                        }\r\n\t                        return theOffer;\r\n\t                    }\r\n\t\r\n\t                    $scope.restartRecaptcha = function () {\r\n\t                        vcRecaptchaService.reload($scope.widgetId);\r\n\t                    }\r\n\t\r\n\t                    $scope.offerCreationError = function (customMessage) {\r\n\t                        alertService.sendErrorMessage(customMessage);\r\n\t                        $scope.restartRecaptcha();\r\n\t                        $scope.customCloseCallback = $scope.displayCallback;\r\n\t                    }\r\n\t\r\n\t                    $scope.bigDecimalsOnly = /^\\-?\\d+((\\.|\\,)\\d+)?$/;\r\n\t                    $scope.resetValues = function () {\r\n\t                        $scope.restartRecaptcha();\r\n\t                        $scope.offer = {};\r\n\t                        $scope.brandNewCompany = false;\r\n\t                        $scope.resetCategory = true;\r\n\t                        $scope.resetCompany = true;\r\n\t                    };\r\n\t                    $scope.setWidgetId = function (widgetId) {\r\n\t                        $scope.widgetId = widgetId;\r\n\t                    };\r\n\t\r\n\t                    $scope.isCompanyDefined = function () {\r\n\t                        if ($scope.offer) {\r\n\t                            return $scope.offer.offerCompany != undefined && $scope.selectedcompany != \"\";\r\n\t                        }\r\n\t                    };\r\n\t                    $scope.isCategorySelected = function () {\r\n\t                        return $scope.offer\r\n\t                            && $scope.offer.offerCategory != \"\"\r\n\t                            && $scope.offer.offerCategory != null\r\n\t                            && $scope.offer.offerCategory != undefined\r\n\t                            && $scope.offer.offerCategory != \"Categoría\"\r\n\t                            && $scope.offer.offerCategory != \"CATEGORÍA\";\r\n\t                    };\r\n\t                    $scope.selectionPerformed = function () {\r\n\t                        return $scope.isCompanyDefined() && $scope.isCategorySelected();\r\n\t                    }\r\n\t                }]\r\n\t        }\r\n\t    });\n\n/***/ },\n/* 20 */\n/***/ function(module, exports) {\n\n\t/**\r\n\t * Created by hasiermetal on 16/03/14.\r\n\t */\r\n\taporlaofertaApp\r\n\t    .directive('ngOfferCategoryManager', function () {\r\n\t        return {\r\n\t            restrict: 'A',\r\n\t            templateUrl: 'resources/js/offer/offer-creation/offerCategoryManagement.html',\r\n\t            scope: {\r\n\t                reset: '=',\r\n\t                selectedcategory: '=',\r\n\t                includeAll: '='\r\n\t            },\r\n\t            controller: ['$rootScope', '$scope', 'requestManager', 'configService', function ($rootScope, $scope, requestManager, configService) {\r\n\t                $scope.offerCategories = {};\r\n\t                $scope.offerCategory = {\r\n\t                    text: \"CATEGORÍA\",\r\n\t                    display: \"Categoría\"\r\n\t                };\r\n\t                $scope.populateAllCategories = function () {\r\n\t                    requestManager.makePostCall({}, {}, configService.getEndpoint('get.offer.categories'))\r\n\t                        .success(function (data) {\r\n\t                            $scope.offerCategories = angular.copy(data);\r\n\t                            if ($scope.includeAll) {\r\n\t                                $scope.offerCategories.push({text: \"TODAS\", value: \"\", display: \"Todas\"})\r\n\t                            }\r\n\t                        }).error(function (data) {\r\n\t                        var theResponse = {};\r\n\t                        theResponse.description = data;\r\n\t                        theResponse.responseResult = \"error\";\r\n\t                        $rootScope.$broadcast('serverResponse', theResponse);\r\n\t                    });\r\n\t                }\r\n\t                $scope.onCategoryChange = function (category) {\r\n\t                    $scope.selectedcategory = category;\r\n\t                }\r\n\t                $scope.populateAllCategories();\r\n\t                $scope.$watch('reset', function () {\r\n\t                    if ($scope.reset) {\r\n\t                        $scope.offerCategory = {\r\n\t                            text: \"CATEGORÍA\",\r\n\t                            display: \"Categoría\"\r\n\t                        };\r\n\t                    }\r\n\t                    $scope.reset = false;\r\n\t                });\r\n\t                $scope.$watch('offerCategory', function () {\r\n\t                    $scope.selectedcategory = $scope.offerCategory.text;\r\n\t                });\r\n\t                $scope.isCategorySelected = function () {\r\n\t                    return $scope.category != \"\"\r\n\t                        && $scope.category != null\r\n\t                        && $scope.category != undefined;\r\n\t                };\r\n\t            }]\r\n\t        }\r\n\t    });\n\n/***/ },\n/* 21 */\n/***/ function(module, exports) {\n\n\t/**\r\n\t * Created by hasiermetal on 30/06/15.\r\n\t */\r\n\taporlaofertaApp\r\n\t    .directive('ngOfferFilter', function () {\r\n\t        return {\r\n\t            restrict: 'A',\r\n\t            templateUrl: 'resources/js/offer/offer-filter/offerFilter.html',\r\n\t            scope: {\r\n\t                offerList: '=',\r\n\t                selection: '=',\r\n\t                offerFilter: '='\r\n\t            },\r\n\t            controller: ['$scope', '$rootScope', 'requestManager', 'configService', function ($scope, $rootScope, requestManager, configService) {\r\n\t                $scope.filter = {};\r\n\t                $scope.displayFilterContent = \"\";\r\n\t                $scope.previousCategory = \"\";\r\n\t\r\n\t                $scope.requestFilterApply = function () {\r\n\t                    $scope.processing = true;\r\n\t                    $scope.filter.hot = $scope.selection === 'hottestOffers';\r\n\t                    if (!$scope.isCategorySelected()) {\r\n\t                        $scope.filter.selectedcategory = \"\";\r\n\t                    }\r\n\t                    $scope.offerFilter = angular.copy($scope.filter);\r\n\t                    if ($scope.offerFilter.text.length < 3) {\r\n\t                        $scope.offerFilter.text = \"\";\r\n\t                    }\r\n\t                    $rootScope.$broadcast('appliedOfferFilters', angular.copy($scope.offerFilter));\r\n\t                    requestManager.makePostCall($scope.offerFilter, {}, configService.getEndpoint('get.filtered.offers'))\r\n\t                        .success(function (data, status, headers, config) {\r\n\t                            $scope.offerList = data.theOffers;\r\n\t                        }).error(function (data, status, headers, config) {\r\n\t                        var theResponse = {};\r\n\t                        theResponse.description = data;\r\n\t                        theResponse.responseResult = \"error\";\r\n\t                        $rootScope.$broadcast('serverResponse', theResponse);\r\n\t                    }).finally(function () {\r\n\t                        $scope.processing = false;\r\n\t                    });\r\n\t                };\r\n\t\r\n\t                $scope.$watch('filter.dateRange', function () {\r\n\t                    $scope.requestFilterApply();\r\n\t                });\r\n\t\r\n\t                $scope.searchCriteriaChanged = function () {\r\n\t                    $scope.offerFilter = angular.copy($scope.filter);\r\n\t                    if ($scope.filter.text.length > 2 || $scope.filter.text.length == 0) {\r\n\t                        $scope.requestFilterApply();\r\n\t                    }\r\n\t                };\r\n\t\r\n\t                $scope.$watch('filter.selectedcategory', function () {\r\n\t                    if (!($scope.isEmptyCategory($scope.previousCategory) &&\r\n\t                        $scope.isEmptyCategory($scope.filter.selectedcategory)) &&\r\n\t                        $scope.previousCategory !== $scope.filter.selectedcategory) {\r\n\t                        $scope.previousCategory = $scope.filter.selectedcategory;\r\n\t                        $scope.requestFilterApply();\r\n\t                    }\r\n\t                });\r\n\t\r\n\t                $scope.cleanFilters = function () {\r\n\t                    $scope.filter.expired = false;\r\n\t                    $scope.filter.text = \"\";\r\n\t                    $scope.resetCategory = true;\r\n\t                    $scope.filter.selectedcategory = \"\";\r\n\t                    $scope.filter.selectedcategory = \"\";\r\n\t                    $scope.filter.dateRange = 1;\r\n\t//                    $scope.requestFilterApply();\r\n\t                    $rootScope.$broadcast('appliedOfferFilters', angular.copy($scope.offerFilter));\r\n\t                };\r\n\t\r\n\t                $scope.displayFilterContents = function () {\r\n\t                    $scope.displayFilterContent = ($scope.displayFilterContent == 'filters-displayed') ?\r\n\t                        'filters-hidden' : 'filters-displayed';\r\n\t                };\r\n\t                $scope.isCategorySelected = function () {\r\n\t                    return !$scope.isEmptyCategory($scope.filter.selectedcategory);\r\n\t                };\r\n\t\r\n\t                $scope.isEmptyCategory = function (category) {\r\n\t                    return [\"\", null, undefined, \"Categoría\", \"Todas\", \"CATEGORÍA\", \"TODAS\"].indexOf(category) > -1;\r\n\t                }\r\n\t\r\n\t                $scope.cleanFilters();\r\n\t            }]\r\n\t        }\r\n\t    });\n\n/***/ },\n/* 22 */\n/***/ function(module, exports) {\n\n\t/**\r\n\t * Created by hasiermetal on 16/03/14.\r\n\t */\r\n\taporlaofertaApp\r\n\t    .directive('ngOverheadDisplay', function () {\r\n\t        return {\r\n\t            restrict: 'A',\r\n\t            templateUrl: 'resources/js/header-display/headDisplay.jsp',\r\n\t            scope: {\r\n\t                specificOffer: '@',\r\n\t                specificOfferData: '@',\r\n\t                overheadVisible: '=',\r\n\t                noAccounts: '=',\r\n\t                fullscreen: '='\r\n\t            },\r\n\t            controller: ['$scope', '$window', 'offerManager', '$timeout', '$cookies', 'configService',\r\n\t                function ($scope, $window, $offerManager, $timeout, $cookies, configService) {\r\n\t                    $scope.customCloseCallback = {};\r\n\t                    $scope.theResponse = {};\r\n\t                    $scope.fullscreen = false;\r\n\t                    $scope.tutorialIsDisplayed = false;\r\n\t                    $scope.loadingOfferSpecifications = false;\r\n\t\r\n\t                    $scope.displayLogin = function () {\r\n\t                        $scope.setDefaultVisibility();\r\n\t                        $scope.displayAccountLogin = true;\r\n\t                        $scope.overheadVisible = true;\r\n\t                    };\r\n\t                    $scope.displaySignup = function () {\r\n\t                        $scope.setDefaultVisibility();\r\n\t                        $scope.displayAccountCreation = true;\r\n\t                        $scope.overheadVisible = true;\r\n\t                    };\r\n\t                    $scope.displayAccountUpdateForm = function () {\r\n\t                        $scope.setDefaultVisibility();\r\n\t                        $scope.displayAccountUpdate = true;\r\n\t                        $scope.overheadVisible = true;\r\n\t                    };\r\n\t                    $scope.displayOfferCreate = function () {\r\n\t                        $scope.setDefaultVisibility();\r\n\t                        $scope.displayOfferCreation = true;\r\n\t                        $scope.overheadVisible = true;\r\n\t                    };\r\n\t                    $scope.displayOfferUpdate = function () {\r\n\t                        $scope.setDefaultVisibility();\r\n\t                        $scope.displayOfferToBeUpdate = true;\r\n\t                        $scope.overheadVisible = true;\r\n\t                    };\r\n\t                    $scope.displayOfferDetails = function () {\r\n\t                        $scope.setDefaultVisibility();\r\n\t                        $scope.displayOfferSpecifications = true;\r\n\t                        $scope.overheadVisible = true;\r\n\t                    };\r\n\t                    $scope.displayOfferLoading = function () {\r\n\t                        $scope.setDefaultVisibility();\r\n\t                        $scope.loadingOfferSpecifications = true;\r\n\t                        $scope.overheadVisible = true;\r\n\t                    };\r\n\t                    $scope.displayServerResponse = function () {\r\n\t                        $scope.setDefaultVisibility();\r\n\t                        $scope.displayResponseFromServer = true;\r\n\t                        $scope.overheadVisible = true;\r\n\t                    }\r\n\t                    $scope.displayTutorialDiagram = function () {\r\n\t                        $scope.customCloseCallback = function () {\r\n\t                            $scope.setTutorialCookie();\r\n\t                        }\r\n\t                        $scope.setDefaultVisibility();\r\n\t                        $scope.displayTutorial = true;\r\n\t                        $scope.overheadVisible = true;\r\n\t                        $scope.tutorialIsDisplayed = true;\r\n\t                    }\r\n\t                    $scope.setDefaultVisibility = function () {\r\n\t                        $scope.overheadVisible = false;\r\n\t                        $scope.displayOfferCreation = false;\r\n\t                        $scope.displayOfferToBeUpdate = false;\r\n\t                        $scope.displayAccountLogin = false;\r\n\t                        $scope.displayAccountCreation = false;\r\n\t                        $scope.displayAccountUpdate = false;\r\n\t                        $scope.displayOfferSpecifications = false;\r\n\t                        $scope.displayResponseFromServer = false;\r\n\t                        $scope.displayTutorial = false;\r\n\t                        $scope.tutorialIsDisplayed = false;\r\n\t                        $scope.loadingOfferSpecifications = false;\r\n\t                    };\r\n\t                    $scope.closeOverheadDisplay = function (customCloseCallback) {\r\n\t                        $scope.setDefaultVisibility();\r\n\t                        if (typeof customCloseCallback == \"function\") {\r\n\t                            customCloseCallback();\r\n\t                            $scope.customCloseCallback = {};\r\n\t                        }\r\n\t                    };\r\n\t                    $scope.$watch('specificOffer', function () {\r\n\t                        if (/^\\d+$/.exec($scope.specificOffer) != null) {\r\n\t                            $scope.fullscreen = true;\r\n\t                            $scope.customCloseCallback = function () {\r\n\t                                $scope.fullscreen = false;\r\n\t                            };\r\n\t                            console.log($scope.specificOfferData);\r\n\t                            console.log(JSON.parse($scope.specificOfferData));\r\n\t                            $scope.openOfferSpecifications(JSON.parse($scope.specificOfferData));\r\n\t                            //$offerManager.showSpecifications($scope.specificOffer);\r\n\t                        }\r\n\t                    });\r\n\t                    $scope.$on('offerSpecifications', function (event, args) {\r\n\t                        $scope.openOfferSpecifications(args);\r\n\t                    });\r\n\t\r\n\t                    $scope.openOfferSpecifications = function(offerSpecifications){\r\n\t                        $scope.offerSpecifications = offerSpecifications;\r\n\t                        $scope.loadingOfferSpecifications = false;\r\n\t                        $scope.displayOfferDetails();\r\n\t                        $scope.customCloseCallback = function () {\r\n\t                            $scope.offerSpecifications = [];\r\n\t                            $scope.fullscreen = false;\r\n\t                        }\r\n\t                    }\r\n\t\r\n\t                    $scope.redirectHome = function () {\r\n\t                        $window.location.href = '/';\r\n\t                    };\r\n\t                    $scope.$on('loadingOfferSpecifications', function () {\r\n\t                        $scope.displayOfferLoading();\r\n\t                    });\r\n\t\r\n\t                    $scope.$on('updateTheOffer', function (event, args) {\r\n\t                        $scope.offerSpecifications = [args];\r\n\t                        $scope.customCloseCallback = function () {\r\n\t                            $scope.displayOfferDetails();\r\n\t                        }\r\n\t                        $scope.displayOfferUpdate();\r\n\t                    });\r\n\t\r\n\t                    $scope.$on('serverResponse', function (event, args) {\r\n\t                        $scope.theResponse = args;\r\n\t                        $scope.fullscreen = false;\r\n\t                        $scope.displayServerResponse();\r\n\t                    });\r\n\t\r\n\t                    $scope.$on('displayTutorial', function () {\r\n\t                        $scope.displayTutorialDiagram();\r\n\t                    });\r\n\t\r\n\t                    $scope.$on('userLoginRequest', function () {\r\n\t                        $scope.displayLogin();\r\n\t                    });\r\n\t\r\n\t                    $scope.$on('userRegisterRequest', function () {\r\n\t                        $scope.displaySignup();\r\n\t                    });\r\n\t\r\n\t                    $scope.$on('keydownControl', function (event, args) {\r\n\t                        var keyDownCode = args;\r\n\t                        if (keyDownCode == 27) {\r\n\t                            $scope.justCloseOverheadDisplay();\r\n\t                        }\r\n\t                    });\r\n\t\r\n\t                    $scope.justCloseOverheadDisplay = function () {\r\n\t                        $scope.customCloseCallback = {};\r\n\t                        $scope.closeOverheadDisplay();\r\n\t                        $scope.fullscreen = false;\r\n\t                    }\r\n\t\r\n\t                    $scope.checkForErrors = function () {\r\n\t                        if (document.getElementById(\"errorMessage\")) {\r\n\t                            var errorMessage = document.getElementById(\"errorMessage\").value;\r\n\t                            if (typeof errorMessage != undefined && errorMessage != '') {\r\n\t                                var theResponse = {};\r\n\t                                theResponse.descriptionEsp = errorMessage;\r\n\t                                theResponse.responseResult = \"error\";\r\n\t                                $scope.theResponse = theResponse;\r\n\t                                $scope.displayServerResponse();\r\n\t                            }\r\n\t                        }\r\n\t                    };\r\n\t\r\n\t                    $scope.setTutorialCookie = function () {\r\n\t                        var expireDate = new Date();\r\n\t                        expireDate.setDate(expireDate.getDate() + 365);\r\n\t                        $cookies.put(configService.getEndpoint('tutorial.cookie'), 'true', {'expires': expireDate});\r\n\t                    };\r\n\t\r\n\t                    $scope.setDefaultVisibility();\r\n\t                    $scope.checkForErrors();\r\n\t\r\n\t                    $timeout(function () {\r\n\t                        angular.element($('#overheadSubContainer')).removeClass('hiddencontainer');\r\n\t                    }, 100);\r\n\t\r\n\t                    if (($cookies.get(configService.getEndpoint('tutorial.cookie')) != 'true') && !$scope.specificOffer) {\r\n\t                        $timeout(function () {\r\n\t                            $scope.displayTutorialDiagram();\r\n\t                        }, 2000);\r\n\t                    }\r\n\t                }]\r\n\t        }\r\n\t    });\n\n/***/ },\n/* 23 */\n/***/ function(module, exports) {\n\n\t/**\r\n\t * Created by hasiermetal on 19/06/16.\r\n\t */\r\n\taporlaofertaApp\r\n\t    .directive('ngHeadAccountAndOfferManagement', ['$window', '$anchorScroll', function ($window, $anchorScroll) {\r\n\t        return {\r\n\t            restrict: 'A',\r\n\t            templateUrl: 'resources/js/header-display/headAccountAndOfferManagement.jsp',\r\n\t            scope: {\r\n\t                displayLogin: '=',\r\n\t                displaySignup: '=',\r\n\t                displayOfferCreate: '=',\r\n\t                displayAccountUpdateForm: '='\r\n\t            },\r\n\t            link: function ($scope) {\r\n\t                $scope.shareUrl = \"www.aporlaoferta.com\";\r\n\t                $scope.shareText = $(\"meta[property='og:description']\").attr(\"content\");\r\n\t                $scope.scrollPosition = true;\r\n\t                angular.element($window).bind(\"scroll\", function () {\r\n\t                    $scope.scrollPosition = this.pageYOffset <= 50;\r\n\t                    $scope.$apply();\r\n\t                });\r\n\t                $scope.toTheTop = function () {\r\n\t                    $anchorScroll();\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t    }]);\n\n/***/ },\n/* 24 */\n/***/ function(module, exports) {\n\n\t/**\r\n\t * Created by hasiermetal on 10/08/16.\r\n\t */\r\n\taporlaofertaApp\r\n\t    .directive('ngMainSlogan', function () {\r\n\t        return {\r\n\t            restrict: 'A',\r\n\t            templateUrl: 'resources/js/header-display/mainSlogan.html',\r\n\t            controller: ['$scope', '$timeout',\r\n\t                function ($scope, $timeout) {\r\n\t                    $timeout(function () {\r\n\t                        $scope.faded=true;\r\n\t                    }, 1200);\r\n\t                }]\r\n\t        }\r\n\t    });\n\n/***/ },\n/* 25 */\n/***/ function(module, exports) {\n\n\t/**\r\n\t * Created by hasiermetal on 19/06/15.\r\n\t */\r\n\taporlaofertaApp\r\n\t    .directive('ngImageUploader', function () {\r\n\t        return {\r\n\t            restrict: 'A',\r\n\t            scope: {\r\n\t                finalUrl: '=',\r\n\t                alreadyUploadedImage: '='\r\n\t            },\r\n\t            templateUrl: 'resources/js/uploader/imageUpload.html',\r\n\t            controller: ['$rootScope', '$scope', 'configService', '$timeout', function ($rootScope, $scope, configService, $timeout) {\r\n\t                $scope.uploader = {};\r\n\t                $scope.displayThumbnail = true;\r\n\t                $scope.invalidSize = false;\r\n\t                $scope.invalidImage = false;\r\n\t                $scope.maxImageSize = configService.getEndpoint('max.image.size');\r\n\t                $scope.alreadyUploadedImage=\"\";\r\n\t                $scope.fileAdded = function (file) {\r\n\t                    var fileReader = new FileReader();\r\n\t                    fileReader.onload = function (event) {\r\n\t                        var img = new Image();\r\n\t                        $scope.alreadyUploadedImage=\"\";\r\n\t                        img.onerror = function () {\r\n\t                            $scope.displayInvalidImageMessage();\r\n\t                            return false;\r\n\t                        };\r\n\t                        img.onload = function () {\r\n\t                            if (this.width > $scope.maxImageSize ||\r\n\t                                this.height > $scope.maxImageSize\r\n\t                                ) {\r\n\t                                $scope.displayInvalidImageSizeMessage();\r\n\t                                return false;\r\n\t                            }\r\n\t                            $scope.uploader.flow.upload();\r\n\t                            $scope.defaultThumbnailView();\r\n\t                        };\r\n\t                        img.src = event.target.result;\r\n\t                    };\r\n\t                    fileReader.readAsDataURL(file.file);\r\n\t                };\r\n\t\r\n\t                $scope.deleteImage=function(){\r\n\t                    $scope.alreadyUploadedImage = \"\";\r\n\t                    $scope.uploader.flow.cancel();\r\n\t                }\r\n\t\r\n\t                $scope.changeImage=function(){\r\n\t                    $scope.alreadyUploadedImage = \"\";\r\n\t                }\r\n\t\r\n\t                $scope.alreadyUploaded = function () {\r\n\t                    return $scope.alreadyUploadedImage !== \"\";\r\n\t                }\r\n\t\r\n\t                $scope.defaultThumbnailView = function () {\r\n\t                    $scope.displayThumbnail = true;\r\n\t                    $scope.invalidImage = false;\r\n\t                    $scope.invalidSize = false;\r\n\t                };\r\n\t\r\n\t                $scope.filesIsUploaded = function (message) {\r\n\t                    var responseResult = JSON.parse(message);\r\n\t                    if (responseResult.code == 0) {\r\n\t                        $scope.finalUrl = responseResult.description;\r\n\t                    }\r\n\t                    else {\r\n\t                        $scope.handleUploadError(responseResult);\r\n\t                    }\r\n\t                };\r\n\t                $scope.handleUploadError = function (error) {\r\n\t                    $rootScope.$broadcast('serverResponse', error);\r\n\t                };\r\n\t                $scope.$watch('finalUrl', function (newValue, oldValue) {\r\n\t                    if (newValue === \"\" || typeof newValue === 'undefined') {\r\n\t                        $scope.uploader.flow.cancel();\r\n\t                    }\r\n\t                });\r\n\t\r\n\t                $scope.isInvalidThumbnailShown = function () {\r\n\t                    return $scope.invalidImage || $scope.invalidSize;\r\n\t                };\r\n\t\r\n\t                $scope.displayInvalidImageSizeMessage = function () {\r\n\t                    $scope.defaultThumbnailView();\r\n\t                    $scope.invalidSize = true;\r\n\t                    $scope.displayThumbnail = false;\r\n\t                    $timeout(function () {\r\n\t                        $scope.uploader.flow.cancel();\r\n\t                    }, 500);\r\n\t                };\r\n\t                $scope.displayInvalidImageMessage = function () {\r\n\t                    $scope.defaultThumbnailView();\r\n\t                    $scope.invalidImage = true;\r\n\t                    $scope.displayThumbnail = false;\r\n\t                    $timeout(function () {\r\n\t                        $scope.uploader.flow.cancel();\r\n\t                    }, 500);\r\n\t                }\r\n\t            }]\r\n\t        }\r\n\t    });\n\n/***/ },\n/* 26 */\n/***/ function(module, exports) {\n\n\t/**\r\n\t * Created by hasiermetal on 22/06/15.\r\n\t */\r\n\taporlaofertaApp\r\n\t    .directive('ngResponseFromServer', function () {\r\n\t        return {\r\n\t            restrict: 'A',\r\n\t            templateUrl: 'resources/js/response/serverResponse.html',\r\n\t            scope: {\r\n\t                theResponse: '='\r\n\t            }\r\n\t        }\r\n\t    });\n\n/***/ },\n/* 27 */\n/***/ function(module, exports) {\n\n\t/**\r\n\t * Created by hasiermetal on 16/03/14.\r\n\t */\r\n\taporlaofertaApp\r\n\t    .directive('ngSocialMedia', function () {\r\n\t        return {\r\n\t            restrict: 'A',\r\n\t            templateUrl: 'resources/js/social/socialMedia.html',\r\n\t            scope: {\r\n\t                shareUrl: '=',\r\n\t                shareText: '='\r\n\t            },\r\n\t            controller: ['$scope',\r\n\t                function ($scope) {\r\n\t                    $scope.facebookUrl = \"https://www.facebook.com/sharer/sharer.php?u=\" + $scope.shareUrl;\r\n\t                    $scope.twitterUrl = \"https://twitter.com/intent/tweet?url=\" +\r\n\t                        $scope.shareUrl + \"&text=\" + $scope.shareText + \"&via=aporlaoferta\";\r\n\t                    $scope.googlePlusUrl = \"https://plus.google.com/share?url=\" + $scope.shareUrl\r\n\t                }]\r\n\t\r\n\t        }\r\n\t    });\n\n/***/ },\n/* 28 */\n/***/ function(module, exports) {\n\n\t/**\r\n\t * Created by hasiermetal on 14/05/16.\r\n\t */\r\n\taporlaofertaApp\r\n\t    .directive('ngRedirectComponents', function () {\r\n\t        return {\r\n\t            restrict: 'A',\r\n\t            templateUrl: 'resources/js/error/redirectComponents.html'\r\n\t        }\r\n\t    });\n\n/***/ },\n/* 29 */\n/***/ function(module, exports) {\n\n\t/**\r\n\t * Created by hasiermetal on 16/03/14.\r\n\t */\r\n\taporlaofertaApp\r\n\t    .directive('ngPasswordForgotten', function () {\r\n\t        return {\r\n\t            restrict: 'A',\r\n\t            templateUrl: 'resources/js/account/password-forgotten/forgottenForm.html',\r\n\t            scope: {\r\n\t                uuid: '=',\r\n\t                nick: '=',\r\n\t                customCloseCallback: '='\r\n\t            },\r\n\t            controller: ['$scope', '$http', 'requestManager', 'configService', 'alertService','$timeout',\r\n\t                function ($scope, http, requestManager, configService, alertService,$timeout) {\r\n\t                    $scope.validPassword = /^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d!$%@#£€*?&]{8,}$/;\r\n\t                    $scope.theUser = {userNickname: $scope.nick, uuid: $scope.uuid};\r\n\t                    $scope.updatePassword = function (theUser) {\r\n\t                        $scope.processing=true;\r\n\t                        requestManager.makePostCall(theUser, {}, configService.getEndpoint('password.forgotten'))\r\n\t                            .success(function (data, status, headers, config) {\r\n\t                                $scope.processPasswordResponse(data)\r\n\t                            }).error(function (data, status, headers, config) {\r\n\t                                alertService.sendDefaultErrorMessage();\r\n\t                            }).finally(function(){\r\n\t                                $scope.processing=false;\r\n\t                            });\r\n\t                        $scope.theUser = {userNickname: $scope.nick, uuid: $scope.uuid};\r\n\t                    }\r\n\t                    $scope.processPasswordResponse = function (data) {\r\n\t                        alertService.sendErrorMessage(data.descriptionEsp);\r\n\t                        if(alertService.isAllOk(data)){\r\n\t                            $timeout(function () {\r\n\t                                window.location.replace(\"/\");\r\n\t                            }, 2000);\r\n\t                        }\r\n\t                    }\r\n\t                }]\r\n\t        }\r\n\t    });\n\n/***/ },\n/* 30 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t__webpack_require__(31);\n\n/***/ },\n/* 31 */\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ }\n/******/ ]);\n\n\n/** WEBPACK FOOTER **\n ** bundle.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap b57977ee02766ff45278\n **/","var requestManager = angular.module('requestManager', []);\r\n\r\nrequestManager.service('requestManager', ['$http',\r\n    function ($http) {\r\n        var requestControllerService = {};\r\n        var csrfToken;\r\n        requestControllerService.initMainController = function () {\r\n            csrfToken = $(\"meta[name='_csrf']\").attr(\"content\");\r\n        };\r\n        requestControllerService.makePostCall=function(data, params, url){\r\n            params._csrf= csrfToken;\r\n            return $http({\r\n                method: 'POST',\r\n                url: url,\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'X-CSRF-TOKEN': csrfToken\r\n                },\r\n                params: params,\r\n                data: data\r\n            });\r\n        };\r\n        requestControllerService.getActualToken=function(){\r\n            return csrfToken;\r\n        }\r\n        requestControllerService.initMainController();\r\n        return requestControllerService;\r\n    }]);\r\n\r\n\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/main/webapp/resources/js/request-handler/requestManagerService.js\n ** module id = 1\n ** module chunks = 0\n **/","var configManager = angular.module('configService', []);\r\n\r\nconfigManager.service('configService', [function () {\r\n    var configService = {};\r\n    var GET_OFFERS_ENDPOINT = \"getOffers\";\r\n    var GET_HOTTEST_OFFERS_ENDPOINT = \"getHottestOffers\";\r\n    var GET_OFFER_ENDPOINT = \"getOffer\";\r\n    var CREATE_OFFER_ENDPOINT = \"createOffer\";\r\n    var UPDATE_OFFER_ENDPOINT = \"updateOffer\";\r\n    var EXPIRE_OFFER_ENDPOINT = \"expireOffer\";\r\n    var REMOVE_OFFER_ENDPOINT = \"removeOffer\";\r\n    var CREATE_ACCOUNT_ENDPOINT = \"createUser\";\r\n    var UPDATE_ACCOUNT_ENDPOINT = \"updateUser\";\r\n    var BAN_USER = \"banUser\";\r\n    var GET_ACCOUNT_DETAILS_ENDPOINT = \"accountDetails\";\r\n    var GET_COMPANIES_ENDPOINT = \"companyList\";\r\n    var GET_OFFER_CATEGORIES_ENDPOINT = \"getOfferCategories\";\r\n    var POSITIVE_FEEDBACK_ENDPOINT = \"votePositive\";\r\n    var NEGATIVE_FEEDBACK_ENDPOINT = \"voteNegative\";\r\n    var CREATE_COMMENT_ENDPOINT = \"createComment\";\r\n    var DELETE_COMMENT_ENDPOINT = \"deleteComment\";\r\n    var QUOTE_COMMENT_ENDPOINT = \"quoteComment\";\r\n    var GET_FILTERED_ENDPOINT = \"getFilteredOffers\";\r\n    var REQUEST_PASSWORD_UPDATE = \"forgottenPassword\";\r\n    var REQUEST_PASSWORD = \"requestForgottenPassword\";\r\n    var TUTORIAL_COOKIE = \"aporlaoferta-tut\";\r\n    var LAW_COOKIE = \"aporlaoferta-cle\";\r\n    var IMAGE_MAX_SIZE = 4500;\r\n    configService.getEndpoint = function (key) {\r\n        return configMap[key];\r\n    };\r\n    var configMap = {\r\n        'get.offers': GET_OFFERS_ENDPOINT,\r\n        'get.hottest.offers': GET_HOTTEST_OFFERS_ENDPOINT,\r\n        'get.offer': GET_OFFER_ENDPOINT,\r\n        'create.offer': CREATE_OFFER_ENDPOINT,\r\n        'update.offer': UPDATE_OFFER_ENDPOINT,\r\n        'expire.offer': EXPIRE_OFFER_ENDPOINT,\r\n        'remove.offer': REMOVE_OFFER_ENDPOINT,\r\n        'create.account': CREATE_ACCOUNT_ENDPOINT,\r\n        'update.account': UPDATE_ACCOUNT_ENDPOINT,\r\n        'get.account.details': GET_ACCOUNT_DETAILS_ENDPOINT,\r\n        'get.companies': GET_COMPANIES_ENDPOINT,\r\n        'get.offer.categories': GET_OFFER_CATEGORIES_ENDPOINT,\r\n        'ban.user': BAN_USER,\r\n        'positive.feedback': POSITIVE_FEEDBACK_ENDPOINT,\r\n        'negative.feedback': NEGATIVE_FEEDBACK_ENDPOINT,\r\n        'create.comment': CREATE_COMMENT_ENDPOINT,\r\n        'delete.comment': DELETE_COMMENT_ENDPOINT,\r\n        'quote.comment': QUOTE_COMMENT_ENDPOINT,\r\n        'get.filtered.offers': GET_FILTERED_ENDPOINT,\r\n        'password.forgotten': REQUEST_PASSWORD_UPDATE,\r\n        'password.forgotten.request': REQUEST_PASSWORD,\r\n        'max.image.size': IMAGE_MAX_SIZE,\r\n        'tutorial.cookie':TUTORIAL_COOKIE,\r\n        'law.cookie':LAW_COOKIE\r\n    };\r\n    return configService;\r\n}]);\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/main/webapp/resources/js/config/configService.js\n ** module id = 2\n ** module chunks = 0\n **/","var alertManager = angular.module('alertService', []);\r\n\r\nalertManager.service('alertService', ['$rootScope', function ($rootScope) {\r\n    var alertService = {};\r\n    var defaultMessage = \"No se ha podido ejecutar la operación\";\r\n    alertService.isAllOk = function (data) {\r\n        return data.code == 0;\r\n    }\r\n    alertService.sendErrorMessage = function (data) {\r\n        var theResponse = {};\r\n        theResponse.descriptionEsp = data;\r\n        theResponse.responseResult = \"error\";\r\n        $rootScope.$broadcast('serverResponse', theResponse);\r\n    };\r\n    alertService.sendDefaultErrorMessage = function () {\r\n        var theResponse = {};\r\n        theResponse.descriptionEsp = alertService.getDefaultMessage();\r\n        theResponse.responseResult = \"error\";\r\n        $rootScope.$broadcast('serverResponse', theResponse);\r\n    }\r\n    alertService.getDefaultMessage = function () {\r\n        return defaultMessage;\r\n        ;\r\n    }\r\n    return alertService;\r\n}]);\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/main/webapp/resources/js/response/alertService.js\n ** module id = 3\n ** module chunks = 0\n **/","var offerManager = angular.module('offerManager', []);\r\n\r\nofferManager.service('offerManager', ['$rootScope', 'alertService', 'requestManager', 'configService',\r\n    function ($rootScope, alertService, requestManager, configService) {\r\n        var offerManagerController = {};\r\n        offerManagerController.requestNewestOffers = function (offerFilter) {\r\n            offerFilter.hot = false;\r\n            offerManagerController.requestMoreOffers(offerFilter, undefined, offerManagerController.broadcastOfferList,\r\n                function () {\r\n                });\r\n        }\r\n\r\n        offerManagerController.requestHottestOffers = function (offerFilter) {\r\n            offerFilter.hot = true;\r\n            offerManagerController.requestMoreOffers(offerFilter, undefined, offerManagerController.broadcastOfferList,\r\n                function () {\r\n                });\r\n        }\r\n\r\n        offerManagerController.broadcastOfferList = function (offerList) {\r\n            $rootScope.$broadcast('offerList', offerList);\r\n        }\r\n\r\n        offerManagerController.requestMoreOffers = function (offerFilter, lastOffer, callback, errorCallback) {\r\n            requestManager.makePostCall(offerFilter, {'number': lastOffer}, configService.getEndpoint('get.filtered.offers'))\r\n                .success(function (data, status, headers, config) {\r\n                    callback(data.theOffers);\r\n                    //$rootScope.$broadcast('offerList', data.theOffers);\r\n                }).error(function (data, status, headers, config) {\r\n                alertService.sendDefaultErrorMessage();\r\n                errorCallback();\r\n            });\r\n        }\r\n        offerManagerController.showSpecifications = function (id) {\r\n            $rootScope.$broadcast('loadingOfferSpecifications');\r\n            requestManager.makePostCall({}, {'id': id}, configService.getEndpoint('get.offer'))\r\n                .success(function (data, status, headers, config) {\r\n                    if (alertService.isAllOk(data)){\r\n                        $rootScope.$broadcast('offerSpecifications', data.theOffers);\r\n                    }\r\n                    else {\r\n                        alertService.sendErrorMessage(data.descriptionEsp);\r\n                    }\r\n                }).error(function (data, status, headers, config) {\r\n                    alertService.sendDefaultErrorMessage();\r\n            });\r\n        }\r\n        return offerManagerController;\r\n    }]);\r\n\r\n\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/main/webapp/resources/js/offer/offer-list/offerManagerService.js\n ** module id = 4\n ** module chunks = 0\n **/","/**\r\n * Created by hasiermetal on 16/03/15.\r\n */\r\naporlaofertaApp = angular.module('aPorLaOferta', [\r\n    'angular.filter',\r\n    'requestManager',\r\n    'alertService',\r\n    'configService',\r\n    'flow',\r\n    'ngAnimate',\r\n    'vcRecaptcha',\r\n    'offerManager',\r\n    'pwCheckModule',\r\n    'ngMessages',\r\n    'ngDropdowns',\r\n    'ngSanitize',\r\n    'MassAutoComplete',\r\n    'truncate',\r\n    'angular-cookie-law',\r\n    'ngCookies',\r\n    'slick'\r\n]);\r\n\r\n//main controller\r\naporlaofertaApp.controller('APorLaOfertaController', ['$scope', '$rootScope', function ($scope, $rootScope) {\r\n    $scope.keyHandler = function ($event) {\r\n        $rootScope.$broadcast('keydownControl', $event.keyCode);\r\n    };\r\n\r\n    $scope.time = new Date().getTime();\r\n    angular.element(document.body).bind(\"mousemove keypress\", function () {\r\n        $scope.time = new Date().getTime();\r\n    });\r\n    $scope.minute = 60000;\r\n    $scope.refresh = function () {\r\n        (new Date().getTime() - $scope.time >= 20 * $scope.minute) ? window.location.reload() : setTimeout($scope.refresh, 10 * $scope.minute);\r\n    }\r\n    setTimeout($scope.refresh, 10 * $scope.minute);\r\n}]);\r\n\r\naporlaofertaApp.directive('ngConfirmClick', [\r\n    function () {\r\n        return {\r\n            link: function (scope, element, attr) {\r\n                var msg = attr.ngConfirmClick || \"\";\r\n                var clickAction = attr.confirmedClick;\r\n                element.bind('click', function (event) {\r\n                    if (window.confirm(msg)) {\r\n                        scope.$eval(clickAction)\r\n                    }\r\n                });\r\n            }\r\n        };\r\n    }]);\r\n\r\naporlaofertaApp.config(['flowFactoryProvider', function (flowFactoryProvider) {\r\n    flowFactoryProvider.defaults = {\r\n        target: 'uploadImage',\r\n        permanentErrors: [404, 500, 501],\r\n        maxChunkRetries: 1,\r\n        chunkRetryInterval: 5000,\r\n        simultaneousUploads: 4,\r\n        singleFile: true\r\n    };\r\n\r\n}]);\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/main/webapp/resources/js/main-controller/mainController.js\n ** module id = 5\n ** module chunks = 0\n **/","/**\r\n * Created by hasiermetal on 16/03/14.\r\n */\r\naporlaofertaApp\r\n    .directive('ngAccountCreation', function () {\r\n        return {\r\n            restrict: 'A',\r\n            templateUrl: 'resources/js/account/account-signup/createAccount.jsp',\r\n            scope: {\r\n                overheadDisplay: '=',\r\n                customCloseCallback: '=',\r\n                displayCallback: '='\r\n            },\r\n            controller: ['$scope', 'requestManager', 'configService', 'vcRecaptchaService', 'alertService',\r\n                function ($scope, requestManager, configService, vcRecaptchaService, alertService) {\r\n                    $scope.theUser = {};\r\n                    $scope.widgetId = null;\r\n                    $scope.publicKey = \"6LdqHQoTAAAAAAht2VhkrLGU26eBOjL-nK9zXxcn\";\r\n                    $scope.disableNickname = false;\r\n                    $scope.passwordUpdateRequired = true;\r\n                    $scope.validMail = /^[_a-z0-9-]+(\\.[_a-z0-9-]+)*(\\+[a-z0-9-]+)?@[a-z]+\\.[a-z.]{2,5}$/;\r\n                    $scope.validPassword= /^(?=.*?)(?=.*?[a-z])(?=.*?[0-9])(?=.*?).{8,}$/;\r\n                    $scope.createAccount = function (theUser) {\r\n                        if (vcRecaptchaService.getResponse($scope.widgetId) === \"\") {\r\n                            $scope.displayErrorMessageAndDisplayAccount();\r\n                        }\r\n                        else {\r\n                            delete $scope.theUser.oldPassword;\r\n                            $scope.processing = true;\r\n                            requestManager.makePostCall(theUser, {recaptcha: vcRecaptchaService.getResponse($scope.widgetId)}, configService.getEndpoint('create.account'))\r\n                                .success(function (data, status, headers, config) {\r\n                                    $scope.processAccountResponse(data);\r\n                                }).error(function (data, status, headers, config) {\r\n                                    $scope.accountDefaultError();\r\n                                }).finally(function () {\r\n                                    $scope.processing = false;\r\n                                });\r\n                            $scope.theUser = {};\r\n                            $scope.userPassword2 = \"\";\r\n                            //$scope.overheadDisplay = false;\r\n                        }\r\n                    }\r\n                    $scope.displayErrorMessageAndDisplayAccount = function () {\r\n                        alertService.sendErrorMessage(\"Por favor, haga click en el captcha para demostrar que no es un robot\");\r\n                        $scope.restartRecaptcha();\r\n                        $scope.customCloseCallback = $scope.displayCallback;\r\n                    }\r\n                    $scope.processAccountResponse = function (data) {\r\n                        if (!alertService.isAllOk(data)) {\r\n                            $scope.accountError(data.descriptionEsp);\r\n                        }\r\n                        else {\r\n                            alertService.sendErrorMessage(data.descriptionEsp);\r\n                            $scope.customCloseCallback = false;\r\n                        }\r\n                        $scope.restartRecaptcha();\r\n                    }\r\n                    $scope.restartRecaptcha = function () {\r\n                        vcRecaptchaService.reload($scope.widgetId);\r\n                    }\r\n\r\n                    $scope.accountDefaultError = function () {\r\n                        alertService.sendDefaultErrorMessage();\r\n                        vcRecaptchaService.reload($scope.widgetId);\r\n                        $scope.customCloseCallback = $scope.displayCallback;\r\n                    }\r\n\r\n                    $scope.accountError = function (customMessage) {\r\n                        alertService.sendErrorMessage(customMessage);\r\n                        $scope.restartRecaptcha();\r\n                        $scope.customCloseCallback = $scope.displayCallback;\r\n                    };\r\n\r\n                    $scope.setWidgetId = function (widgetId) {\r\n                        $scope.widgetId = widgetId;\r\n                    };\r\n                }]\r\n        }\r\n    });\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/main/webapp/resources/js/account/account-signup/ngAccountCreationDirective.js\n ** module id = 6\n ** module chunks = 0\n **/","/**\r\n * Created by hasiermetal on 22/06/15.\r\n */\r\naporlaofertaApp\r\n    .directive('ngAccountUpdate', function () {\r\n        return {\r\n            restrict: 'A',\r\n            templateUrl: 'resources/js/account/account-signup/createAccount.jsp',\r\n            scope: {\r\n                overheadDisplay: '=',\r\n                customCloseCallback: '=',\r\n                displayCallback: '='\r\n            },\r\n            controller: ['$scope', 'vcRecaptchaService', 'alertService', '$http', 'requestManager', 'configService', '$rootScope',\r\n                function ($scope, vcRecaptchaService, alertService, http, requestManager, configService, $rootScope) {\r\n                    $scope.disableNickname = true;\r\n                    $scope.theUser = {};\r\n                    $scope.widgetId = null;\r\n                    $scope.passwordUpdateRequired = false;\r\n                    $scope.validMail = /^[_a-z0-9-]+(\\.[_a-z0-9-]+)*(\\+[a-z0-9-]+)?@[a-z]+\\.[a-z.]{2,5}$/;\r\n                    $scope.validPassword = /^(?=.*?)(?=.*?[a-z])(?=.*?[0-9])(?=.*?).{8,}$/;\r\n                    $scope.publicKey = \"6LdqHQoTAAAAAAht2VhkrLGU26eBOjL-nK9zXxcn\";\r\n                    $scope.createAccount = function (theUser) {\r\n                        if (vcRecaptchaService.getResponse($scope.widgetId) === \"\") {\r\n                            $scope.displayErrorMessageAndDisplayAccount();\r\n                        }\r\n                        else {\r\n                            $scope.processing = true;\r\n                            requestManager.makePostCall(theUser, {recaptcha: vcRecaptchaService.getResponse($scope.widgetId)}, configService.getEndpoint('update.account'))\r\n                                .success(function (data, status, headers, config) {\r\n                                    if ($scope.processAccountResponse(data)) {\r\n                                        $rootScope.$broadcast('userAvatar', angular.copy(theUser));\r\n                                    }\r\n                                }).error(function (data, status, headers, config) {\r\n                                    $scope.accountDefaultError();\r\n                                })\r\n                                .finally(function () {\r\n                                    $scope.processing = false;\r\n                                    $scope.getUserDetails();\r\n                                    $scope.passwordUpdateRequired = false;\r\n                                });\r\n                            //$scope.theUser = {};\r\n                            //$scope.overheadDisplay = false;\r\n                        }\r\n                    }\r\n\r\n                    $scope.processLogin = function(){\r\n                        $rootScope.$broadcast('userLoginRequest');\r\n                    }\r\n\r\n                    $scope.getUserDetails = function () {\r\n                        requestManager.makePostCall({}, {}, configService.getEndpoint('get.account.details'))\r\n                            .success(function (data, status, headers, config) {\r\n                                $scope.theUser = data;\r\n                            }).error(function (data, status, headers, config) {\r\n                                alertService.sendErrorMessage(\"No se ha podido obtener la información del usuario\");\r\n                                $scope.customCloseCallback = false;\r\n                            });\r\n                    }\r\n                    $scope.getUserDetails();\r\n\r\n                    $scope.resetPassword=function(){\r\n                        $scope.theUser.oldPassword=null;\r\n                        $scope.theUser.userPassword=null;\r\n                        $scope.userPassword2=null;\r\n                    }\r\n\r\n                    $scope.displayErrorMessageAndDisplayAccount = function () {\r\n                        alertService.sendErrorMessage(\"Por favor, haga click en el captcha para demostrar que no es un robot\");\r\n                        $scope.restartRecaptcha();\r\n                        $scope.customCloseCallback = $scope.displayCallback;\r\n                    }\r\n                    $scope.processAccountResponse = function (data) {\r\n                        if (!alertService.isAllOk(data)) {\r\n                            $scope.accountError(data.descriptionEsp);\r\n                        }\r\n                        else {\r\n                            alertService.sendErrorMessage(data.descriptionEsp);\r\n                            return true;\r\n                        }\r\n                        $scope.restartRecaptcha();\r\n                        return false;\r\n                    }\r\n\r\n                    $scope.accountDefaultError = function () {\r\n                        alertService.sendDefaultErrorMessage();\r\n                        $scope.restartRecaptcha();\r\n                        $scope.customCloseCallback = $scope.displayCallback;\r\n                    }\r\n\r\n                    $scope.accountError = function (customMessage) {\r\n                        alertService.sendErrorMessage(customMessage);\r\n                        $scope.restartRecaptcha();\r\n                        $scope.customCloseCallback = $scope.displayCallback;\r\n                    }\r\n                    $scope.setWidgetId = function (widgetId) {\r\n                        $scope.widgetId = widgetId;\r\n                    };\r\n                    $scope.restartRecaptcha = function () {\r\n                        vcRecaptchaService.reload($scope.widgetId);\r\n                    }\r\n                }]\r\n        }\r\n    });\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/main/webapp/resources/js/account/account-signup/ngAccountUpdateDirective.js\n ** module id = 7\n ** module chunks = 0\n **/","angular.module('pwCheckModule', [])\r\n    .directive('pwCheck', [function () {\r\n        return {\r\n            require: 'ngModel',\r\n            link: function (scope, elem, attrs, ctrl) {\r\n                var firstPassword = '#' + attrs.pwCheck;\r\n                elem.add(firstPassword).on('keyup', function () {\r\n                    scope.$apply(function () {\r\n                        var v = elem.val()===$(firstPassword).val();\r\n                        ctrl.$setValidity('pwmatch', v);\r\n                    });\r\n                });\r\n            }\r\n        }\r\n    }]);\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/main/webapp/resources/js/account/account-signup/pwdCheck.js\n ** module id = 8\n ** module chunks = 0\n **/","/**\r\n * Created by hasiermetal on 16/03/14.\r\n */\r\naporlaofertaApp\r\n    .directive('ngAccountLogin', function () {\r\n        return {\r\n            restrict: 'A',\r\n            templateUrl: 'view/login.jsp',\r\n            controller: ['$scope', 'requestManager', 'configService', 'alertService',\r\n                function ($scope, requestManager, configService, alertService) {\r\n                    $scope.validMail = /^[_a-z0-9-]+(\\.[_a-z0-9-]+)*(\\+[a-z0-9-]+)?@[a-z]+\\.[a-z.]{2,5}$/;\r\n                    $scope.processLogin=function(){\r\n                        $scope.processing=true;\r\n                        angular.element('#loginForm').trigger('submit');\r\n                    }\r\n\r\n                    $scope.requestPassword = function (userEmail) {\r\n                        $scope.processing = true;\r\n\r\n                        requestManager.makePostCall(userEmail, {userEmail: userEmail}, configService.getEndpoint('password.forgotten.request'))\r\n                            .success(function (data, status, headers, config) {\r\n                                $scope.processAccountResponse(data);\r\n                            }).error(function (data, status, headers, config) {\r\n                                $scope.accountDefaultError();\r\n                            }).finally(function () {\r\n                                $scope.processing = false;\r\n                            });\r\n                    }\r\n\r\n                    $scope.processAccountResponse = function (data) {\r\n                        alertService.sendErrorMessage(data.descriptionEsp);\r\n                        if ($scope.restartRecaptcha) {\r\n                            $scope.restartRecaptcha();\r\n                        }\r\n                    }\r\n\r\n                    $scope.accountDefaultError = function () {\r\n                        alertService.sendDefaultErrorMessage();\r\n                    }\r\n\r\n                }]\r\n        }\r\n    });\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/main/webapp/resources/js/account/account-login/ngAccountLoginDirective.js\n ** module id = 9\n ** module chunks = 0\n **/","/**\r\n * Created by hasiermetal on 16/03/14.\r\n */\r\naporlaofertaApp\r\n    .directive('ngAccountLogout', function () {\r\n        return {\r\n            restrict: 'A',\r\n            templateUrl: 'resources/js/account/account-logout/profile.jsp',\r\n            scope: {\r\n                accountUpdate: '='\r\n            },\r\n            controller: ['$scope', 'alertService', 'requestManager', 'configService', function ($scope, alertService, requestManager, configService) {\r\n                $scope.profileOptions = [\r\n                    {text: 'Actualizar perfil', value: 'accountUpdate'},\r\n                    {text: 'Cerrar sesión', value: 'formSubmit'}\r\n                ];\r\n                $scope.defaultProfileModel = {\r\n                    text: \"Opciones\"\r\n                };\r\n                $scope.profileModel = angular.copy($scope.defaultProfileModel);\r\n\r\n                $scope.$watch('profileModel', function () {\r\n                    if ($scope.profileModel.text !== \"Opciones\") {\r\n                        $scope[$scope.profileModel.value]();\r\n                        $scope.profileModel = angular.copy($scope.defaultProfileModel);\r\n                    }\r\n                });\r\n\r\n                $scope.getUserDetails = function () {\r\n                    requestManager.makePostCall({}, {}, configService.getEndpoint('get.account.details'))\r\n                        .success(function (data, status, headers, config) {\r\n                            $scope.userAvatar = data.userAvatar;\r\n                        }).error(function (data, status, headers, config) {\r\n                            alertService.sendErrorMessage(\"No se ha podido obtener la información del usuario\");\r\n                            $scope.customCloseCallback = false;\r\n                        });\r\n                }\r\n\r\n\r\n                $scope.getUserDetails();\r\n\r\n                $scope.formSubmit = function () {\r\n                    $scope.logoutForm.submit();\r\n                }\r\n\r\n                $scope.$on('userAvatar', function (event, args) {\r\n                    $scope.userAvatar = args.userAvatar;\r\n                });\r\n\r\n                $scope.formSubmit = function () {\r\n                    document.getElementById(\"logoutForm\").submit();\r\n                }\r\n            }]\r\n        }\r\n    });\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/main/webapp/resources/js/account/account-logout/ngAccountLogoutDirective.js\n ** module id = 10\n ** module chunks = 0\n **/","/**\r\n * Created by hasiermetal on 16/03/14.\r\n */\r\naporlaofertaApp\r\n    .directive('ngOfferList', function () {\r\n        return {\r\n            restrict: 'A',\r\n            templateUrl: 'resources/js/offer/offer-list/offerList.html',\r\n            scope: {\r\n                defaultList: '='\r\n            },\r\n            controller: ['$scope', 'offerManager',\r\n                function ($scope, offerManager) {\r\n                    $scope.offerList = [];\r\n                    $scope.moreOffersLoading = true;\r\n                    $scope.lastOffer = 0;\r\n\r\n                    $scope.showMoreOffers = function (lastOffer) {\r\n                        $scope.moreOffersLoading = true;\r\n                        $scope.offerFilter.hot = $scope.defaultList === 'hottestOffers';\r\n                        if (!$scope.isCategorySelected()) {\r\n                            $scope.offerFilter.selectedcategory = \"\";\r\n                        }\r\n                        offerManager.requestMoreOffers($scope.offerFilter, lastOffer,\r\n                            function (data) {\r\n                                $scope.offerList = $scope.offerList.concat(data);\r\n                                $scope.moreOffersLoading = false;\r\n                            }, function () {\r\n                                $scope.moreOffersLoading = false;\r\n                            });\r\n                    }\r\n\r\n                    $scope.updateIndex = function (index) {\r\n                        $scope.lastOffer = index;\r\n                    }\r\n\r\n                    $scope.$on('offerList', function (event, args) {\r\n                        $scope.moreOffersLoading = false;\r\n                        $scope.offerList = args;\r\n                    });\r\n\r\n                    $scope.showSpecifications = function (id) {\r\n                        offerManager.showSpecifications(id);\r\n                    }\r\n\r\n                    $scope.initialiseScrollyButtons = function () {\r\n                        $('.scrolly')\r\n                            .scrolly({\r\n                                speed: 1500\r\n                            });\r\n                    }\r\n\r\n                    $scope.parsePrice = function (price) {\r\n                        if (price || price==0) {\r\n                            return price.toString().replace(/\\./, ',');\r\n                        }\r\n                    }\r\n\r\n                    $scope.isCategorySelected = function () {\r\n                        return !$scope.isEmptyCategory($scope.offerFilter.selectedcategory);\r\n                    };\r\n\r\n                    $scope.isEmptyCategory = function (category) {\r\n                        return [\"\", null, undefined, \"Categoría\", \"Todas\", \"CATEGORÍA\", \"TODAS\"].indexOf(category) > -1;\r\n                    }\r\n\r\n                    $scope.offerFeedbackStyle = function (offer) {\r\n                        var offerFeedback = offer.offerPositiveVote - offer.offerNegativeVote;\r\n                        if (offerFeedback > 0 && offerFeedback <= 100) {\r\n                            return 'hotFeedback';\r\n                        }\r\n                        else if (offerFeedback > 100) {\r\n                            return 'veryHotFeedback';\r\n                        }\r\n                        else if (offerFeedback < 0) {\r\n                            return 'coldFeedback';\r\n                        }\r\n                        return 'neutralFeedback';\r\n                    }\r\n\r\n                    $scope.$on('appliedOfferFilters', function () {\r\n                        $scope.moreOffersLoading = true;\r\n                    });\r\n\r\n                    $scope.$watch('offerList', function () {\r\n                        $scope.moreOffersLoading = false;\r\n                    });\r\n\r\n                    $scope.initialiseScrollyButtons();\r\n                }]\r\n        }\r\n    });\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/main/webapp/resources/js/offer/offer-list/ngOfferListDirective.js\n ** module id = 11\n ** module chunks = 0\n **/","/**\r\n * Created by hasiermetal on 16/03/14.\r\n */\r\naporlaofertaApp\r\n    .directive('ngPromotionList', function () {\r\n        return {\r\n            restrict: 'A',\r\n            templateUrl: 'resources/js/offer/offer-list/promotionList.html',\r\n            controller: ['$scope', '$rootScope', 'offerManager',\r\n                function ($scope, $rootScope, offerManager) {\r\n                    $scope.defaultList = \"\";\r\n                    $scope.appliedOfferFilters = {};\r\n\r\n                    $scope.$on('appliedOfferFilters', function (event, args) {\r\n                        $scope.appliedOfferFilters = args;\r\n                    });\r\n\r\n                    $scope.requestNewestOffers = function () {\r\n                        offerManager.requestNewestOffers($scope.appliedOfferFilters);\r\n                        $scope.defaultList = 'newestOffers';\r\n                    }\r\n\r\n                    $scope.requestHottestOffers = function () {\r\n                        offerManager.requestHottestOffers($scope.appliedOfferFilters);\r\n                        $scope.defaultList = 'hottestOffers';\r\n                    }\r\n\r\n                    $scope.displayTutorialModal = function () {\r\n                        $rootScope.$broadcast('displayTutorial');\r\n                    }\r\n                }]\r\n        }\r\n    });\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/main/webapp/resources/js/offer/offer-list/ngPromotionListDirective.js\n ** module id = 12\n ** module chunks = 0\n **/","/**\r\n * Created by hasiermetal on 11/06/15.\r\n */\r\naporlaofertaApp\r\n    .directive('ngOfferSpecifications', function () {\r\n        return {\r\n            restrict: 'A',\r\n            templateUrl: 'resources/js/offer/offer-specifications/offerSpecifications.jsp',\r\n            scope: {\r\n                theOffer: '=',\r\n                customCloseCallback: '='\r\n            },\r\n            controller: ['offerManager', 'alertService', '$scope', '$rootScope', 'requestManager', 'configService',\r\n                function (offerManager, alertService, $scope, $rootScope, requestManager, configService) {\r\n                    $scope.sharePrefix = \"www.aporlaoferta.com/?sh=\";\r\n                    $scope.sharePrice = \"€: \";\r\n                    $scope.commentsCustomCloseCallback = {};\r\n                    $scope.appliedOfferFilters = {};\r\n\r\n                    $scope.votePositive = function (id) {\r\n                        requestManager.makePostCall({}, {'offerId': id}, configService.getEndpoint('positive.feedback'))\r\n                            .success(function (data) {\r\n                                $scope.sendMessageAndShowSpecifications(data, id, 'offerPositiveVote');\r\n                            }).error(function () {\r\n                            $scope.sendDefaultErrorMessageAndShowSpecifications(id);\r\n                        });\r\n                    }\r\n                    $scope.voteNegative = function (id) {\r\n                        requestManager.makePostCall({}, {'offerId': id}, configService.getEndpoint('negative.feedback'))\r\n                            .success(function (data) {\r\n                                $scope.sendMessageAndShowSpecifications(data, id, 'offerNegativeVote');\r\n                            }).error(function () {\r\n                            $scope.sendDefaultErrorMessageAndShowSpecifications(id);\r\n                        });\r\n                    }\r\n                    $scope.sendMessageAndShowSpecifications = function (data, id, feedback) {\r\n                        if (!alertService.isAllOk(data)) {\r\n                            alertService.sendErrorMessage(data.descriptionEsp);\r\n                            $scope.customCloseCallback = function () {\r\n                                offerManager.showSpecifications(id);\r\n                            }\r\n                        }\r\n                        else {\r\n                            $scope.theOffer[0][feedback] = $scope.theOffer[0][feedback] + 1;\r\n                        }\r\n                    }\r\n                    $scope.sendDefaultErrorMessageAndShowSpecifications = function (id) {\r\n                        alertService.sendDefaultErrorMessage();\r\n                        $scope.customCloseCallback = function () {\r\n                            offerManager.showSpecifications(id);\r\n                        }\r\n                    }\r\n                    $scope.updateOffer = function (theOffer) {\r\n                        $rootScope.$broadcast('updateTheOffer', angular.copy(theOffer));\r\n                    }\r\n                    $scope.expireOffer = function (theOffer) {\r\n                        requestManager.makePostCall({}, {'id': theOffer.id}, configService.getEndpoint('expire.offer'))\r\n                            .success(function (data) {\r\n                                if (!alertService.isAllOk(data)) {\r\n                                    alertService.sendErrorMessage(data.descriptionEsp);\r\n                                }\r\n                                else {\r\n                                    alertService.sendErrorMessage(data.descriptionEsp);\r\n                                    $scope.customCloseCallback = function () {\r\n                                        offerManager.requestNewestOffers($scope.appliedOfferFilters);\r\n                                    }\r\n                                }\r\n                            }).error(function () {\r\n                            alertService.sendDefaultErrorMessage();\r\n                        });\r\n                    }\r\n\r\n                    $scope.banUser = function (nickname) {\r\n                        requestManager.makePostCall({}, {'nickname': nickname}, configService.getEndpoint('ban.user'))\r\n                            .success(function (data) {\r\n                                alertService.sendErrorMessage(data.descriptionEsp);\r\n                            }).error(function () {\r\n                            alertService.sendDefaultErrorMessage();\r\n                        });\r\n                    }\r\n\r\n                    $scope.removeOffer = function (id) {\r\n                        requestManager.makePostCall({}, {'id': id}, configService.getEndpoint('remove.offer'))\r\n                            .success(function (data) {\r\n                                alertService.sendErrorMessage(data.descriptionEsp);\r\n                                $scope.customCloseCallback = function () {\r\n                                    offerManager.requestNewestOffers($scope.appliedOfferFilters);\r\n                                }\r\n                            }).error(function () {\r\n                            alertService.sendDefaultErrorMessage();\r\n                        });\r\n                    }\r\n\r\n                    $scope.parsePrice = function (price) {\r\n                        if (price || price==0) {\r\n                            return price.toString().replace(/\\./, ',');\r\n                        }\r\n                    }\r\n\r\n                    $scope.offerFeedbackStyle = function (offer) {\r\n                        var offerFeedback = offer.offerPositiveVote - offer.offerNegativeVote;\r\n                        if (offerFeedback > 0 && offerFeedback <= 100) {\r\n                            return 'hotFeedback';\r\n                        }\r\n                        else if (offerFeedback > 100) {\r\n                            return 'veryHotFeedback';\r\n                        }\r\n                        else if (offerFeedback < 0) {\r\n                            return 'coldFeedback';\r\n                        }\r\n                        return 'neutralFeedback';\r\n                    }\r\n\r\n                    $scope.processLogin = function(){\r\n                        $rootScope.$broadcast('userLoginRequest');\r\n                    }\r\n\r\n                    $scope.processRegister = function(){\r\n                        $rootScope.$broadcast('userRegisterRequest');\r\n                    }\r\n\r\n                    $scope.$on('commentsCustomCloseCallback', function (event, args) {\r\n                        var customCallback = args;\r\n                        $scope.customCloseCallback = customCallback;\r\n                    });\r\n\r\n                    $scope.$on('appliedOfferFilters', function (event, args) {\r\n                        $scope.appliedOfferFilters = args;\r\n                    });\r\n                }]\r\n        }\r\n    });\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/main/webapp/resources/js/offer/offer-specifications/ngOfferSpecifications.js\n ** module id = 13\n ** module chunks = 0\n **/","/**\r\n * Created by hasiermetal on 08/08/16.\r\n */\r\naporlaofertaApp\r\n    .directive('ngQuickTutorial', function () {\r\n        return {\r\n            restrict: 'A',\r\n            scope: {\r\n                isDisplayed: '=',\r\n            },\r\n            templateUrl: 'resources/js/header-display/tutorial/quickTutorial.jsp',\r\n            controller: ['$scope', '$element', '$timeout',\r\n                function ($scope, $element, $timeout) {\r\n                    $scope.shareUrl = \"www.aporlaoferta.com\";\r\n                    $scope.shareText = $(\"meta[property='og:description']\").attr(\"content\");\r\n\r\n                    $scope.$watch('isDisplayed', function () {\r\n                        if ($scope.isDisplayed) {\r\n                            $scope.refreshTutorial();\r\n                            $timeout(function () {\r\n                                $scope.refreshTutorial();\r\n                            }, 300);\r\n                        }\r\n                    });\r\n\r\n                    $scope.refreshTutorial = function () {\r\n                        $element.resize();\r\n                        $element.find('.slick-dots li:first a').trigger('click');\r\n                        $scope.isDisplayed = 0;\r\n                    }\r\n\r\n\r\n                }]\r\n        }\r\n    });\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/main/webapp/resources/js/header-display/tutorial/ngQuickTutorial.js\n ** module id = 14\n ** module chunks = 0\n **/","/**\r\n * Created by hasiermetal on 14/08/16.\r\n */\r\naporlaofertaApp\r\n    .directive('ngFooter', function () {\r\n        return {\r\n            restrict: 'A',\r\n            templateUrl: 'resources/js/footer/footer.jsp',\r\n            controller: ['$scope', '$rootScope',\r\n                function ($scope, $rootScope) {\r\n                    $scope.displayTutorialModal = function () {\r\n                        $rootScope.$broadcast('displayTutorial');\r\n                    }\r\n                }]\r\n        }\r\n    });\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/main/webapp/resources/js/footer/ngFooterDirective.js\n ** module id = 15\n ** module chunks = 0\n **/","/**\r\n * Created by hasiermetal on 11/06/15.\r\n */\r\naporlaofertaApp\r\n    .directive('ngOfferComments', function () {\r\n        return {\r\n            restrict: 'A',\r\n            templateUrl: 'resources/js/offer/offer-specifications/offer-comments/' +\r\n            'offerComments.jsp',\r\n            scope: {\r\n                theComments: '=',\r\n                theOffer: '=',\r\n                commentsCustomCloseCallback: '='\r\n            },\r\n            controller: ['$filter', 'alertService', '$scope', '$rootScope', 'requestManager', 'configService', 'offerManager',\r\n                function ($filter, alertService, $scope, $rootScope, requestManager, configService, offerManager) {\r\n                    $scope.quoteActionEnable = -1;\r\n                    $scope.qComment = {};\r\n                    $scope.comment = {};\r\n                    $scope.getQuotedComment = function (id, comments) {\r\n                        return $filter('filter')(comments, {id: id})[0];\r\n                    }\r\n\r\n                    $scope.quoteAction = function (id) {\r\n                        if ($scope.quoteActionEnable == id) {\r\n                            $scope.quoteActionEnable = -1;\r\n                        }\r\n                        else {\r\n                            $scope.quoteActionEnable = id;\r\n                        }\r\n                    }\r\n\r\n                    $scope.isQuoteActionEnabled = function (id) {\r\n                        return $scope.quoteActionEnable == id;\r\n                    }\r\n\r\n                    $scope.writeComment = function (comment, id) {\r\n                        $scope.processing = true;\r\n                        requestManager.makePostCall(comment, {'offer': id}, configService.getEndpoint('create.comment'))\r\n                            .success(function (data, status, headers, config) {\r\n                                $scope.sendMessageAndShowSpecifications(data.descriptionEsp);\r\n                            }).error(function (data, status, headers, config) {\r\n                            $scope.sendDefaultErrorMessageAndShowSpecifications();\r\n                        }).finally(function () {\r\n                            $scope.processing = false;\r\n                        });\r\n                    };\r\n\r\n                    $scope.quoteComment = function (comment, id) {\r\n                        $scope.processing = true;\r\n                        requestManager.makePostCall(comment, {'quotedComment': id}, configService.getEndpoint('quote.comment'))\r\n                            .success(function (data, status, headers, config) {\r\n                                $scope.sendMessageAndShowSpecifications(data.descriptionEsp);\r\n                            }).error(function (data, status, headers, config) {\r\n                            $scope.sendDefaultErrorMessageAndShowSpecifications();\r\n                        }).finally(function () {\r\n                            $scope.processing = false;\r\n                        });\r\n                    }\r\n\r\n                    $scope.sendMessageAndShowSpecifications = function (message) {\r\n                        //alertService.sendErrorMessage(message);\r\n                        //$scope.updateViewAndCloseCallback();\r\n                        $scope.restartCommentTexts();\r\n                        offerManager.showSpecifications($scope.theOffer);\r\n                    }\r\n\r\n                    $scope.sendDefaultErrorMessageAndShowSpecifications = function () {\r\n                        alertService.sendDefaultErrorMessage();\r\n                        $scope.updateViewAndCloseCallback();\r\n                    }\r\n\r\n                    $scope.updateViewAndCloseCallback = function () {\r\n                        $scope.commentsCustomCloseCallback = function () {\r\n                            offerManager.showSpecifications($scope.theOffer);\r\n                        }\r\n                        $rootScope.$broadcast('commentsCustomCloseCallback', $scope.commentsCustomCloseCallback);\r\n                        $scope.restartCommentTexts();\r\n                    }\r\n\r\n                    $scope.restartCommentTexts = function () {\r\n                        $scope.comment.commentText = \"\";\r\n                        $scope.qComment.commentText = \"\";\r\n                    }\r\n\r\n                    $scope.processLogin = function(){\r\n                        $rootScope.$broadcast('userLoginRequest');\r\n                    }\r\n\r\n                    $scope.processRegister = function(){\r\n                        $rootScope.$broadcast('userRegisterRequest');\r\n                    }\r\n\r\n                    $scope.deleteComment = function (id) {\r\n                        requestManager.makePostCall({}, {'comment': id}, configService.getEndpoint('delete.comment'))\r\n                            .success(function (data) {\r\n                                $scope.sendMessageAndShowSpecifications(data.descriptionEsp);\r\n                            }).error(function () {\r\n                            $scope.sendDefaultErrorMessageAndShowSpecifications();\r\n                        });\r\n                    }\r\n\r\n                    $scope.banUser = function (nickname) {\r\n                        requestManager.makePostCall({}, {'nickname': nickname}, configService.getEndpoint('ban.user'))\r\n                            .success(function (data) {\r\n                                alertService.sendErrorMessage(data.descriptionEsp);\r\n                            }).error(function () {\r\n                            alertService.sendErrorMessage(data.descriptionEsp);\r\n                        });\r\n                    }\r\n                }\r\n            ]\r\n        }\r\n    })\r\n;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/main/webapp/resources/js/offer/offer-specifications/offer-comments/ngOfferComments.js\n ** module id = 16\n ** module chunks = 0\n **/","/**\r\n * Created by hasiermetal on 26/06/15.\r\n */\r\naporlaofertaApp\r\n    .directive('ngOfferCommentsQuotes', function () {\r\n        return {\r\n            restrict: 'A',\r\n            templateUrl: 'resources/js/offer/offer-specifications/offer-comments/' +\r\n                'commentsQuotes.jsp',\r\n            scope: {\r\n                theComments: '=',\r\n                quotedComment: '='\r\n            },\r\n            controller: ['$rootScope', '$scope', 'requestManager', 'configService', function ($rootScope, $scope, requestManager, configService) {\r\n                $scope.quoteActionEnable = -1;\r\n                $scope.quoteAction = function (id) {\r\n                    if ($scope.quoteActionEnable == id) {\r\n                        $scope.quoteActionEnable = -1;\r\n                    }\r\n                    else {\r\n                        $scope.quoteActionEnable = id;\r\n                    }\r\n                }\r\n                $scope.isQuoteActionEnabled = function (id) {\r\n                    return $scope.quoteActionEnable == id;\r\n                }\r\n                $scope.quoteComment = function (comment, id) {\r\n                    requestManager.makePostCall(comment, {'quotedComment': id}, configService.getEndpoint('quote.comment'))\r\n                        .success(function (data, status, headers, config) {\r\n                            $rootScope.$broadcast('serverResponse', data);\r\n                            $scope.qComment.commentText=\"\";\r\n                        }).error(function (data, status, headers, config) {\r\n                            var theResponse = {};\r\n                            theResponse.description = data;\r\n                            theResponse.responseResult = \"error\";\r\n                            $rootScope.$broadcast('serverResponse', theResponse);\r\n                        });\r\n                };\r\n\r\n            }]\r\n        }\r\n    });\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/main/webapp/resources/js/offer/offer-specifications/offer-comments/ngOfferCommentsQuotes.js\n ** module id = 17\n ** module chunks = 0\n **/","/**\r\n * Created by hasiermetal on 16/03/14.\r\n */\r\naporlaofertaApp\r\n    .directive('ngOfferCreation', function () {\r\n        return {\r\n            restrict: 'A',\r\n            templateUrl: 'resources/js/offer/offer-creation/offerCreation.html',\r\n            scope: {\r\n                overheadDisplay: '=',\r\n                customCloseCallback: '=',\r\n                displayCallback: '='\r\n            },\r\n            controller: ['$scope', '$rootScope', 'offerManager', 'requestManager', 'configService', 'alertService', 'vcRecaptchaService',\r\n                function ($scope, $rootScope, offerManager, requestManager, configService, alertService, vcRecaptchaService) {\r\n                    $scope.offer = {};\r\n                    $scope.widgetId = null;\r\n                    $scope.publicKey = \"6LdqHQoTAAAAAAht2VhkrLGU26eBOjL-nK9zXxcn\";\r\n                    $scope.resetCategory = true;\r\n                    $scope.appliedOfferFilters = {};\r\n\r\n                    $scope.createOffer = function () {\r\n                        if (vcRecaptchaService.getResponse($scope.widgetId) === \"\") {\r\n                            $scope.offerCreationError(\"Por favor, haga click en el captcha para demostrar que no es un robot\");\r\n                            vcRecaptchaService.reload($scope.widgetId);\r\n                        }\r\n                        else {\r\n                            $scope.processing = true;\r\n                            requestManager.makePostCall($scope.parseOffer(), {recaptcha: vcRecaptchaService.getResponse($scope.widgetId)}, configService.getEndpoint('create.offer'))\r\n                                .success(function (data, status, headers, config) {\r\n                                    if (!alertService.isAllOk(data)) {\r\n                                        $scope.offerCreationError(data.descriptionEsp);\r\n                                    }\r\n                                    else {\r\n                                        alertService.sendErrorMessage(data.descriptionEsp);\r\n                                        $scope.resetValues();\r\n                                        $scope.customCloseCallback = function () {\r\n                                            offerManager.requestNewestOffers($scope.appliedOfferFilters);\r\n                                        }\r\n                                    }\r\n                                }).error(function (data, status, headers, config) {\r\n                                    $scope.offerCreationError(alertService.getDefaultMessage());\r\n                                }).finally(function () {\r\n                                    $scope.processing = false;\r\n                                });\r\n                            //$scope.overheadDisplay = false;\r\n                        }\r\n                    };\r\n\r\n                    $scope.$on('appliedOfferFilters', function (event, args) {\r\n                        $scope.appliedOfferFilters = args;\r\n                    });\r\n\r\n                    $scope.parseOffer = function () {\r\n                        var theOffer = angular.copy($scope.offer);\r\n                        try {\r\n                            theOffer.originalPrice = parseFloat(theOffer.originalPrice.replace(/,/, '.'));\r\n                        } catch (e) {/*float already*/\r\n                        }\r\n                        try {\r\n                            theOffer.finalPrice = parseFloat(theOffer.finalPrice.replace(/,/, '.'));\r\n                        } catch (e) {/*float already*/\r\n                        }\r\n                        return theOffer;\r\n                    }\r\n\r\n                    $scope.restartRecaptcha = function () {\r\n                        vcRecaptchaService.reload($scope.widgetId);\r\n                    }\r\n\r\n                    $scope.offerCreationError = function (customMessage) {\r\n                        alertService.sendErrorMessage(customMessage);\r\n                        $scope.restartRecaptcha();\r\n                        $scope.customCloseCallback = $scope.displayCallback;\r\n                    }\r\n\r\n                    $scope.bigDecimalsOnly = /^\\-?\\d+((\\.|\\,)\\d+)?$/;\r\n                    $scope.resetValues = function () {\r\n                        $scope.restartRecaptcha();\r\n                        $scope.offer = {};\r\n                        $scope.brandNewCompany = false;\r\n                        $scope.resetCategory = true;\r\n                    };\r\n                    $scope.setWidgetId = function (widgetId) {\r\n                        $scope.widgetId = widgetId;\r\n                    };\r\n\r\n                    $scope.isCompanyDefined = function () {\r\n                        if ($scope.offer) {\r\n                            return $scope.offer.offerCompany && $scope.offer.offerCompany.companyName;\r\n                        }\r\n                    };\r\n\r\n                    $scope.isCategorySelected = function () {\r\n                        return !$scope.isEmptyCategory($scope.offer.offerCategory);\r\n                    };\r\n\r\n                    $scope.isEmptyCategory = function (category) {\r\n                        return [\"\", null, undefined, \"Categoría\", \"Todas\", \"CATEGORÍA\", \"TODAS\"].indexOf(category) > -1;\r\n                    }\r\n\r\n                    $scope.selectionPerformed = function () {\r\n                        return $scope.isCompanyDefined() && $scope.isCategorySelected();\r\n                    }\r\n\r\n                    $scope.offerCompanies = {};\r\n\r\n                    $scope.suggest_company=function(term) {\r\n                        var q = term.toLowerCase().trim();\r\n                        var results = [];\r\n                        for (var i = 0; i < $scope.offerCompanies.length && results.length < 10; i++) {\r\n                            var company = $scope.offerCompanies[i].companyName;\r\n                            if (company.toLowerCase().indexOf(q) === 0)\r\n                                results.push({ label: company, value: company });\r\n                        }\r\n                        return results;\r\n                    }\r\n\r\n                    $scope.autocomplete_options = {\r\n                        suggest: $scope.suggest_company\r\n                    };\r\n\r\n                    $scope.populateCompanyList = function () {\r\n                        requestManager.makePostCall({}, {}, configService.getEndpoint('get.companies'))\r\n                            .success(function (data, status, headers, config) {\r\n                                $scope.offerCompanies = angular.copy(data);\r\n                            }).error(function (data, status, headers, config) {\r\n                            var theResponse = {};\r\n                            theResponse.description = data;\r\n                            theResponse.responseResult = \"error\";\r\n                            $rootScope.$broadcast('serverResponse', theResponse);\r\n                        });\r\n                    };\r\n\r\n                    $scope.populateCompanyList();\r\n                }]\r\n        }\r\n    });\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/main/webapp/resources/js/offer/offer-creation/ngOfferCreationDirective.js\n ** module id = 18\n ** module chunks = 0\n **/","/**\r\n * Created by hasiermetal on 16/03/14.\r\n */\r\naporlaofertaApp\r\n    .directive('ngOfferUpdate', function () {\r\n        return {\r\n            restrict: 'A',\r\n            templateUrl: 'resources/js/offer/offer-creation/offerCreation.html',\r\n            scope: {\r\n                overheadDisplay: '=',\r\n                customCloseCallback: '=',\r\n                displayCallback: '=',\r\n                offer: \"=\"\r\n            },\r\n            controller: ['$scope', 'offerManager', 'requestManager', 'configService', 'alertService', 'vcRecaptchaService',\r\n                function ($scope, offerManager, requestManager, configService, alertService, vcRecaptchaService) {\r\n                    $scope.widgetId = null;\r\n                    $scope.publicKey = \"6LdqHQoTAAAAAAht2VhkrLGU26eBOjL-nK9zXxcn\";\r\n                    $scope.createOffer = function () {\r\n                        if (vcRecaptchaService.getResponse($scope.widgetId) === \"\") {\r\n                            $scope.offerCreationError(\"Por favor, haga click en el captcha para demostrar que no es un robot\");\r\n                            vcRecaptchaService.restartRecaptcha();\r\n                        }\r\n                        else {\r\n                            $scope.processing = true;\r\n                            requestManager.makePostCall($scope.parseOffer(), {recaptcha: vcRecaptchaService.getResponse($scope.widgetId)}, configService.getEndpoint('update.offer'))\r\n                                .success(function (data, status, headers, config) {\r\n                                    if (!alertService.isAllOk(data)) {\r\n                                        $scope.offerCreationError(data.descriptionEsp);\r\n                                    }\r\n                                    else {\r\n                                        alertService.sendErrorMessage(data.descriptionEsp);\r\n                                        $scope.resetValues();\r\n                                        $scope.customCloseCallback = function () {\r\n                                            offerManager.requestNewestOffers($scope.appliedOfferFilters);\r\n                                        }\r\n                                    }\r\n                                }).error(function (data, status, headers, config) {\r\n                                    $scope.offerCreationError(alertService.getDefaultMessage());\r\n                                }).finally(function () {\r\n                                    $scope.processing = false;\r\n                                });\r\n                            //$scope.overheadDisplay = false;\r\n                        }\r\n                    };\r\n\r\n                    $scope.parseOffer = function () {\r\n                        var theOffer = angular.copy($scope.offer);\r\n                        try {\r\n                            theOffer.originalPrice = parseFloat(theOffer.originalPrice.replace(/,/, '.'));\r\n                        } catch (e) {/*float already*/\r\n                        }\r\n                        try {\r\n                            theOffer.finalPrice = parseFloat(theOffer.finalPrice.replace(/,/, '.'));\r\n                        } catch (e) {/*float already*/\r\n                        }\r\n                        return theOffer;\r\n                    }\r\n\r\n                    $scope.restartRecaptcha = function () {\r\n                        vcRecaptchaService.reload($scope.widgetId);\r\n                    }\r\n\r\n                    $scope.offerCreationError = function (customMessage) {\r\n                        alertService.sendErrorMessage(customMessage);\r\n                        $scope.restartRecaptcha();\r\n                        $scope.customCloseCallback = $scope.displayCallback;\r\n                    }\r\n\r\n                    $scope.bigDecimalsOnly = /^\\-?\\d+((\\.|\\,)\\d+)?$/;\r\n                    $scope.resetValues = function () {\r\n                        $scope.restartRecaptcha();\r\n                        $scope.offer = {};\r\n                        $scope.brandNewCompany = false;\r\n                        $scope.resetCategory = true;\r\n                        $scope.resetCompany = true;\r\n                    };\r\n                    $scope.setWidgetId = function (widgetId) {\r\n                        $scope.widgetId = widgetId;\r\n                    };\r\n\r\n                    $scope.isCompanyDefined = function () {\r\n                        if ($scope.offer) {\r\n                            return $scope.offer.offerCompany != undefined && $scope.selectedcompany != \"\";\r\n                        }\r\n                    };\r\n                    $scope.isCategorySelected = function () {\r\n                        return $scope.offer\r\n                            && $scope.offer.offerCategory != \"\"\r\n                            && $scope.offer.offerCategory != null\r\n                            && $scope.offer.offerCategory != undefined\r\n                            && $scope.offer.offerCategory != \"Categoría\"\r\n                            && $scope.offer.offerCategory != \"CATEGORÍA\";\r\n                    };\r\n                    $scope.selectionPerformed = function () {\r\n                        return $scope.isCompanyDefined() && $scope.isCategorySelected();\r\n                    }\r\n                }]\r\n        }\r\n    });\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/main/webapp/resources/js/offer/offer-creation/ngOfferUpdateDirective.js\n ** module id = 19\n ** module chunks = 0\n **/","/**\r\n * Created by hasiermetal on 16/03/14.\r\n */\r\naporlaofertaApp\r\n    .directive('ngOfferCategoryManager', function () {\r\n        return {\r\n            restrict: 'A',\r\n            templateUrl: 'resources/js/offer/offer-creation/offerCategoryManagement.html',\r\n            scope: {\r\n                reset: '=',\r\n                selectedcategory: '=',\r\n                includeAll: '='\r\n            },\r\n            controller: ['$rootScope', '$scope', 'requestManager', 'configService', function ($rootScope, $scope, requestManager, configService) {\r\n                $scope.offerCategories = {};\r\n                $scope.offerCategory = {\r\n                    text: \"CATEGORÍA\",\r\n                    display: \"Categoría\"\r\n                };\r\n                $scope.populateAllCategories = function () {\r\n                    requestManager.makePostCall({}, {}, configService.getEndpoint('get.offer.categories'))\r\n                        .success(function (data) {\r\n                            $scope.offerCategories = angular.copy(data);\r\n                            if ($scope.includeAll) {\r\n                                $scope.offerCategories.push({text: \"TODAS\", value: \"\", display: \"Todas\"})\r\n                            }\r\n                        }).error(function (data) {\r\n                        var theResponse = {};\r\n                        theResponse.description = data;\r\n                        theResponse.responseResult = \"error\";\r\n                        $rootScope.$broadcast('serverResponse', theResponse);\r\n                    });\r\n                }\r\n                $scope.onCategoryChange = function (category) {\r\n                    $scope.selectedcategory = category;\r\n                }\r\n                $scope.populateAllCategories();\r\n                $scope.$watch('reset', function () {\r\n                    if ($scope.reset) {\r\n                        $scope.offerCategory = {\r\n                            text: \"CATEGORÍA\",\r\n                            display: \"Categoría\"\r\n                        };\r\n                    }\r\n                    $scope.reset = false;\r\n                });\r\n                $scope.$watch('offerCategory', function () {\r\n                    $scope.selectedcategory = $scope.offerCategory.text;\r\n                });\r\n                $scope.isCategorySelected = function () {\r\n                    return $scope.category != \"\"\r\n                        && $scope.category != null\r\n                        && $scope.category != undefined;\r\n                };\r\n            }]\r\n        }\r\n    });\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/main/webapp/resources/js/offer/offer-creation/ngOfferCategoryManagerDirective.js\n ** module id = 20\n ** module chunks = 0\n **/","/**\r\n * Created by hasiermetal on 30/06/15.\r\n */\r\naporlaofertaApp\r\n    .directive('ngOfferFilter', function () {\r\n        return {\r\n            restrict: 'A',\r\n            templateUrl: 'resources/js/offer/offer-filter/offerFilter.html',\r\n            scope: {\r\n                offerList: '=',\r\n                selection: '=',\r\n                offerFilter: '='\r\n            },\r\n            controller: ['$scope', '$rootScope', 'requestManager', 'configService', function ($scope, $rootScope, requestManager, configService) {\r\n                $scope.filter = {};\r\n                $scope.displayFilterContent = \"\";\r\n                $scope.previousCategory = \"\";\r\n\r\n                $scope.requestFilterApply = function () {\r\n                    $scope.processing = true;\r\n                    $scope.filter.hot = $scope.selection === 'hottestOffers';\r\n                    if (!$scope.isCategorySelected()) {\r\n                        $scope.filter.selectedcategory = \"\";\r\n                    }\r\n                    $scope.offerFilter = angular.copy($scope.filter);\r\n                    if ($scope.offerFilter.text.length < 3) {\r\n                        $scope.offerFilter.text = \"\";\r\n                    }\r\n                    $rootScope.$broadcast('appliedOfferFilters', angular.copy($scope.offerFilter));\r\n                    requestManager.makePostCall($scope.offerFilter, {}, configService.getEndpoint('get.filtered.offers'))\r\n                        .success(function (data, status, headers, config) {\r\n                            $scope.offerList = data.theOffers;\r\n                        }).error(function (data, status, headers, config) {\r\n                        var theResponse = {};\r\n                        theResponse.description = data;\r\n                        theResponse.responseResult = \"error\";\r\n                        $rootScope.$broadcast('serverResponse', theResponse);\r\n                    }).finally(function () {\r\n                        $scope.processing = false;\r\n                    });\r\n                };\r\n\r\n                $scope.$watch('filter.dateRange', function () {\r\n                    $scope.requestFilterApply();\r\n                });\r\n\r\n                $scope.searchCriteriaChanged = function () {\r\n                    $scope.offerFilter = angular.copy($scope.filter);\r\n                    if ($scope.filter.text.length > 2 || $scope.filter.text.length == 0) {\r\n                        $scope.requestFilterApply();\r\n                    }\r\n                };\r\n\r\n                $scope.$watch('filter.selectedcategory', function () {\r\n                    if (!($scope.isEmptyCategory($scope.previousCategory) &&\r\n                        $scope.isEmptyCategory($scope.filter.selectedcategory)) &&\r\n                        $scope.previousCategory !== $scope.filter.selectedcategory) {\r\n                        $scope.previousCategory = $scope.filter.selectedcategory;\r\n                        $scope.requestFilterApply();\r\n                    }\r\n                });\r\n\r\n                $scope.cleanFilters = function () {\r\n                    $scope.filter.expired = false;\r\n                    $scope.filter.text = \"\";\r\n                    $scope.resetCategory = true;\r\n                    $scope.filter.selectedcategory = \"\";\r\n                    $scope.filter.selectedcategory = \"\";\r\n                    $scope.filter.dateRange = 1;\r\n//                    $scope.requestFilterApply();\r\n                    $rootScope.$broadcast('appliedOfferFilters', angular.copy($scope.offerFilter));\r\n                };\r\n\r\n                $scope.displayFilterContents = function () {\r\n                    $scope.displayFilterContent = ($scope.displayFilterContent == 'filters-displayed') ?\r\n                        'filters-hidden' : 'filters-displayed';\r\n                };\r\n                $scope.isCategorySelected = function () {\r\n                    return !$scope.isEmptyCategory($scope.filter.selectedcategory);\r\n                };\r\n\r\n                $scope.isEmptyCategory = function (category) {\r\n                    return [\"\", null, undefined, \"Categoría\", \"Todas\", \"CATEGORÍA\", \"TODAS\"].indexOf(category) > -1;\r\n                }\r\n\r\n                $scope.cleanFilters();\r\n            }]\r\n        }\r\n    });\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/main/webapp/resources/js/offer/offer-filter/ngOfferFilterDirective.js\n ** module id = 21\n ** module chunks = 0\n **/","/**\r\n * Created by hasiermetal on 16/03/14.\r\n */\r\naporlaofertaApp\r\n    .directive('ngOverheadDisplay', function () {\r\n        return {\r\n            restrict: 'A',\r\n            templateUrl: 'resources/js/header-display/headDisplay.jsp',\r\n            scope: {\r\n                specificOffer: '@',\r\n                specificOfferData: '@',\r\n                overheadVisible: '=',\r\n                noAccounts: '=',\r\n                fullscreen: '='\r\n            },\r\n            controller: ['$scope', '$window', 'offerManager', '$timeout', '$cookies', 'configService',\r\n                function ($scope, $window, $offerManager, $timeout, $cookies, configService) {\r\n                    $scope.customCloseCallback = {};\r\n                    $scope.theResponse = {};\r\n                    $scope.fullscreen = false;\r\n                    $scope.tutorialIsDisplayed = false;\r\n                    $scope.loadingOfferSpecifications = false;\r\n\r\n                    $scope.displayLogin = function () {\r\n                        $scope.setDefaultVisibility();\r\n                        $scope.displayAccountLogin = true;\r\n                        $scope.overheadVisible = true;\r\n                    };\r\n                    $scope.displaySignup = function () {\r\n                        $scope.setDefaultVisibility();\r\n                        $scope.displayAccountCreation = true;\r\n                        $scope.overheadVisible = true;\r\n                    };\r\n                    $scope.displayAccountUpdateForm = function () {\r\n                        $scope.setDefaultVisibility();\r\n                        $scope.displayAccountUpdate = true;\r\n                        $scope.overheadVisible = true;\r\n                    };\r\n                    $scope.displayOfferCreate = function () {\r\n                        $scope.setDefaultVisibility();\r\n                        $scope.displayOfferCreation = true;\r\n                        $scope.overheadVisible = true;\r\n                    };\r\n                    $scope.displayOfferUpdate = function () {\r\n                        $scope.setDefaultVisibility();\r\n                        $scope.displayOfferToBeUpdate = true;\r\n                        $scope.overheadVisible = true;\r\n                    };\r\n                    $scope.displayOfferDetails = function () {\r\n                        $scope.setDefaultVisibility();\r\n                        $scope.displayOfferSpecifications = true;\r\n                        $scope.overheadVisible = true;\r\n                    };\r\n                    $scope.displayOfferLoading = function () {\r\n                        $scope.setDefaultVisibility();\r\n                        $scope.loadingOfferSpecifications = true;\r\n                        $scope.overheadVisible = true;\r\n                    };\r\n                    $scope.displayServerResponse = function () {\r\n                        $scope.setDefaultVisibility();\r\n                        $scope.displayResponseFromServer = true;\r\n                        $scope.overheadVisible = true;\r\n                    }\r\n                    $scope.displayTutorialDiagram = function () {\r\n                        $scope.customCloseCallback = function () {\r\n                            $scope.setTutorialCookie();\r\n                        }\r\n                        $scope.setDefaultVisibility();\r\n                        $scope.displayTutorial = true;\r\n                        $scope.overheadVisible = true;\r\n                        $scope.tutorialIsDisplayed = true;\r\n                    }\r\n                    $scope.setDefaultVisibility = function () {\r\n                        $scope.overheadVisible = false;\r\n                        $scope.displayOfferCreation = false;\r\n                        $scope.displayOfferToBeUpdate = false;\r\n                        $scope.displayAccountLogin = false;\r\n                        $scope.displayAccountCreation = false;\r\n                        $scope.displayAccountUpdate = false;\r\n                        $scope.displayOfferSpecifications = false;\r\n                        $scope.displayResponseFromServer = false;\r\n                        $scope.displayTutorial = false;\r\n                        $scope.tutorialIsDisplayed = false;\r\n                        $scope.loadingOfferSpecifications = false;\r\n                    };\r\n                    $scope.closeOverheadDisplay = function (customCloseCallback) {\r\n                        $scope.setDefaultVisibility();\r\n                        if (typeof customCloseCallback == \"function\") {\r\n                            customCloseCallback();\r\n                            $scope.customCloseCallback = {};\r\n                        }\r\n                    };\r\n                    $scope.$watch('specificOffer', function () {\r\n                        if (/^\\d+$/.exec($scope.specificOffer) != null) {\r\n                            $scope.fullscreen = true;\r\n                            $scope.customCloseCallback = function () {\r\n                                $scope.fullscreen = false;\r\n                            };\r\n                            console.log($scope.specificOfferData);\r\n                            console.log(JSON.parse($scope.specificOfferData));\r\n                            $scope.openOfferSpecifications(JSON.parse($scope.specificOfferData));\r\n                            //$offerManager.showSpecifications($scope.specificOffer);\r\n                        }\r\n                    });\r\n                    $scope.$on('offerSpecifications', function (event, args) {\r\n                        $scope.openOfferSpecifications(args);\r\n                    });\r\n\r\n                    $scope.openOfferSpecifications = function(offerSpecifications){\r\n                        $scope.offerSpecifications = offerSpecifications;\r\n                        $scope.loadingOfferSpecifications = false;\r\n                        $scope.displayOfferDetails();\r\n                        $scope.customCloseCallback = function () {\r\n                            $scope.offerSpecifications = [];\r\n                            $scope.fullscreen = false;\r\n                        }\r\n                    }\r\n\r\n                    $scope.redirectHome = function () {\r\n                        $window.location.href = '/';\r\n                    };\r\n                    $scope.$on('loadingOfferSpecifications', function () {\r\n                        $scope.displayOfferLoading();\r\n                    });\r\n\r\n                    $scope.$on('updateTheOffer', function (event, args) {\r\n                        $scope.offerSpecifications = [args];\r\n                        $scope.customCloseCallback = function () {\r\n                            $scope.displayOfferDetails();\r\n                        }\r\n                        $scope.displayOfferUpdate();\r\n                    });\r\n\r\n                    $scope.$on('serverResponse', function (event, args) {\r\n                        $scope.theResponse = args;\r\n                        $scope.fullscreen = false;\r\n                        $scope.displayServerResponse();\r\n                    });\r\n\r\n                    $scope.$on('displayTutorial', function () {\r\n                        $scope.displayTutorialDiagram();\r\n                    });\r\n\r\n                    $scope.$on('userLoginRequest', function () {\r\n                        $scope.displayLogin();\r\n                    });\r\n\r\n                    $scope.$on('userRegisterRequest', function () {\r\n                        $scope.displaySignup();\r\n                    });\r\n\r\n                    $scope.$on('keydownControl', function (event, args) {\r\n                        var keyDownCode = args;\r\n                        if (keyDownCode == 27) {\r\n                            $scope.justCloseOverheadDisplay();\r\n                        }\r\n                    });\r\n\r\n                    $scope.justCloseOverheadDisplay = function () {\r\n                        $scope.customCloseCallback = {};\r\n                        $scope.closeOverheadDisplay();\r\n                        $scope.fullscreen = false;\r\n                    }\r\n\r\n                    $scope.checkForErrors = function () {\r\n                        if (document.getElementById(\"errorMessage\")) {\r\n                            var errorMessage = document.getElementById(\"errorMessage\").value;\r\n                            if (typeof errorMessage != undefined && errorMessage != '') {\r\n                                var theResponse = {};\r\n                                theResponse.descriptionEsp = errorMessage;\r\n                                theResponse.responseResult = \"error\";\r\n                                $scope.theResponse = theResponse;\r\n                                $scope.displayServerResponse();\r\n                            }\r\n                        }\r\n                    };\r\n\r\n                    $scope.setTutorialCookie = function () {\r\n                        var expireDate = new Date();\r\n                        expireDate.setDate(expireDate.getDate() + 365);\r\n                        $cookies.put(configService.getEndpoint('tutorial.cookie'), 'true', {'expires': expireDate});\r\n                    };\r\n\r\n                    $scope.setDefaultVisibility();\r\n                    $scope.checkForErrors();\r\n\r\n                    $timeout(function () {\r\n                        angular.element($('#overheadSubContainer')).removeClass('hiddencontainer');\r\n                    }, 100);\r\n\r\n                    if (($cookies.get(configService.getEndpoint('tutorial.cookie')) != 'true') && !$scope.specificOffer) {\r\n                        $timeout(function () {\r\n                            $scope.displayTutorialDiagram();\r\n                        }, 2000);\r\n                    }\r\n                }]\r\n        }\r\n    });\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/main/webapp/resources/js/header-display/ngHeadDisplayDirective.js\n ** module id = 22\n ** module chunks = 0\n **/","/**\r\n * Created by hasiermetal on 19/06/16.\r\n */\r\naporlaofertaApp\r\n    .directive('ngHeadAccountAndOfferManagement', ['$window', '$anchorScroll', function ($window, $anchorScroll) {\r\n        return {\r\n            restrict: 'A',\r\n            templateUrl: 'resources/js/header-display/headAccountAndOfferManagement.jsp',\r\n            scope: {\r\n                displayLogin: '=',\r\n                displaySignup: '=',\r\n                displayOfferCreate: '=',\r\n                displayAccountUpdateForm: '='\r\n            },\r\n            link: function ($scope) {\r\n                $scope.shareUrl = \"www.aporlaoferta.com\";\r\n                $scope.shareText = $(\"meta[property='og:description']\").attr(\"content\");\r\n                $scope.scrollPosition = true;\r\n                angular.element($window).bind(\"scroll\", function () {\r\n                    $scope.scrollPosition = this.pageYOffset <= 50;\r\n                    $scope.$apply();\r\n                });\r\n                $scope.toTheTop = function () {\r\n                    $anchorScroll();\r\n                }\r\n            }\r\n        }\r\n    }]);\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/main/webapp/resources/js/header-display/ngHeadAccountAndOfferManagementDirective.js\n ** module id = 23\n ** module chunks = 0\n **/","/**\r\n * Created by hasiermetal on 10/08/16.\r\n */\r\naporlaofertaApp\r\n    .directive('ngMainSlogan', function () {\r\n        return {\r\n            restrict: 'A',\r\n            templateUrl: 'resources/js/header-display/mainSlogan.html',\r\n            controller: ['$scope', '$timeout',\r\n                function ($scope, $timeout) {\r\n                    $timeout(function () {\r\n                        $scope.faded=true;\r\n                    }, 1200);\r\n                }]\r\n        }\r\n    });\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/main/webapp/resources/js/header-display/ngMainSlogan.js\n ** module id = 24\n ** module chunks = 0\n **/","/**\r\n * Created by hasiermetal on 19/06/15.\r\n */\r\naporlaofertaApp\r\n    .directive('ngImageUploader', function () {\r\n        return {\r\n            restrict: 'A',\r\n            scope: {\r\n                finalUrl: '=',\r\n                alreadyUploadedImage: '='\r\n            },\r\n            templateUrl: 'resources/js/uploader/imageUpload.html',\r\n            controller: ['$rootScope', '$scope', 'configService', '$timeout', function ($rootScope, $scope, configService, $timeout) {\r\n                $scope.uploader = {};\r\n                $scope.displayThumbnail = true;\r\n                $scope.invalidSize = false;\r\n                $scope.invalidImage = false;\r\n                $scope.maxImageSize = configService.getEndpoint('max.image.size');\r\n                $scope.alreadyUploadedImage=\"\";\r\n                $scope.fileAdded = function (file) {\r\n                    var fileReader = new FileReader();\r\n                    fileReader.onload = function (event) {\r\n                        var img = new Image();\r\n                        $scope.alreadyUploadedImage=\"\";\r\n                        img.onerror = function () {\r\n                            $scope.displayInvalidImageMessage();\r\n                            return false;\r\n                        };\r\n                        img.onload = function () {\r\n                            if (this.width > $scope.maxImageSize ||\r\n                                this.height > $scope.maxImageSize\r\n                                ) {\r\n                                $scope.displayInvalidImageSizeMessage();\r\n                                return false;\r\n                            }\r\n                            $scope.uploader.flow.upload();\r\n                            $scope.defaultThumbnailView();\r\n                        };\r\n                        img.src = event.target.result;\r\n                    };\r\n                    fileReader.readAsDataURL(file.file);\r\n                };\r\n\r\n                $scope.deleteImage=function(){\r\n                    $scope.alreadyUploadedImage = \"\";\r\n                    $scope.uploader.flow.cancel();\r\n                }\r\n\r\n                $scope.changeImage=function(){\r\n                    $scope.alreadyUploadedImage = \"\";\r\n                }\r\n\r\n                $scope.alreadyUploaded = function () {\r\n                    return $scope.alreadyUploadedImage !== \"\";\r\n                }\r\n\r\n                $scope.defaultThumbnailView = function () {\r\n                    $scope.displayThumbnail = true;\r\n                    $scope.invalidImage = false;\r\n                    $scope.invalidSize = false;\r\n                };\r\n\r\n                $scope.filesIsUploaded = function (message) {\r\n                    var responseResult = JSON.parse(message);\r\n                    if (responseResult.code == 0) {\r\n                        $scope.finalUrl = responseResult.description;\r\n                    }\r\n                    else {\r\n                        $scope.handleUploadError(responseResult);\r\n                    }\r\n                };\r\n                $scope.handleUploadError = function (error) {\r\n                    $rootScope.$broadcast('serverResponse', error);\r\n                };\r\n                $scope.$watch('finalUrl', function (newValue, oldValue) {\r\n                    if (newValue === \"\" || typeof newValue === 'undefined') {\r\n                        $scope.uploader.flow.cancel();\r\n                    }\r\n                });\r\n\r\n                $scope.isInvalidThumbnailShown = function () {\r\n                    return $scope.invalidImage || $scope.invalidSize;\r\n                };\r\n\r\n                $scope.displayInvalidImageSizeMessage = function () {\r\n                    $scope.defaultThumbnailView();\r\n                    $scope.invalidSize = true;\r\n                    $scope.displayThumbnail = false;\r\n                    $timeout(function () {\r\n                        $scope.uploader.flow.cancel();\r\n                    }, 500);\r\n                };\r\n                $scope.displayInvalidImageMessage = function () {\r\n                    $scope.defaultThumbnailView();\r\n                    $scope.invalidImage = true;\r\n                    $scope.displayThumbnail = false;\r\n                    $timeout(function () {\r\n                        $scope.uploader.flow.cancel();\r\n                    }, 500);\r\n                }\r\n            }]\r\n        }\r\n    });\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/main/webapp/resources/js/uploader/ngImageUploadDirective.js\n ** module id = 25\n ** module chunks = 0\n **/","/**\r\n * Created by hasiermetal on 22/06/15.\r\n */\r\naporlaofertaApp\r\n    .directive('ngResponseFromServer', function () {\r\n        return {\r\n            restrict: 'A',\r\n            templateUrl: 'resources/js/response/serverResponse.html',\r\n            scope: {\r\n                theResponse: '='\r\n            }\r\n        }\r\n    });\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/main/webapp/resources/js/response/ngResponseFromServer.js\n ** module id = 26\n ** module chunks = 0\n **/","/**\r\n * Created by hasiermetal on 16/03/14.\r\n */\r\naporlaofertaApp\r\n    .directive('ngSocialMedia', function () {\r\n        return {\r\n            restrict: 'A',\r\n            templateUrl: 'resources/js/social/socialMedia.html',\r\n            scope: {\r\n                shareUrl: '=',\r\n                shareText: '='\r\n            },\r\n            controller: ['$scope',\r\n                function ($scope) {\r\n                    $scope.facebookUrl = \"https://www.facebook.com/sharer/sharer.php?u=\" + $scope.shareUrl;\r\n                    $scope.twitterUrl = \"https://twitter.com/intent/tweet?url=\" +\r\n                        $scope.shareUrl + \"&text=\" + $scope.shareText + \"&via=aporlaoferta\";\r\n                    $scope.googlePlusUrl = \"https://plus.google.com/share?url=\" + $scope.shareUrl\r\n                }]\r\n\r\n        }\r\n    });\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/main/webapp/resources/js/social/ngSocialMediaDirective.js\n ** module id = 27\n ** module chunks = 0\n **/","/**\r\n * Created by hasiermetal on 14/05/16.\r\n */\r\naporlaofertaApp\r\n    .directive('ngRedirectComponents', function () {\r\n        return {\r\n            restrict: 'A',\r\n            templateUrl: 'resources/js/error/redirectComponents.html'\r\n        }\r\n    });\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/main/webapp/resources/js/error/ngRedirectComponents.js\n ** module id = 28\n ** module chunks = 0\n **/","/**\r\n * Created by hasiermetal on 16/03/14.\r\n */\r\naporlaofertaApp\r\n    .directive('ngPasswordForgotten', function () {\r\n        return {\r\n            restrict: 'A',\r\n            templateUrl: 'resources/js/account/password-forgotten/forgottenForm.html',\r\n            scope: {\r\n                uuid: '=',\r\n                nick: '=',\r\n                customCloseCallback: '='\r\n            },\r\n            controller: ['$scope', '$http', 'requestManager', 'configService', 'alertService','$timeout',\r\n                function ($scope, http, requestManager, configService, alertService,$timeout) {\r\n                    $scope.validPassword = /^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d!$%@#£€*?&]{8,}$/;\r\n                    $scope.theUser = {userNickname: $scope.nick, uuid: $scope.uuid};\r\n                    $scope.updatePassword = function (theUser) {\r\n                        $scope.processing=true;\r\n                        requestManager.makePostCall(theUser, {}, configService.getEndpoint('password.forgotten'))\r\n                            .success(function (data, status, headers, config) {\r\n                                $scope.processPasswordResponse(data)\r\n                            }).error(function (data, status, headers, config) {\r\n                                alertService.sendDefaultErrorMessage();\r\n                            }).finally(function(){\r\n                                $scope.processing=false;\r\n                            });\r\n                        $scope.theUser = {userNickname: $scope.nick, uuid: $scope.uuid};\r\n                    }\r\n                    $scope.processPasswordResponse = function (data) {\r\n                        alertService.sendErrorMessage(data.descriptionEsp);\r\n                        if(alertService.isAllOk(data)){\r\n                            $timeout(function () {\r\n                                window.location.replace(\"/\");\r\n                            }, 2000);\r\n                        }\r\n                    }\r\n                }]\r\n        }\r\n    });\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/main/webapp/resources/js/account/password-forgotten/ngPasswordForgottenDirective.js\n ** module id = 29\n ** module chunks = 0\n **/","require(\"./loader.scss\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/main/webapp/resources/sass/loader.js\n ** module id = 30\n ** module chunks = 0\n **/"],"sourceRoot":""}