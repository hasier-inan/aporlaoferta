{"version":3,"sources":["webpack:///bundle.js","webpack:///webpack/bootstrap 95fef287578e19b67565","webpack:///./src/main/webapp/resources/js/request-handler/requestManagerService.js","webpack:///./src/main/webapp/resources/js/config/configService.js","webpack:///./src/main/webapp/resources/js/response/alertService.js","webpack:///./src/main/webapp/resources/js/offer/offer-list/offerManagerService.js","webpack:///./src/main/webapp/resources/js/offer/offer-specifications/offerHelper.js","webpack:///./src/main/webapp/resources/js/main-controller/mainController.js","webpack:///./src/main/webapp/resources/js/account/account-signup/ngAccountCreationDirective.js","webpack:///./src/main/webapp/resources/js/account/account-signup/ngAccountUpdateDirective.js","webpack:///./src/main/webapp/resources/js/account/account-signup/pwdCheck.js","webpack:///./src/main/webapp/resources/js/account/account-signup/accountHelper.js","webpack:///./src/main/webapp/resources/js/account/account-login/ngAccountLoginDirective.js","webpack:///./src/main/webapp/resources/js/account/account-logout/ngAccountLogoutDirective.js","webpack:///./src/main/webapp/resources/js/offer/offer-list/ngOfferListDirective.js","webpack:///./src/main/webapp/resources/js/offer/offer-list/ngPromotionListDirective.js","webpack:///./src/main/webapp/resources/js/offer/offer-specifications/ngOfferSpecifications.js","webpack:///./src/main/webapp/resources/js/header-display/tutorial/ngQuickTutorial.js","webpack:///./src/main/webapp/resources/js/footer/ngFooterDirective.js","webpack:///./src/main/webapp/resources/js/offer/offer-specifications/offer-comments/ngOfferComments.js","webpack:///./src/main/webapp/resources/js/offer/offer-specifications/offer-comments/ngOfferCommentsQuotes.js","webpack:///./src/main/webapp/resources/js/offer/offer-creation/ngOfferCreationDirective.js","webpack:///./src/main/webapp/resources/js/offer/offer-creation/ngOfferUpdateDirective.js","webpack:///./src/main/webapp/resources/js/offer/offer-creation/ngOfferCategoryManagerDirective.js","webpack:///./src/main/webapp/resources/js/offer/offer-filter/ngOfferFilterDirective.js","webpack:///./src/main/webapp/resources/js/offer/offer-filter/ngDummyOfferFilterDirective.js","webpack:///./src/main/webapp/resources/js/header-display/ngHeadDisplayDirective.js","webpack:///./src/main/webapp/resources/js/header-display/ngHeadAccountAndOfferManagementDirective.js","webpack:///./src/main/webapp/resources/js/header-display/ngMainSlogan.js","webpack:///./src/main/webapp/resources/js/uploader/ngImageUploadDirective.js","webpack:///./src/main/webapp/resources/js/response/ngResponseFromServer.js","webpack:///./src/main/webapp/resources/js/social/ngSocialMediaDirective.js","webpack:///./src/main/webapp/resources/js/error/ngRedirectComponents.js","webpack:///./src/main/webapp/resources/js/account/password-forgotten/ngPasswordForgottenDirective.js","webpack:///./src/main/webapp/resources/sass/loader.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","requestManager","angular","service","$http","csrfToken","requestControllerService","initMainController","$","attr","makePostCall","data","params","url","_csrf","method","headers","Content-Type","X-CSRF-TOKEN","getActualToken","configManager","configService","GET_OFFERS_ENDPOINT","GET_HOTTEST_OFFERS_ENDPOINT","GET_OFFER_ENDPOINT","CREATE_OFFER_ENDPOINT","UPDATE_OFFER_ENDPOINT","EXPIRE_OFFER_ENDPOINT","REMOVE_OFFER_ENDPOINT","CREATE_ACCOUNT_ENDPOINT","UPDATE_ACCOUNT_ENDPOINT","BAN_USER","GET_ACCOUNT_DETAILS_ENDPOINT","GET_COMPANIES_ENDPOINT","GET_OFFER_CATEGORIES_ENDPOINT","POSITIVE_FEEDBACK_ENDPOINT","NEGATIVE_FEEDBACK_ENDPOINT","CREATE_COMMENT_ENDPOINT","DELETE_COMMENT_ENDPOINT","QUOTE_COMMENT_ENDPOINT","GET_FILTERED_ENDPOINT","REQUEST_PASSWORD_UPDATE","REQUEST_PASSWORD","TUTORIAL_COOKIE","LAW_COOKIE","IMAGE_MAX_SIZE","getEndpoint","key","configMap","get.offers","get.hottest.offers","get.offer","create.offer","update.offer","expire.offer","remove.offer","create.account","update.account","get.account.details","get.companies","get.offer.categories","ban.user","positive.feedback","negative.feedback","create.comment","delete.comment","quote.comment","get.filtered.offers","password.forgotten","password.forgotten.request","max.image.size","tutorial.cookie","law.cookie","alertManager","$rootScope","alertService","defaultMessage","isAllOk","code","sendErrorMessage","theResponse","descriptionEsp","responseResult","$broadcast","sendDefaultErrorMessage","getDefaultMessage","offerManager","offerManagerController","appliedOfferFilters","requestNewestOffers","offerFilter","copy","hot","requestMoreOffers","undefined","broadcastOfferList","requestHottestOffers","requestUpdatedOffer","success","theOffers","length","$on","event","args","offerList","lastOffer","callback","errorCallback","number","status","config","error","showSpecifications","offerHelper","offerUtils","offerFeedbackStyle","offer","offerFeedback","offerPositiveVote","offerNegativeVote","isEmptyCategory","category","indexOf","parsePrice","price","toString","replace","aporlaofertaApp","controller","$scope","keyHandler","$event","keyCode","time","Date","getTime","element","document","body","bind","minute","refresh","window","location","reload","setTimeout","directive","link","scope","msg","ngConfirmClick","clickAction","confirmedClick","confirm","$eval","flowFactoryProvider","$compileProvider","defaults","target","permanentErrors","maxChunkRetries","chunkRetryInterval","simultaneousUploads","singleFile","aHrefSanitizationWhitelist","restrict","templateUrl","overheadDisplay","customCloseCallback","displayCallback","vcRecaptchaService","accountHelper","theUser","widgetId","publicKey","disableNickname","passwordUpdateRequired","validMail","validPassword","createAccount","getResponse","displayErrorMessageAndDisplayAccount","oldPassword","processing","recaptcha","processAccountResponse","accountDefaultError","userPassword2","restartRecaptcha","accountError","customMessage","setWidgetId","http","getUserDetails","processLogin","resetPassword","userSpecifiedPassword","resetEmail","userSpecifiedEmail","require","elem","attrs","ctrl","firstPassword","pwCheck","add","on","$apply","v","val","$setValidity","accountUtils","trigger","requestPassword","userEmail","accountUpdate","profileOptions","text","value","defaultProfileModel","profileModel","$watch","userAvatar","formSubmit","logoutForm","submit","getElementById","defaultList","moreOffersLoading","showMoreOffers","isCategorySelected","selectedcategory","concat","updateIndex","index","updatedOffer","i","splice","initialiseScrollyButtons","scrolly","speed","displayTutorialModal","theOffer","sharePrefix","sharePrice","offerImage","commentsCustomCloseCallback","votePositive","offerId","sendMessageAndShowSpecifications","sendDefaultErrorMessageAndShowSpecifications","voteNegative","feedback","updateOffer","expireOffer","banUser","nickname","removeOffer","processRegister","customCallback","isDisplayed","$element","$timeout","shareUrl","shareText","refreshTutorial","resize","find","theComments","$filter","quoteActionEnable","qComment","comment","getQuotedComment","comments","quoteAction","isQuoteActionEnabled","writeComment","quoteComment","quotedComment","message","restartCommentTexts","updateViewAndCloseCallback","commentText","deleteComment","description","resetCategory","createOffer","offerCreationError","parseOffer","resetValues","originalPrice","parseFloat","e","finalPrice","bigDecimalsOnly","brandNewCompany","resetImage","isCompanyDefined","offerCompany","companyName","offerCategory","selectionPerformed","offerCompanies","suggest_company","term","q","toLowerCase","trim","results","company","push","label","autocomplete_options","suggest","populateCompanyList","other","resetCompany","selectedcompany","reset","includeAll","offerCategories","display","populateAllCategories","onCategoryChange","selection","filter","displayFilterContent","previousCategory","offerFilterContainer","filterBy","filterByExpiredCheckbox","requestFilterApply","searchCriteriaChanged","cleanFilters","expired","dateRange","displayFilterContents","specificOffer","specificOfferData","overheadVisible","noAccounts","fullscreen","overflowEnabled","$window","$offerManager","$cookies","tutorialIsDisplayed","loadingOfferSpecifications","displayLogin","setDefaultVisibility","displayAccountLogin","displaySignup","displayAccountCreation","displayAccountUpdateForm","displayAccountUpdate","displayOfferCreate","displayOfferCreation","displayOfferUpdate","displayOfferToBeUpdate","displayOfferDetails","displayOfferSpecifications","displayOfferLoading","displayServerResponse","displayResponseFromServer","displayTutorialDiagram","setTutorialCookie","displayTutorial","closeOverheadDisplay","exec","offerSpecifications","RegExp","openOfferSpecifications","JSON","parse","redirectHome","href","keyDownCode","justCloseOverheadDisplay","checkForErrors","errorMessage","expireDate","setDate","getDate","put","expires","removeClass","$anchorScroll","scrollPosition","this","pageYOffset","toTheTop","faded","finalUrl","alreadyUploadedImage","uploader","displayThumbnail","invalidSize","invalidImage","maxImageSize","fileAdded","file","fileReader","FileReader","onload","img","Image","onerror","displayInvalidImageMessage","width","height","displayInvalidImageSizeMessage","flow","upload","defaultThumbnailView","src","result","readAsDataURL","deleteImage","cancel","changeImage","alreadyUploaded","filesIsUploaded","handleUploadError","newValue","oldValue","isInvalidThumbnailShown","facebookUrl","twitterUrl","encodeURIComponent","googlePlusUrl","whatsappHref","buildWhatsappUrl","uuid","nick","userNickname","track","updatePassword","processPasswordResponse"],"mappings":"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","file":"bundle.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t__webpack_require__(1);\n\t__webpack_require__(2);\n\t__webpack_require__(3);\n\t__webpack_require__(4);\n\t__webpack_require__(5);\n\t__webpack_require__(6);\n\t__webpack_require__(7);\n\t__webpack_require__(8);\n\t__webpack_require__(9);\n\t__webpack_require__(10);\n\t__webpack_require__(11);\n\t__webpack_require__(12);\n\t__webpack_require__(13);\n\t__webpack_require__(14);\n\t__webpack_require__(15);\n\t__webpack_require__(16);\n\t__webpack_require__(17);\n\t__webpack_require__(18);\n\t__webpack_require__(19);\n\t__webpack_require__(20);\n\t__webpack_require__(21);\n\t__webpack_require__(22);\n\t__webpack_require__(23);\n\t__webpack_require__(24);\n\t__webpack_require__(25);\n\t__webpack_require__(26);\n\t__webpack_require__(27);\n\t__webpack_require__(28);\n\t__webpack_require__(29);\n\t__webpack_require__(30);\n\t__webpack_require__(31);\n\t__webpack_require__(32);\n\tmodule.exports = __webpack_require__(33);\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\tvar requestManager = angular.module('requestManager', []);\r\n\t\r\n\trequestManager.service('requestManager', ['$http',\r\n\t    function ($http) {\r\n\t        var requestControllerService = {};\r\n\t        var csrfToken;\r\n\t        requestControllerService.initMainController = function () {\r\n\t            csrfToken = $(\"meta[name='_csrf']\").attr(\"content\");\r\n\t        };\r\n\t        requestControllerService.makePostCall=function(data, params, url){\r\n\t            params._csrf= csrfToken;\r\n\t            return $http({\r\n\t                method: 'POST',\r\n\t                url: url,\r\n\t                headers: {\r\n\t                    'Content-Type': 'application/json',\r\n\t                    'X-CSRF-TOKEN': csrfToken\r\n\t                },\r\n\t                params: params,\r\n\t                data: data\r\n\t            });\r\n\t        };\r\n\t        requestControllerService.getActualToken=function(){\r\n\t            return csrfToken;\r\n\t        }\r\n\t        requestControllerService.initMainController();\r\n\t        return requestControllerService;\r\n\t    }]);\r\n\t\r\n\t\r\n\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\tvar configManager = angular.module('configService', []);\r\n\t\r\n\tconfigManager.service('configService', [function () {\r\n\t    var configService = {};\r\n\t    var GET_OFFERS_ENDPOINT = \"getOffers\";\r\n\t    var GET_HOTTEST_OFFERS_ENDPOINT = \"getHottestOffers\";\r\n\t    var GET_OFFER_ENDPOINT = \"getOffer\";\r\n\t    var CREATE_OFFER_ENDPOINT = \"createOffer\";\r\n\t    var UPDATE_OFFER_ENDPOINT = \"updateOffer\";\r\n\t    var EXPIRE_OFFER_ENDPOINT = \"expireOffer\";\r\n\t    var REMOVE_OFFER_ENDPOINT = \"removeOffer\";\r\n\t    var CREATE_ACCOUNT_ENDPOINT = \"createUser\";\r\n\t    var UPDATE_ACCOUNT_ENDPOINT = \"updateUser\";\r\n\t    var BAN_USER = \"banUser\";\r\n\t    var GET_ACCOUNT_DETAILS_ENDPOINT = \"accountDetails\";\r\n\t    var GET_COMPANIES_ENDPOINT = \"companyList\";\r\n\t    var GET_OFFER_CATEGORIES_ENDPOINT = \"getOfferCategories\";\r\n\t    var POSITIVE_FEEDBACK_ENDPOINT = \"votePositive\";\r\n\t    var NEGATIVE_FEEDBACK_ENDPOINT = \"voteNegative\";\r\n\t    var CREATE_COMMENT_ENDPOINT = \"createComment\";\r\n\t    var DELETE_COMMENT_ENDPOINT = \"deleteComment\";\r\n\t    var QUOTE_COMMENT_ENDPOINT = \"quoteComment\";\r\n\t    var GET_FILTERED_ENDPOINT = \"getFilteredOffers\";\r\n\t    var REQUEST_PASSWORD_UPDATE = \"forgottenPassword\";\r\n\t    var REQUEST_PASSWORD = \"requestForgottenPassword\";\r\n\t    var TUTORIAL_COOKIE = \"aporlaoferta-tut\";\r\n\t    var LAW_COOKIE = \"aporlaoferta-cle\";\r\n\t    var IMAGE_MAX_SIZE = 4500;\r\n\t    configService.getEndpoint = function (key) {\r\n\t        return configMap[key];\r\n\t    };\r\n\t    var configMap = {\r\n\t        'get.offers': GET_OFFERS_ENDPOINT,\r\n\t        'get.hottest.offers': GET_HOTTEST_OFFERS_ENDPOINT,\r\n\t        'get.offer': GET_OFFER_ENDPOINT,\r\n\t        'create.offer': CREATE_OFFER_ENDPOINT,\r\n\t        'update.offer': UPDATE_OFFER_ENDPOINT,\r\n\t        'expire.offer': EXPIRE_OFFER_ENDPOINT,\r\n\t        'remove.offer': REMOVE_OFFER_ENDPOINT,\r\n\t        'create.account': CREATE_ACCOUNT_ENDPOINT,\r\n\t        'update.account': UPDATE_ACCOUNT_ENDPOINT,\r\n\t        'get.account.details': GET_ACCOUNT_DETAILS_ENDPOINT,\r\n\t        'get.companies': GET_COMPANIES_ENDPOINT,\r\n\t        'get.offer.categories': GET_OFFER_CATEGORIES_ENDPOINT,\r\n\t        'ban.user': BAN_USER,\r\n\t        'positive.feedback': POSITIVE_FEEDBACK_ENDPOINT,\r\n\t        'negative.feedback': NEGATIVE_FEEDBACK_ENDPOINT,\r\n\t        'create.comment': CREATE_COMMENT_ENDPOINT,\r\n\t        'delete.comment': DELETE_COMMENT_ENDPOINT,\r\n\t        'quote.comment': QUOTE_COMMENT_ENDPOINT,\r\n\t        'get.filtered.offers': GET_FILTERED_ENDPOINT,\r\n\t        'password.forgotten': REQUEST_PASSWORD_UPDATE,\r\n\t        'password.forgotten.request': REQUEST_PASSWORD,\r\n\t        'max.image.size': IMAGE_MAX_SIZE,\r\n\t        'tutorial.cookie':TUTORIAL_COOKIE,\r\n\t        'law.cookie':LAW_COOKIE\r\n\t    };\r\n\t    return configService;\r\n\t}]);\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\tvar alertManager = angular.module('alertService', []);\r\n\t\r\n\talertManager.service('alertService', ['$rootScope', function ($rootScope) {\r\n\t    var alertService = {};\r\n\t    var defaultMessage = \"No se ha podido ejecutar la operación\";\r\n\t    alertService.isAllOk = function (data) {\r\n\t        return data.code == 0;\r\n\t    }\r\n\t    alertService.sendErrorMessage = function (data) {\r\n\t        var theResponse = {};\r\n\t        theResponse.descriptionEsp = data;\r\n\t        theResponse.responseResult = \"error\";\r\n\t        $rootScope.$broadcast('serverResponse', theResponse);\r\n\t    };\r\n\t    alertService.sendDefaultErrorMessage = function () {\r\n\t        var theResponse = {};\r\n\t        theResponse.descriptionEsp = alertService.getDefaultMessage();\r\n\t        theResponse.responseResult = \"error\";\r\n\t        $rootScope.$broadcast('serverResponse', theResponse);\r\n\t    }\r\n\t    alertService.getDefaultMessage = function () {\r\n\t        return defaultMessage;\r\n\t        ;\r\n\t    }\r\n\t    return alertService;\r\n\t}]);\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\tvar offerManager = angular.module('offerManager', []);\r\n\t\r\n\tofferManager.service('offerManager', ['$rootScope', 'alertService', 'requestManager', 'configService',\r\n\t    function ($rootScope, alertService, requestManager, configService) {\r\n\t        var offerManagerController = {};\r\n\t        offerManagerController.appliedOfferFilters = {};\r\n\t\r\n\t        offerManagerController.requestNewestOffers = function () {\r\n\t            var offerFilter = angular.copy(offerManagerController.appliedOfferFilters);\r\n\t            offerFilter.hot = false;\r\n\t            offerManagerController.requestMoreOffers(offerFilter, undefined, offerManagerController.broadcastOfferList,\r\n\t                function () {\r\n\t                });\r\n\t        }\r\n\t\r\n\t        offerManagerController.requestHottestOffers = function () {\r\n\t            var offerFilter = angular.copy(offerManagerController.appliedOfferFilters);\r\n\t            offerFilter.hot = true;\r\n\t            offerManagerController.requestMoreOffers(offerFilter, undefined, offerManagerController.broadcastOfferList,\r\n\t                function () {\r\n\t                });\r\n\t        }\r\n\t\r\n\t        offerManagerController.requestUpdatedOffer = function (id) {\r\n\t            requestManager.makePostCall({}, {'id': id}, configService.getEndpoint('get.offer'))\r\n\t                .success(function (data) {\r\n\t                    if (alertService.isAllOk(data) && data.theOffers.length>0) {\r\n\t                        $rootScope.$broadcast('updatedOffer', data.theOffers[0]);\r\n\t                    }\r\n\t                });\r\n\t        }\r\n\t\r\n\t        $rootScope.$on('appliedOfferFilters', function (event, args) {\r\n\t            offerManagerController.appliedOfferFilters = args;\r\n\t        });\r\n\t\r\n\t        offerManagerController.broadcastOfferList = function (offerList) {\r\n\t            $rootScope.$broadcast('offerList', offerList);\r\n\t        }\r\n\t\r\n\t        offerManagerController.requestMoreOffers = function (offerFilter, lastOffer, callback, errorCallback) {\r\n\t            requestManager.makePostCall(offerFilter, {'number': lastOffer}, configService.getEndpoint('get.filtered.offers'))\r\n\t                .success(function (data, status, headers, config) {\r\n\t                    callback(data.theOffers);\r\n\t                    //$rootScope.$broadcast('offerList', data.theOffers);\r\n\t                }).error(function (data, status, headers, config) {\r\n\t                alertService.sendDefaultErrorMessage();\r\n\t                errorCallback();\r\n\t            });\r\n\t        }\r\n\t        offerManagerController.showSpecifications = function (id) {\r\n\t            $rootScope.$broadcast('loadingOfferSpecifications');\r\n\t            requestManager.makePostCall({}, {'id': id}, configService.getEndpoint('get.offer'))\r\n\t                .success(function (data, status, headers, config) {\r\n\t                    if (alertService.isAllOk(data)) {\r\n\t                        $rootScope.$broadcast('offerSpecifications', data.theOffers);\r\n\t                    }\r\n\t                    else {\r\n\t                        alertService.sendErrorMessage(data.descriptionEsp);\r\n\t                    }\r\n\t                }).error(function (data, status, headers, config) {\r\n\t                alertService.sendDefaultErrorMessage();\r\n\t            });\r\n\t        }\r\n\t        return offerManagerController;\r\n\t    }]);\r\n\t\r\n\t\r\n\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\n\tvar offerHelper = angular.module('offerHelper', []);\r\n\t\r\n\tofferHelper.service('offerHelper', [\r\n\t    function () {\r\n\t        var offerUtils = {};\r\n\t\r\n\t        offerUtils.offerFeedbackStyle = function (offer) {\r\n\t            if (offer) {\r\n\t                var offerFeedback = offer.offerPositiveVote - offer.offerNegativeVote;\r\n\t                if (offerFeedback > 0 && offerFeedback <= 100) {\r\n\t                    return 'hotFeedback';\r\n\t                }\r\n\t                else if (offerFeedback > 100) {\r\n\t                    return 'veryHotFeedback';\r\n\t                }\r\n\t                else if (offerFeedback < 0) {\r\n\t                    return 'coldFeedback';\r\n\t                }\r\n\t            }\r\n\t            return 'neutralFeedback';\r\n\t        }\r\n\t\r\n\t        offerUtils.isEmptyCategory = function (category) {\r\n\t            return [\"\", null, undefined, \"Categoría\", \"Todas\", \"CATEGORÍA\", \"TODAS\"].indexOf(category) > -1;\r\n\t        }\r\n\t\r\n\t        offerUtils.parsePrice = function (price) {\r\n\t            if (price || price == 0) {\r\n\t                return price.toString().replace(/\\./, ',');\r\n\t            }\r\n\t        }\r\n\t\r\n\t        return offerUtils;\r\n\t    }]);\r\n\t\r\n\t\r\n\n\n/***/ },\n/* 6 */\n/***/ function(module, exports) {\n\n\t/**\r\n\t * Created by hasiermetal on 16/03/15.\r\n\t */\r\n\taporlaofertaApp = angular.module('aPorLaOferta', [\r\n\t    'angular.filter',\r\n\t    'requestManager',\r\n\t    'alertService',\r\n\t    'configService',\r\n\t    'flow',\r\n\t    'ngAnimate',\r\n\t    'vcRecaptcha',\r\n\t    'offerManager',\r\n\t    'offerHelper',\r\n\t    'accountHelper',\r\n\t    'pwCheckModule',\r\n\t    'ngMessages',\r\n\t    'ngDropdowns',\r\n\t    'ngSanitize',\r\n\t    'MassAutoComplete',\r\n\t    'truncate',\r\n\t    'angular-cookie-law',\r\n\t    'ngCookies',\r\n\t    'slick'\r\n\t]);\r\n\t\r\n\t//main controller\r\n\taporlaofertaApp.controller('APorLaOfertaController', ['$scope', '$rootScope', function ($scope, $rootScope) {\r\n\t    $scope.keyHandler = function ($event) {\r\n\t        $rootScope.$broadcast('keydownControl', $event.keyCode);\r\n\t    };\r\n\t\r\n\t    $scope.time = new Date().getTime();\r\n\t    angular.element(document.body).bind(\"mousemove keypress\", function () {\r\n\t        $scope.time = new Date().getTime();\r\n\t    });\r\n\t    $scope.minute = 60000;\r\n\t    $scope.refresh = function () {\r\n\t        (new Date().getTime() - $scope.time >= 20 * $scope.minute) ? window.location.reload() : setTimeout($scope.refresh, 10 * $scope.minute);\r\n\t    }\r\n\t    setTimeout($scope.refresh, 10 * $scope.minute);\r\n\t}]);\r\n\t\r\n\taporlaofertaApp.directive('ngConfirmClick', [\r\n\t    function () {\r\n\t        return {\r\n\t            link: function (scope, element, attr) {\r\n\t                var msg = attr.ngConfirmClick || \"\";\r\n\t                var clickAction = attr.confirmedClick;\r\n\t                element.bind('click', function (event) {\r\n\t                    if (window.confirm(msg)) {\r\n\t                        scope.$eval(clickAction)\r\n\t                    }\r\n\t                });\r\n\t            }\r\n\t        };\r\n\t    }]);\r\n\t\r\n\taporlaofertaApp.config(['flowFactoryProvider', '$compileProvider',\r\n\t    function (flowFactoryProvider, $compileProvider) {\r\n\t    flowFactoryProvider.defaults = {\r\n\t        target: 'uploadImage',\r\n\t        permanentErrors: [404, 500, 501],\r\n\t        maxChunkRetries: 1,\r\n\t        chunkRetryInterval: 5000,\r\n\t        simultaneousUploads: 4,\r\n\t        singleFile: true\r\n\t    };\r\n\t        $compileProvider.aHrefSanitizationWhitelist(/^\\s*(https?|mailto|whatsapp):/);\r\n\t\r\n\t}]);\n\n/***/ },\n/* 7 */\n/***/ function(module, exports) {\n\n\t/**\r\n\t * Created by hasiermetal on 16/03/14.\r\n\t */\r\n\taporlaofertaApp\r\n\t    .directive('ngAccountCreation', function () {\r\n\t        return {\r\n\t            restrict: 'A',\r\n\t            templateUrl: 'resources/js/account/account-signup/createAccount.jsp',\r\n\t            scope: {\r\n\t                overheadDisplay: '=',\r\n\t                customCloseCallback: '=',\r\n\t                displayCallback: '='\r\n\t            },\r\n\t            controller: ['$scope', 'requestManager', 'configService', 'vcRecaptchaService', 'alertService','accountHelper',\r\n\t                function ($scope, requestManager, configService, vcRecaptchaService, alertService,accountHelper) {\r\n\t                    $scope.theUser = {};\r\n\t                    $scope.widgetId = null;\r\n\t                    $scope.publicKey = \"6LdqHQoTAAAAAAht2VhkrLGU26eBOjL-nK9zXxcn\";\r\n\t                    $scope.disableNickname = false;\r\n\t                    $scope.passwordUpdateRequired = true;\r\n\t                    $scope.validMail = accountHelper.validMail;\r\n\t                    $scope.validPassword = accountHelper.validPassword;\r\n\t                    $scope.createAccount = function (theUser) {\r\n\t                        if (vcRecaptchaService.getResponse($scope.widgetId) === \"\") {\r\n\t                            $scope.displayErrorMessageAndDisplayAccount();\r\n\t                        }\r\n\t                        else {\r\n\t                            delete $scope.theUser.oldPassword;\r\n\t                            $scope.processing = true;\r\n\t                            requestManager.makePostCall(theUser, {recaptcha: vcRecaptchaService.getResponse($scope.widgetId)}, configService.getEndpoint('create.account'))\r\n\t                                .success(function (data) {\r\n\t                                    $scope.processAccountResponse(data);\r\n\t                                }).error(function () {\r\n\t                                    $scope.accountDefaultError();\r\n\t                                }).finally(function () {\r\n\t                                    $scope.processing = false;\r\n\t                                });\r\n\t                            $scope.theUser = {};\r\n\t                            $scope.userPassword2 = \"\";\r\n\t                            //$scope.overheadDisplay = false;\r\n\t                        }\r\n\t                    }\r\n\t                    $scope.displayErrorMessageAndDisplayAccount = function () {\r\n\t                        alertService.sendErrorMessage(\"Por favor, haga click en el captcha para demostrar que no es un robot\");\r\n\t                        $scope.restartRecaptcha();\r\n\t                        $scope.customCloseCallback = $scope.displayCallback;\r\n\t                    }\r\n\t                    $scope.processAccountResponse = function (data) {\r\n\t                        if (!alertService.isAllOk(data)) {\r\n\t                            $scope.accountError(data.descriptionEsp);\r\n\t                        }\r\n\t                        else {\r\n\t                            alertService.sendErrorMessage(data.descriptionEsp);\r\n\t                            $scope.customCloseCallback = false;\r\n\t                        }\r\n\t                        $scope.restartRecaptcha();\r\n\t                    }\r\n\t                    $scope.restartRecaptcha = function () {\r\n\t                        vcRecaptchaService.reload($scope.widgetId);\r\n\t                    }\r\n\t\r\n\t                    $scope.accountDefaultError = function () {\r\n\t                        alertService.sendDefaultErrorMessage();\r\n\t                        vcRecaptchaService.reload($scope.widgetId);\r\n\t                        $scope.customCloseCallback = $scope.displayCallback;\r\n\t                    }\r\n\t\r\n\t                    $scope.accountError = function (customMessage) {\r\n\t                        alertService.sendErrorMessage(customMessage);\r\n\t                        $scope.restartRecaptcha();\r\n\t                        $scope.customCloseCallback = $scope.displayCallback;\r\n\t                    };\r\n\t\r\n\t                    $scope.setWidgetId = function (widgetId) {\r\n\t                        $scope.widgetId = widgetId;\r\n\t                    };\r\n\t                }]\r\n\t        }\r\n\t    });\n\n/***/ },\n/* 8 */\n/***/ function(module, exports) {\n\n\t/**\r\n\t * Created by hasiermetal on 22/06/15.\r\n\t */\r\n\taporlaofertaApp\r\n\t    .directive('ngAccountUpdate', function () {\r\n\t        return {\r\n\t            restrict: 'A',\r\n\t            templateUrl: 'resources/js/account/account-signup/createAccount.jsp',\r\n\t            scope: {\r\n\t                overheadDisplay: '=',\r\n\t                customCloseCallback: '=',\r\n\t                displayCallback: '='\r\n\t            },\r\n\t            controller: ['$scope', 'vcRecaptchaService', 'alertService', '$http', 'requestManager', 'configService', '$rootScope','accountHelper',\r\n\t                function ($scope, vcRecaptchaService, alertService, http, requestManager, configService, $rootScope,accountHelper) {\r\n\t                    $scope.disableNickname = true;\r\n\t                    $scope.theUser = {};\r\n\t                    $scope.widgetId = null;\r\n\t                    $scope.passwordUpdateRequired = false;\r\n\t                    $scope.validMail = accountHelper.validMail;\r\n\t                    $scope.validPassword = accountHelper.validPassword;\r\n\t                    $scope.publicKey = \"6LdqHQoTAAAAAAht2VhkrLGU26eBOjL-nK9zXxcn\";\r\n\t                    $scope.createAccount = function (theUser) {\r\n\t                        if (vcRecaptchaService.getResponse($scope.widgetId) === \"\") {\r\n\t                            $scope.displayErrorMessageAndDisplayAccount();\r\n\t                        }\r\n\t                        else {\r\n\t                            $scope.processing = true;\r\n\t                            requestManager.makePostCall(theUser, {recaptcha: vcRecaptchaService.getResponse($scope.widgetId)}, configService.getEndpoint('update.account'))\r\n\t                                .success(function (data) {\r\n\t                                    if ($scope.processAccountResponse(data)) {\r\n\t                                        $rootScope.$broadcast('userAvatar', angular.copy(theUser));\r\n\t                                    }\r\n\t                                }).error(function () {\r\n\t                                    $scope.accountDefaultError();\r\n\t                                })\r\n\t                                .finally(function () {\r\n\t                                    $scope.processing = false;\r\n\t                                    $scope.getUserDetails();\r\n\t                                    $scope.passwordUpdateRequired = false;\r\n\t                                });\r\n\t                            //$scope.theUser = {};\r\n\t                            //$scope.overheadDisplay = false;\r\n\t                        }\r\n\t                    }\r\n\t\r\n\t                    $scope.processLogin = function(){\r\n\t                        $rootScope.$broadcast('userLoginRequest');\r\n\t                    }\r\n\t\r\n\t                    $scope.getUserDetails = function () {\r\n\t                        requestManager.makePostCall({}, {}, configService.getEndpoint('get.account.details'))\r\n\t                            .success(function (data, status, headers, config) {\r\n\t                                $scope.theUser = data;\r\n\t                            }).error(function (data, status, headers, config) {\r\n\t                                alertService.sendErrorMessage(\"No se ha podido obtener la información del usuario\");\r\n\t                                $scope.customCloseCallback = false;\r\n\t                            });\r\n\t                    }\r\n\t                    $scope.getUserDetails();\r\n\t\r\n\t                    $scope.resetPassword=function(){\r\n\t                        $scope.theUser.oldPassword=null;\r\n\t                        $scope.theUser.userSpecifiedPassword=null;\r\n\t                        $scope.userPassword2=null;\r\n\t                    }\r\n\t                    $scope.resetEmail=function(){\r\n\t                        $scope.theUser.userSpecifiedEmail=null;\r\n\t                    }\r\n\t\r\n\t                    $scope.displayErrorMessageAndDisplayAccount = function () {\r\n\t                        alertService.sendErrorMessage(\"Por favor, haga click en el captcha para demostrar que no es un robot\");\r\n\t                        $scope.restartRecaptcha();\r\n\t                        $scope.customCloseCallback = $scope.displayCallback;\r\n\t                    }\r\n\t                    $scope.processAccountResponse = function (data) {\r\n\t                        if (!alertService.isAllOk(data)) {\r\n\t                            $scope.accountError(data.descriptionEsp);\r\n\t                        }\r\n\t                        else {\r\n\t                            alertService.sendErrorMessage(data.descriptionEsp);\r\n\t                            return true;\r\n\t                        }\r\n\t                        $scope.restartRecaptcha();\r\n\t                        return false;\r\n\t                    }\r\n\t\r\n\t                    $scope.accountDefaultError = function () {\r\n\t                        alertService.sendDefaultErrorMessage();\r\n\t                        $scope.restartRecaptcha();\r\n\t                        $scope.customCloseCallback = $scope.displayCallback;\r\n\t                    }\r\n\t\r\n\t                    $scope.accountError = function (customMessage) {\r\n\t                        alertService.sendErrorMessage(customMessage);\r\n\t                        $scope.restartRecaptcha();\r\n\t                        $scope.customCloseCallback = $scope.displayCallback;\r\n\t                    }\r\n\t                    $scope.setWidgetId = function (widgetId) {\r\n\t                        $scope.widgetId = widgetId;\r\n\t                    };\r\n\t                    $scope.restartRecaptcha = function () {\r\n\t                        vcRecaptchaService.reload($scope.widgetId);\r\n\t                    }\r\n\t                }]\r\n\t        }\r\n\t    });\n\n/***/ },\n/* 9 */\n/***/ function(module, exports) {\n\n\tangular.module('pwCheckModule', [])\r\n\t    .directive('pwCheck', [function () {\r\n\t        return {\r\n\t            require: 'ngModel',\r\n\t            link: function (scope, elem, attrs, ctrl) {\r\n\t                var firstPassword = '#' + attrs.pwCheck;\r\n\t                elem.add(firstPassword).on('keyup', function () {\r\n\t                    scope.$apply(function () {\r\n\t                        var v = elem.val()===$(firstPassword).val();\r\n\t                        ctrl.$setValidity('pwmatch', v);\r\n\t                    });\r\n\t                });\r\n\t            }\r\n\t        }\r\n\t    }]);\n\n/***/ },\n/* 10 */\n/***/ function(module, exports) {\n\n\tvar accountHelper = angular.module('accountHelper', []);\r\n\t\r\n\taccountHelper.service('accountHelper', [\r\n\t    function () {\r\n\t        var accountUtils = {};\r\n\t\r\n\t        accountUtils.validMail = /^[_a-z0-9-]+(\\.[_a-z0-9-]+)*(\\+[a-z0-9-]+)?@[a-z]+\\.[a-z.]{2,5}$/;\r\n\t        accountUtils.validPassword = /^(?=.*?)(?=.*?[a-z])(?=.*?[0-9])(?=.*?).{8,}$/;\r\n\t\r\n\t        return accountUtils;\r\n\t    }]);\r\n\t\r\n\t\r\n\n\n/***/ },\n/* 11 */\n/***/ function(module, exports) {\n\n\t/**\r\n\t * Created by hasiermetal on 16/03/14.\r\n\t */\r\n\taporlaofertaApp\r\n\t    .directive('ngAccountLogin', function () {\r\n\t        return {\r\n\t            restrict: 'A',\r\n\t            templateUrl: 'view/login.jsp',\r\n\t            controller: ['$scope', 'requestManager', 'configService', 'alertService',\r\n\t                function ($scope, requestManager, configService, alertService) {\r\n\t                    $scope.validMail = /^[_a-z0-9-]+(\\.[_a-z0-9-]+)*(\\+[a-z0-9-]+)?@[a-z]+\\.[a-z.]{2,5}$/;\r\n\t                    $scope.processLogin=function(){\r\n\t                        $scope.processing=true;\r\n\t                        angular.element('#loginForm').trigger('submit');\r\n\t                    }\r\n\t\r\n\t                    $scope.requestPassword = function (userEmail) {\r\n\t                        $scope.processing = true;\r\n\t\r\n\t                        requestManager.makePostCall(userEmail, {userEmail: userEmail}, configService.getEndpoint('password.forgotten.request'))\r\n\t                            .success(function (data, status, headers, config) {\r\n\t                                $scope.processAccountResponse(data);\r\n\t                            }).error(function (data, status, headers, config) {\r\n\t                                $scope.accountDefaultError();\r\n\t                            }).finally(function () {\r\n\t                                $scope.processing = false;\r\n\t                            });\r\n\t                    }\r\n\t\r\n\t                    $scope.processAccountResponse = function (data) {\r\n\t                        alertService.sendErrorMessage(data.descriptionEsp);\r\n\t                        if ($scope.restartRecaptcha) {\r\n\t                            $scope.restartRecaptcha();\r\n\t                        }\r\n\t                    }\r\n\t\r\n\t                    $scope.accountDefaultError = function () {\r\n\t                        alertService.sendDefaultErrorMessage();\r\n\t                    }\r\n\t\r\n\t                }]\r\n\t        }\r\n\t    });\n\n/***/ },\n/* 12 */\n/***/ function(module, exports) {\n\n\t/**\r\n\t * Created by hasiermetal on 16/03/14.\r\n\t */\r\n\taporlaofertaApp\r\n\t    .directive('ngAccountLogout', function () {\r\n\t        return {\r\n\t            restrict: 'A',\r\n\t            templateUrl: 'resources/js/account/account-logout/profile.jsp',\r\n\t            scope: {\r\n\t                accountUpdate: '='\r\n\t            },\r\n\t            controller: ['$scope', 'alertService', 'requestManager', 'configService', function ($scope, alertService, requestManager, configService) {\r\n\t                $scope.profileOptions = [\r\n\t                    {text: 'Actualizar perfil', value: 'accountUpdate'},\r\n\t                    {text: 'Cerrar sesión', value: 'formSubmit'}\r\n\t                ];\r\n\t                $scope.defaultProfileModel = {\r\n\t                    text: \"Opciones\"\r\n\t                };\r\n\t                $scope.profileModel = angular.copy($scope.defaultProfileModel);\r\n\t\r\n\t                $scope.$watch('profileModel', function () {\r\n\t                    if ($scope.profileModel.text !== \"Opciones\") {\r\n\t                        $scope[$scope.profileModel.value]();\r\n\t                        $scope.profileModel = angular.copy($scope.defaultProfileModel);\r\n\t                    }\r\n\t                });\r\n\t\r\n\t                $scope.getUserDetails = function () {\r\n\t                    requestManager.makePostCall({}, {}, configService.getEndpoint('get.account.details'))\r\n\t                        .success(function (data) {\r\n\t                            $scope.userAvatar = data.userAvatar;\r\n\t                        }).error(function () {\r\n\t                            alertService.sendErrorMessage(\"No se ha podido obtener la información del usuario\");\r\n\t                            $scope.customCloseCallback = false;\r\n\t                        });\r\n\t                }\r\n\t\r\n\t\r\n\t                $scope.getUserDetails();\r\n\t\r\n\t                $scope.formSubmit = function () {\r\n\t                    $scope.logoutForm.submit();\r\n\t                }\r\n\t\r\n\t                $scope.$on('userAvatar', function (event, args) {\r\n\t                    $scope.userAvatar = args.userAvatar;\r\n\t                });\r\n\t\r\n\t                $scope.formSubmit = function () {\r\n\t                    document.getElementById(\"logoutForm\").submit();\r\n\t                }\r\n\t            }]\r\n\t        }\r\n\t    });\r\n\n\n/***/ },\n/* 13 */\n/***/ function(module, exports) {\n\n\t/**\r\n\t * Created by hasiermetal on 16/03/14.\r\n\t */\r\n\taporlaofertaApp\r\n\t    .directive('ngOfferList', function () {\r\n\t        return {\r\n\t            restrict: 'A',\r\n\t            templateUrl: 'resources/js/offer/offer-list/offerList.html',\r\n\t            scope: {\r\n\t                defaultList: '='\r\n\t            },\r\n\t            controller: ['$scope', 'offerManager', 'offerHelper',\r\n\t                function ($scope, offerManager,offerHelper) {\r\n\t                    $scope.offerList = [];\r\n\t                    $scope.moreOffersLoading = true;\r\n\t                    $scope.lastOffer = 0;\r\n\t\r\n\t                    $scope.showMoreOffers = function (lastOffer) {\r\n\t                        $scope.moreOffersLoading = true;\r\n\t                        $scope.offerFilter.hot = $scope.defaultList === 'hottestOffers';\r\n\t                        if (!$scope.isCategorySelected()) {\r\n\t                            $scope.offerFilter.selectedcategory = \"\";\r\n\t                        }\r\n\t                        offerManager.requestMoreOffers($scope.offerFilter, lastOffer,\r\n\t                            function (data) {\r\n\t                                $scope.offerList = $scope.offerList.concat(data);\r\n\t                                $scope.moreOffersLoading = false;\r\n\t                            }, function () {\r\n\t                                $scope.moreOffersLoading = false;\r\n\t                            });\r\n\t                    }\r\n\t\r\n\t                    $scope.updateIndex = function (index) {\r\n\t                        $scope.lastOffer = index;\r\n\t                    }\r\n\t\r\n\t                    $scope.$on('offerList', function (event, args) {\r\n\t                        $scope.moreOffersLoading = false;\r\n\t                        $scope.offerList = args;\r\n\t                    });\r\n\t\r\n\t                    $scope.$on('updatedOffer', function (event, args) {\r\n\t                        var updatedOffer = args;\r\n\t                        for (var i = 0; i < $scope.offerList.length; i++) {\r\n\t                            if ($scope.offerList[i].id == updatedOffer.id) {\r\n\t                                $scope.offerList[i] = updatedOffer;\r\n\t                                break;\r\n\t                            }\r\n\t                        }\r\n\t                    });\r\n\t\r\n\t                    $scope.$on('removedOffer', function (event, args) {\r\n\t                        var id = args;\r\n\t                        for (var i = 0; i < $scope.offerList.length; i++) {\r\n\t                            if ($scope.offerList[i].id == id) {\r\n\t                                $scope.offerList.splice(i, 1);\r\n\t                                break;\r\n\t                            }\r\n\t                        }\r\n\t                    });\r\n\t\r\n\t                    $scope.showSpecifications = function (id) {\r\n\t                        offerManager.showSpecifications(id);\r\n\t                    }\r\n\t\r\n\t                    $scope.initialiseScrollyButtons = function () {\r\n\t                        $('.scrolly')\r\n\t                            .scrolly({\r\n\t                                speed: 1500\r\n\t                            });\r\n\t                    }\r\n\t\r\n\t                    $scope.parsePrice = function (price) {\r\n\t                        return offerHelper.parsePrice(price);\r\n\t                    }\r\n\t\r\n\t                    $scope.isCategorySelected = function () {\r\n\t                        return !offerHelper.isEmptyCategory($scope.offerFilter.selectedcategory);\r\n\t                    };\r\n\t\r\n\t                    $scope.offerFeedbackStyle = function (offer) {\r\n\t                       return offerHelper.offerFeedbackStyle(offer);\r\n\t                    }\r\n\t\r\n\t                    $scope.$on('appliedOfferFilters', function () {\r\n\t                        $scope.moreOffersLoading = true;\r\n\t                    });\r\n\t\r\n\t                    $scope.$watch('offerList', function () {\r\n\t                        $scope.moreOffersLoading = false;\r\n\t                    });\r\n\t\r\n\t                    $scope.initialiseScrollyButtons();\r\n\t                }]\r\n\t        }\r\n\t    });\n\n/***/ },\n/* 14 */\n/***/ function(module, exports) {\n\n\t/**\r\n\t * Created by hasiermetal on 16/03/14.\r\n\t */\r\n\taporlaofertaApp\r\n\t    .directive('ngPromotionList', function () {\r\n\t        return {\r\n\t            restrict: 'A',\r\n\t            templateUrl: 'resources/js/offer/offer-list/promotionList.html',\r\n\t            controller: ['$scope', '$rootScope', 'offerManager',\r\n\t                function ($scope, $rootScope, offerManager) {\r\n\t                    $scope.defaultList = \"\";\r\n\t\r\n\t                    $scope.requestNewestOffers = function () {\r\n\t                        offerManager.requestNewestOffers();\r\n\t                        $scope.defaultList = 'newestOffers';\r\n\t                    }\r\n\t\r\n\t                    $scope.requestHottestOffers = function () {\r\n\t                        offerManager.requestHottestOffers();\r\n\t                        $scope.defaultList = 'hottestOffers';\r\n\t                    }\r\n\t\r\n\t                    $scope.displayTutorialModal = function () {\r\n\t                        $rootScope.$broadcast('displayTutorial');\r\n\t                    }\r\n\t                }]\r\n\t        }\r\n\t    });\n\n/***/ },\n/* 15 */\n/***/ function(module, exports) {\n\n\t/**\r\n\t * Created by hasiermetal on 11/06/15.\r\n\t */\r\n\taporlaofertaApp\r\n\t    .directive('ngOfferSpecifications', function () {\r\n\t        return {\r\n\t            restrict: 'A',\r\n\t            templateUrl: 'resources/js/offer/offer-specifications/offerSpecifications.jsp',\r\n\t            scope: {\r\n\t                theOffer: '=',\r\n\t                customCloseCallback: '='\r\n\t            },\r\n\t            controller: ['offerManager', 'alertService', '$scope', '$rootScope', 'requestManager', 'configService', 'offerHelper',\r\n\t                function (offerManager, alertService, $scope, $rootScope, requestManager, configService, offerHelper) {\r\n\t                    $scope.sharePrefix = \"http://www.aporlaoferta.com/offer?sh=\";\r\n\t                    $scope.sharePrice = \"€: \";\r\n\t                    $scope.offer = {};\r\n\t                    $scope.offerImage = \"/resources/images/offer.png\";\r\n\t\r\n\t                    $scope.commentsCustomCloseCallback = {};\r\n\t\r\n\t                    $scope.votePositive = function (id) {\r\n\t                        requestManager.makePostCall({}, {'offerId': id}, configService.getEndpoint('positive.feedback'))\r\n\t                            .success(function (data) {\r\n\t                                $scope.sendMessageAndShowSpecifications(data, id, 'offerPositiveVote');\r\n\t                            }).error(function () {\r\n\t                            $scope.sendDefaultErrorMessageAndShowSpecifications(id);\r\n\t                        });\r\n\t                    }\r\n\t                    $scope.voteNegative = function (id) {\r\n\t                        requestManager.makePostCall({}, {'offerId': id}, configService.getEndpoint('negative.feedback'))\r\n\t                            .success(function (data) {\r\n\t                                $scope.sendMessageAndShowSpecifications(data, id, 'offerNegativeVote');\r\n\t                            }).error(function () {\r\n\t                            $scope.sendDefaultErrorMessageAndShowSpecifications(id);\r\n\t                        });\r\n\t                    }\r\n\t                    $scope.sendMessageAndShowSpecifications = function (data, id, feedback) {\r\n\t                        if (!alertService.isAllOk(data)) {\r\n\t                            alertService.sendErrorMessage(data.descriptionEsp);\r\n\t                            $scope.customCloseCallback = function () {\r\n\t                                offerManager.showSpecifications(id);\r\n\t                            }\r\n\t                        }\r\n\t                        else {\r\n\t                            $scope.theOffer[0][feedback] = $scope.theOffer[0][feedback] + 1;\r\n\t                            offerManager.requestUpdatedOffer(id);\r\n\t                        }\r\n\t                    }\r\n\t                    $scope.sendDefaultErrorMessageAndShowSpecifications = function (id) {\r\n\t                        alertService.sendDefaultErrorMessage();\r\n\t                        $scope.customCloseCallback = function () {\r\n\t                            offerManager.showSpecifications(id);\r\n\t                        }\r\n\t                    }\r\n\t                    $scope.updateOffer = function (theOffer) {\r\n\t                        $rootScope.$broadcast('updateTheOffer', angular.copy(theOffer));\r\n\t                    }\r\n\t\r\n\t                    $scope.$watch('theOffer', function () {\r\n\t                        if ($scope.theOffer) {\r\n\t                            $scope.offer = $scope.theOffer[0];\r\n\t                            $scope.offerImage = $scope.theOffer[0].offerImage;\r\n\t                        }\r\n\t                    });\r\n\t\r\n\t                    $scope.expireOffer = function (theOffer) {\r\n\t                        requestManager.makePostCall({}, {'id': theOffer.id}, configService.getEndpoint('expire.offer'))\r\n\t                            .success(function (data) {\r\n\t                                if (!alertService.isAllOk(data)) {\r\n\t                                    alertService.sendErrorMessage(data.descriptionEsp);\r\n\t                                }\r\n\t                                else {\r\n\t                                    alertService.sendErrorMessage(data.descriptionEsp);\r\n\t                                    $scope.customCloseCallback = function () {\r\n\t                                        offerManager.requestUpdatedOffer(theOffer.id);\r\n\t                                    }\r\n\t                                }\r\n\t                            }).error(function () {\r\n\t                            alertService.sendDefaultErrorMessage();\r\n\t                        });\r\n\t                    }\r\n\t\r\n\t                    $scope.banUser = function (nickname) {\r\n\t                        requestManager.makePostCall({}, {'nickname': nickname}, configService.getEndpoint('ban.user'))\r\n\t                            .success(function (data) {\r\n\t                                alertService.sendErrorMessage(data.descriptionEsp);\r\n\t                            }).error(function () {\r\n\t                            alertService.sendDefaultErrorMessage();\r\n\t                        });\r\n\t                    }\r\n\t\r\n\t                    $scope.removeOffer = function (id) {\r\n\t                        requestManager.makePostCall({}, {'id': id}, configService.getEndpoint('remove.offer'))\r\n\t                            .success(function (data) {\r\n\t                                alertService.sendErrorMessage(data.descriptionEsp);\r\n\t                                $scope.customCloseCallback = function () {\r\n\t                                    $rootScope.$broadcast('removedOffer', id);\r\n\t                                }\r\n\t                            }).error(function () {\r\n\t                            alertService.sendDefaultErrorMessage();\r\n\t                        });\r\n\t                    }\r\n\t\r\n\t                    $scope.parsePrice = function (price) {\r\n\t                        return offerHelper.parsePrice(price);\r\n\t                    }\r\n\t\r\n\t                    $scope.offerFeedbackStyle = function (offer) {\r\n\t                        return offerHelper.offerFeedbackStyle(offer);\r\n\t                    }\r\n\t\r\n\t                    $scope.processLogin = function () {\r\n\t                        $rootScope.$broadcast('userLoginRequest');\r\n\t                    }\r\n\t\r\n\t                    $scope.processRegister = function () {\r\n\t                        $rootScope.$broadcast('userRegisterRequest');\r\n\t                    }\r\n\t\r\n\t                    $scope.$on('commentsCustomCloseCallback', function (event, args) {\r\n\t                        var customCallback = args;\r\n\t                        $scope.customCloseCallback = customCallback;\r\n\t                    });\r\n\t                }]\r\n\t        }\r\n\t    })\r\n\t;\n\n/***/ },\n/* 16 */\n/***/ function(module, exports) {\n\n\t/**\r\n\t * Created by hasiermetal on 08/08/16.\r\n\t */\r\n\taporlaofertaApp\r\n\t    .directive('ngQuickTutorial', function () {\r\n\t        return {\r\n\t            restrict: 'A',\r\n\t            scope: {\r\n\t                isDisplayed: '=',\r\n\t            },\r\n\t            templateUrl: 'resources/js/header-display/tutorial/quickTutorial.jsp',\r\n\t            controller: ['$scope', '$element', '$timeout',\r\n\t                function ($scope, $element, $timeout) {\r\n\t                    $scope.shareUrl = \"http://www.aporlaoferta.com\";\r\n\t                    $scope.shareText = $(\"meta[property='og:description']\").attr(\"content\");\r\n\t\r\n\t                    $scope.$watch('isDisplayed', function () {\r\n\t                        if ($scope.isDisplayed) {\r\n\t                            $scope.refreshTutorial();\r\n\t                            $timeout(function () {\r\n\t                                $scope.refreshTutorial();\r\n\t                            }, 300);\r\n\t                        }\r\n\t                    });\r\n\t\r\n\t                    $scope.refreshTutorial = function () {\r\n\t                        $element.resize();\r\n\t                        $element.find('.slick-dots li:first a').trigger('click');\r\n\t                        $scope.isDisplayed = 0;\r\n\t                    }\r\n\t\r\n\t                    $scope.requestNewestOffers = function(){\r\n\t\r\n\t                    }\r\n\t\r\n\t                    $scope.requestHottestOffers = function(){\r\n\t\r\n\t                    }\r\n\t\r\n\t                }]\r\n\t        }\r\n\t    });\n\n/***/ },\n/* 17 */\n/***/ function(module, exports) {\n\n\t/**\r\n\t * Created by hasiermetal on 14/08/16.\r\n\t */\r\n\taporlaofertaApp\r\n\t    .directive('ngFooter', function () {\r\n\t        return {\r\n\t            restrict: 'A',\r\n\t            templateUrl: 'resources/js/footer/footer.jsp',\r\n\t            controller: ['$scope', '$rootScope',\r\n\t                function ($scope, $rootScope) {\r\n\t                    $scope.displayTutorialModal = function () {\r\n\t                        $rootScope.$broadcast('displayTutorial');\r\n\t                    }\r\n\t                }]\r\n\t        }\r\n\t    });\n\n/***/ },\n/* 18 */\n/***/ function(module, exports) {\n\n\t/**\r\n\t * Created by hasiermetal on 11/06/15.\r\n\t */\r\n\taporlaofertaApp\r\n\t    .directive('ngOfferComments', function () {\r\n\t        return {\r\n\t            restrict: 'A',\r\n\t            templateUrl: 'resources/js/offer/offer-specifications/offer-comments/' +\r\n\t            'offerComments.jsp',\r\n\t            scope: {\r\n\t                theComments: '=',\r\n\t                theOffer: '=',\r\n\t                commentsCustomCloseCallback: '='\r\n\t            },\r\n\t            controller: ['$filter', 'alertService', '$scope', '$rootScope', 'requestManager', 'configService', 'offerManager',\r\n\t                function ($filter, alertService, $scope, $rootScope, requestManager, configService, offerManager) {\r\n\t                    $scope.quoteActionEnable = -1;\r\n\t                    $scope.qComment = {};\r\n\t                    $scope.comment = {};\r\n\t                    $scope.getQuotedComment = function (id, comments) {\r\n\t                        return $filter('filter')(comments, {id: id})[0];\r\n\t                    }\r\n\t\r\n\t                    $scope.quoteAction = function (id) {\r\n\t                        if ($scope.quoteActionEnable == id) {\r\n\t                            $scope.quoteActionEnable = -1;\r\n\t                        }\r\n\t                        else {\r\n\t                            $scope.quoteActionEnable = id;\r\n\t                        }\r\n\t                    }\r\n\t\r\n\t                    $scope.isQuoteActionEnabled = function (id) {\r\n\t                        return $scope.quoteActionEnable == id;\r\n\t                    }\r\n\t\r\n\t                    $scope.writeComment = function (comment, id) {\r\n\t                        $scope.processing = true;\r\n\t                        requestManager.makePostCall(comment, {'offer': id}, configService.getEndpoint('create.comment'))\r\n\t                            .success(function (data, status, headers, config) {\r\n\t                                $scope.sendMessageAndShowSpecifications(data.descriptionEsp);\r\n\t                            }).error(function (data, status, headers, config) {\r\n\t                            $scope.sendDefaultErrorMessageAndShowSpecifications();\r\n\t                        }).finally(function () {\r\n\t                            $scope.processing = false;\r\n\t                        });\r\n\t                    };\r\n\t\r\n\t                    $scope.quoteComment = function (comment, id) {\r\n\t                        $scope.processing = true;\r\n\t                        requestManager.makePostCall(comment, {'quotedComment': id}, configService.getEndpoint('quote.comment'))\r\n\t                            .success(function (data, status, headers, config) {\r\n\t                                $scope.sendMessageAndShowSpecifications(data.descriptionEsp);\r\n\t                            }).error(function (data, status, headers, config) {\r\n\t                            $scope.sendDefaultErrorMessageAndShowSpecifications();\r\n\t                        }).finally(function () {\r\n\t                            $scope.processing = false;\r\n\t                        });\r\n\t                    }\r\n\t\r\n\t                    $scope.sendMessageAndShowSpecifications = function (message) {\r\n\t                        //alertService.sendErrorMessage(message);\r\n\t                        //$scope.updateViewAndCloseCallback();\r\n\t                        $scope.restartCommentTexts();\r\n\t                        offerManager.showSpecifications($scope.theOffer);\r\n\t                    }\r\n\t\r\n\t                    $scope.sendDefaultErrorMessageAndShowSpecifications = function () {\r\n\t                        alertService.sendDefaultErrorMessage();\r\n\t                        $scope.updateViewAndCloseCallback();\r\n\t                    }\r\n\t\r\n\t                    $scope.updateViewAndCloseCallback = function () {\r\n\t                        $scope.commentsCustomCloseCallback = function () {\r\n\t                            offerManager.showSpecifications($scope.theOffer);\r\n\t                        }\r\n\t                        $rootScope.$broadcast('commentsCustomCloseCallback', $scope.commentsCustomCloseCallback);\r\n\t                        $scope.restartCommentTexts();\r\n\t                    }\r\n\t\r\n\t                    $scope.restartCommentTexts = function () {\r\n\t                        $scope.comment.commentText = \"\";\r\n\t                        $scope.qComment.commentText = \"\";\r\n\t                    }\r\n\t\r\n\t                    $scope.processLogin = function(){\r\n\t                        $rootScope.$broadcast('userLoginRequest');\r\n\t                    }\r\n\t\r\n\t                    $scope.processRegister = function(){\r\n\t                        $rootScope.$broadcast('userRegisterRequest');\r\n\t                    }\r\n\t\r\n\t                    $scope.deleteComment = function (id) {\r\n\t                        requestManager.makePostCall({}, {'comment': id}, configService.getEndpoint('delete.comment'))\r\n\t                            .success(function (data) {\r\n\t                                $scope.sendMessageAndShowSpecifications(data.descriptionEsp);\r\n\t                            }).error(function () {\r\n\t                            $scope.sendDefaultErrorMessageAndShowSpecifications();\r\n\t                        });\r\n\t                    }\r\n\t\r\n\t                    $scope.banUser = function (nickname) {\r\n\t                        requestManager.makePostCall({}, {'nickname': nickname}, configService.getEndpoint('ban.user'))\r\n\t                            .success(function (data) {\r\n\t                                alertService.sendErrorMessage(data.descriptionEsp);\r\n\t                            }).error(function () {\r\n\t                            alertService.sendErrorMessage(data.descriptionEsp);\r\n\t                        });\r\n\t                    }\r\n\t                }\r\n\t            ]\r\n\t        }\r\n\t    })\r\n\t;\n\n/***/ },\n/* 19 */\n/***/ function(module, exports) {\n\n\t/**\r\n\t * Created by hasiermetal on 26/06/15.\r\n\t */\r\n\taporlaofertaApp\r\n\t    .directive('ngOfferCommentsQuotes', function () {\r\n\t        return {\r\n\t            restrict: 'A',\r\n\t            templateUrl: 'resources/js/offer/offer-specifications/offer-comments/' +\r\n\t                'commentsQuotes.jsp',\r\n\t            scope: {\r\n\t                theComments: '=',\r\n\t                quotedComment: '='\r\n\t            },\r\n\t            controller: ['$rootScope', '$scope', 'requestManager', 'configService', function ($rootScope, $scope, requestManager, configService) {\r\n\t                $scope.quoteActionEnable = -1;\r\n\t                $scope.quoteAction = function (id) {\r\n\t                    if ($scope.quoteActionEnable == id) {\r\n\t                        $scope.quoteActionEnable = -1;\r\n\t                    }\r\n\t                    else {\r\n\t                        $scope.quoteActionEnable = id;\r\n\t                    }\r\n\t                }\r\n\t                $scope.isQuoteActionEnabled = function (id) {\r\n\t                    return $scope.quoteActionEnable == id;\r\n\t                }\r\n\t                $scope.quoteComment = function (comment, id) {\r\n\t                    requestManager.makePostCall(comment, {'quotedComment': id}, configService.getEndpoint('quote.comment'))\r\n\t                        .success(function (data, status, headers, config) {\r\n\t                            $rootScope.$broadcast('serverResponse', data);\r\n\t                            $scope.qComment.commentText=\"\";\r\n\t                        }).error(function (data, status, headers, config) {\r\n\t                            var theResponse = {};\r\n\t                            theResponse.description = data;\r\n\t                            theResponse.responseResult = \"error\";\r\n\t                            $rootScope.$broadcast('serverResponse', theResponse);\r\n\t                        });\r\n\t                };\r\n\t\r\n\t            }]\r\n\t        }\r\n\t    });\n\n/***/ },\n/* 20 */\n/***/ function(module, exports) {\n\n\t/**\r\n\t * Created by hasiermetal on 16/03/14.\r\n\t */\r\n\taporlaofertaApp\r\n\t    .directive('ngOfferCreation', function () {\r\n\t        return {\r\n\t            restrict: 'A',\r\n\t            templateUrl: 'resources/js/offer/offer-creation/offerCreation.html',\r\n\t            scope: {\r\n\t                overheadDisplay: '=',\r\n\t                customCloseCallback: '=',\r\n\t                displayCallback: '='\r\n\t            },\r\n\t            controller: ['$scope', '$rootScope', 'offerManager', 'requestManager', 'configService', 'alertService', 'vcRecaptchaService', 'offerHelper',\r\n\t                function ($scope, $rootScope, offerManager, requestManager, configService, alertService, vcRecaptchaService,offerHelper) {\r\n\t                    $scope.offer = {};\r\n\t                    $scope.widgetId = null;\r\n\t                    $scope.publicKey = \"6LdqHQoTAAAAAAht2VhkrLGU26eBOjL-nK9zXxcn\";\r\n\t                    $scope.resetCategory = true;\r\n\t\r\n\t                    $scope.createOffer = function () {\r\n\t                        if (vcRecaptchaService.getResponse($scope.widgetId) === \"\") {\r\n\t                            $scope.offerCreationError(\"Por favor, haga click en el captcha para demostrar que no es un robot\");\r\n\t                            vcRecaptchaService.reload($scope.widgetId);\r\n\t                        }\r\n\t                        else {\r\n\t                            $scope.processing = true;\r\n\t                            requestManager.makePostCall($scope.parseOffer(), {recaptcha: vcRecaptchaService.getResponse($scope.widgetId)}, configService.getEndpoint('create.offer'))\r\n\t                                .success(function (data) {\r\n\t                                    if (!alertService.isAllOk(data)) {\r\n\t                                        $scope.offerCreationError(data.descriptionEsp);\r\n\t                                    }\r\n\t                                    else {\r\n\t                                        alertService.sendErrorMessage(data.descriptionEsp);\r\n\t                                        $scope.resetValues();\r\n\t                                        $scope.customCloseCallback = function () {\r\n\t                                            offerManager.requestNewestOffers();\r\n\t                                        }\r\n\t                                    }\r\n\t                                }).error(function () {\r\n\t                                    $scope.offerCreationError(alertService.getDefaultMessage());\r\n\t                                }).finally(function () {\r\n\t                                    $scope.processing = false;\r\n\t                                });\r\n\t                            //$scope.overheadDisplay = false;\r\n\t                        }\r\n\t                    };\r\n\t\r\n\t                    $scope.parseOffer = function () {\r\n\t                        var theOffer = angular.copy($scope.offer);\r\n\t                        try {\r\n\t                            theOffer.originalPrice = parseFloat(theOffer.originalPrice.replace(/,/, '.'));\r\n\t                        } catch (e) {/*float already*/\r\n\t                        }\r\n\t                        try {\r\n\t                            theOffer.finalPrice = parseFloat(theOffer.finalPrice.replace(/,/, '.'));\r\n\t                        } catch (e) {/*float already*/\r\n\t                        }\r\n\t                        return theOffer;\r\n\t                    }\r\n\t\r\n\t                    $scope.restartRecaptcha = function () {\r\n\t                        vcRecaptchaService.reload($scope.widgetId);\r\n\t                    }\r\n\t\r\n\t                    $scope.offerCreationError = function (customMessage) {\r\n\t                        alertService.sendErrorMessage(customMessage);\r\n\t                        $scope.restartRecaptcha();\r\n\t                        $scope.customCloseCallback = $scope.displayCallback;\r\n\t                    }\r\n\t\r\n\t                    $scope.bigDecimalsOnly = /^\\-?\\d+((\\.|\\,)\\d+)?$/;\r\n\t                    $scope.resetValues = function () {\r\n\t                        $scope.restartRecaptcha();\r\n\t                        $scope.offer = {};\r\n\t                        $scope.brandNewCompany = false;\r\n\t                        $scope.resetCategory = true;\r\n\t                        $scope.resetImage = true;\r\n\t                    };\r\n\t                    $scope.setWidgetId = function (widgetId) {\r\n\t                        $scope.widgetId = widgetId;\r\n\t                    };\r\n\t\r\n\t                    $scope.isCompanyDefined = function () {\r\n\t                        if ($scope.offer) {\r\n\t                            return $scope.offer.offerCompany && $scope.offer.offerCompany.companyName;\r\n\t                        }\r\n\t                    };\r\n\t\r\n\t                    $scope.isCategorySelected = function () {\r\n\t                        return !offerHelper.isEmptyCategory($scope.offer.offerCategory);\r\n\t                    };\r\n\t\r\n\t                    $scope.selectionPerformed = function () {\r\n\t                        return $scope.isCompanyDefined() && $scope.isCategorySelected();\r\n\t                    }\r\n\t\r\n\t                    $scope.offerCompanies = {};\r\n\t\r\n\t                    $scope.suggest_company=function(term) {\r\n\t                        var q = term.toLowerCase().trim();\r\n\t                        var results = [];\r\n\t                        for (var i = 0; i < $scope.offerCompanies.length && results.length < 10; i++) {\r\n\t                            var company = $scope.offerCompanies[i].companyName;\r\n\t                            if (company.toLowerCase().indexOf(q) === 0)\r\n\t                                results.push({ label: company, value: company });\r\n\t                        }\r\n\t                        return results;\r\n\t                    }\r\n\t\r\n\t                    $scope.autocomplete_options = {\r\n\t                        suggest: $scope.suggest_company\r\n\t                    };\r\n\t\r\n\t                    $scope.populateCompanyList = function () {\r\n\t                        requestManager.makePostCall({}, {}, configService.getEndpoint('get.companies'))\r\n\t                            .success(function (data, status, headers, config) {\r\n\t                                $scope.offerCompanies = angular.copy(data);\r\n\t                            }).error(function (data, status, headers, config) {\r\n\t                            var theResponse = {};\r\n\t                            theResponse.description = data;\r\n\t                            theResponse.responseResult = \"error\";\r\n\t                            $rootScope.$broadcast('serverResponse', theResponse);\r\n\t                        });\r\n\t                    };\r\n\t\r\n\t                    $scope.populateCompanyList();\r\n\t                }]\r\n\t        }\r\n\t    });\n\n/***/ },\n/* 21 */\n/***/ function(module, exports) {\n\n\t/**\r\n\t * Created by hasiermetal on 16/03/14.\r\n\t */\r\n\taporlaofertaApp\r\n\t    .directive('ngOfferUpdate', function () {\r\n\t        return {\r\n\t            restrict: 'A',\r\n\t            templateUrl: 'resources/js/offer/offer-creation/offerCreation.html',\r\n\t            scope: {\r\n\t                overheadDisplay: '=',\r\n\t                customCloseCallback: '=',\r\n\t                displayCallback: '=',\r\n\t                offer: \"=\"\r\n\t            },\r\n\t            controller: ['$scope', 'offerManager', 'requestManager', 'configService', 'alertService', 'vcRecaptchaService',\r\n\t                function ($scope, offerManager, requestManager, configService, alertService, vcRecaptchaService) {\r\n\t                    $scope.widgetId = null;\r\n\t                    $scope.publicKey = \"6LdqHQoTAAAAAAht2VhkrLGU26eBOjL-nK9zXxcn\";\r\n\t                    $scope.createOffer = function () {\r\n\t                        if (vcRecaptchaService.getResponse($scope.widgetId) === \"\") {\r\n\t                            $scope.offerCreationError(\"Por favor, haga click en el captcha para demostrar que no es un robot\");\r\n\t                            vcRecaptchaService.restartRecaptcha();\r\n\t                        }\r\n\t                        else {\r\n\t                            $scope.processing = true;\r\n\t                            requestManager.makePostCall($scope.parseOffer(), {recaptcha: vcRecaptchaService.getResponse($scope.widgetId)}, configService.getEndpoint('update.offer'))\r\n\t                                .success(function (data) {\r\n\t                                    if (!alertService.isAllOk(data)) {\r\n\t                                        $scope.offerCreationError(data.descriptionEsp);\r\n\t                                    }\r\n\t                                    else {\r\n\t                                        alertService.sendErrorMessage(data.descriptionEsp);\r\n\t                                        $scope.resetValues();\r\n\t                                        offerManager.requestUpdatedOffer(data.other);\r\n\t                                        $scope.customCloseCallback = function () {\r\n\t                                        }\r\n\t                                    }\r\n\t                                }).error(function () {\r\n\t                                    $scope.offerCreationError(alertService.getDefaultMessage());\r\n\t                                }).finally(function () {\r\n\t                                    $scope.processing = false;\r\n\t                                });\r\n\t                            //$scope.overheadDisplay = false;\r\n\t                        }\r\n\t                    };\r\n\t\r\n\t                    $scope.parseOffer = function () {\r\n\t                        var theOffer = angular.copy($scope.offer);\r\n\t                        try {\r\n\t                            theOffer.originalPrice = parseFloat(theOffer.originalPrice.replace(/,/, '.'));\r\n\t                        } catch (e) {/*float already*/\r\n\t                        }\r\n\t                        try {\r\n\t                            theOffer.finalPrice = parseFloat(theOffer.finalPrice.replace(/,/, '.'));\r\n\t                        } catch (e) {/*float already*/\r\n\t                        }\r\n\t                        return theOffer;\r\n\t                    }\r\n\t\r\n\t                    $scope.restartRecaptcha = function () {\r\n\t                        vcRecaptchaService.reload($scope.widgetId);\r\n\t                    }\r\n\t\r\n\t                    $scope.offerCreationError = function (customMessage) {\r\n\t                        alertService.sendErrorMessage(customMessage);\r\n\t                        $scope.restartRecaptcha();\r\n\t                        $scope.customCloseCallback = $scope.displayCallback;\r\n\t                    }\r\n\t\r\n\t                    $scope.bigDecimalsOnly = /^\\-?\\d+((\\.|\\,)\\d+)?$/;\r\n\t                    $scope.resetValues = function () {\r\n\t                        $scope.restartRecaptcha();\r\n\t                        $scope.offer = {};\r\n\t                        $scope.brandNewCompany = false;\r\n\t                        $scope.resetCategory = true;\r\n\t                        $scope.resetCompany = true;\r\n\t                        $scope.resetImage = true;\r\n\t                    };\r\n\t                    $scope.setWidgetId = function (widgetId) {\r\n\t                        $scope.widgetId = widgetId;\r\n\t                    };\r\n\t\r\n\t                    $scope.isCompanyDefined = function () {\r\n\t                        if ($scope.offer) {\r\n\t                            return $scope.offer.offerCompany != undefined && $scope.selectedcompany != \"\";\r\n\t                        }\r\n\t                    };\r\n\t                    $scope.isCategorySelected = function () {\r\n\t                        return $scope.offer\r\n\t                            && $scope.offer.offerCategory != \"\"\r\n\t                            && $scope.offer.offerCategory != null\r\n\t                            && $scope.offer.offerCategory != undefined\r\n\t                            && $scope.offer.offerCategory != \"Categoría\"\r\n\t                            && $scope.offer.offerCategory != \"CATEGORÍA\";\r\n\t                    };\r\n\t                    $scope.selectionPerformed = function () {\r\n\t                        return $scope.isCompanyDefined() && $scope.isCategorySelected();\r\n\t                    }\r\n\t                }]\r\n\t        }\r\n\t    });\n\n/***/ },\n/* 22 */\n/***/ function(module, exports) {\n\n\t/**\r\n\t * Created by hasiermetal on 16/03/14.\r\n\t */\r\n\taporlaofertaApp\r\n\t    .directive('ngOfferCategoryManager', function () {\r\n\t        return {\r\n\t            restrict: 'A',\r\n\t            templateUrl: 'resources/js/offer/offer-creation/offerCategoryManagement.html',\r\n\t            scope: {\r\n\t                reset: '=',\r\n\t                selectedcategory: '=',\r\n\t                includeAll: '='\r\n\t            },\r\n\t            controller: ['$rootScope', '$scope', 'requestManager', 'configService', function ($rootScope, $scope, requestManager, configService) {\r\n\t                $scope.offerCategories = {};\r\n\t                $scope.offerCategory = {\r\n\t                    text: \"CATEGORÍA\",\r\n\t                    display: \"Categoría\"\r\n\t                };\r\n\t                $scope.populateAllCategories = function () {\r\n\t                    requestManager.makePostCall({}, {}, configService.getEndpoint('get.offer.categories'))\r\n\t                        .success(function (data) {\r\n\t                            $scope.offerCategories = angular.copy(data);\r\n\t                            if ($scope.includeAll) {\r\n\t                                $scope.offerCategories.push({text: \"TODAS\", value: \"\", display: \"Todas\"})\r\n\t                            }\r\n\t                        }).error(function (data) {\r\n\t                        var theResponse = {};\r\n\t                        theResponse.description = data;\r\n\t                        theResponse.responseResult = \"error\";\r\n\t                        $rootScope.$broadcast('serverResponse', theResponse);\r\n\t                    });\r\n\t                }\r\n\t                $scope.onCategoryChange = function (category) {\r\n\t                    $scope.selectedcategory = category;\r\n\t                }\r\n\t                $scope.populateAllCategories();\r\n\t                $scope.$watch('reset', function () {\r\n\t                    if ($scope.reset) {\r\n\t                        $scope.offerCategory = {\r\n\t                            text: \"CATEGORÍA\",\r\n\t                            display: \"Categoría\"\r\n\t                        };\r\n\t                    }\r\n\t                    $scope.reset = false;\r\n\t                });\r\n\t                $scope.$watch('offerCategory', function () {\r\n\t                    $scope.selectedcategory = $scope.offerCategory.text;\r\n\t                });\r\n\t                $scope.isCategorySelected = function () {\r\n\t                    return $scope.category != \"\"\r\n\t                        && $scope.category != null\r\n\t                        && $scope.category != undefined;\r\n\t                };\r\n\t            }]\r\n\t        }\r\n\t    });\n\n/***/ },\n/* 23 */\n/***/ function(module, exports) {\n\n\t/**\r\n\t * Created by hasiermetal on 30/06/15.\r\n\t */\r\n\taporlaofertaApp\r\n\t    .directive('ngOfferFilter', function () {\r\n\t        return {\r\n\t            restrict: 'A',\r\n\t            templateUrl: 'resources/js/offer/offer-filter/offerFilter.html',\r\n\t            scope: {\r\n\t                offerList: '=',\r\n\t                selection: '=',\r\n\t                offerFilter: '='\r\n\t            },\r\n\t            controller: ['$scope', '$rootScope', 'requestManager', 'configService','offerHelper',\r\n\t                function ($scope, $rootScope, requestManager, configService,offerHelper) {\r\n\t                    $scope.filter = {};\r\n\t                    $scope.displayFilterContent = \"\";\r\n\t                    $scope.previousCategory = \"\";\r\n\t                    $scope.offerFilterContainer = \"offerFilterContainer\";\r\n\t                    $scope.filterBy = \"filter-by\";\r\n\t                    $scope.filterByExpiredCheckbox = \"filterByExpiredCheckbox\";\r\n\t\r\n\t                    $scope.requestFilterApply = function () {\r\n\t                        $scope.processing = true;\r\n\t                        $scope.filter.hot = $scope.selection === 'hottestOffers';\r\n\t                        if (!$scope.isCategorySelected()) {\r\n\t                            $scope.filter.selectedcategory = \"\";\r\n\t                        }\r\n\t                        $scope.offerFilter = angular.copy($scope.filter);\r\n\t                        if ($scope.offerFilter.text.length < 3) {\r\n\t                            $scope.offerFilter.text = \"\";\r\n\t                        }\r\n\t                        $rootScope.$broadcast('appliedOfferFilters', angular.copy($scope.offerFilter));\r\n\t                        requestManager.makePostCall($scope.offerFilter, {}, configService.getEndpoint('get.filtered.offers'))\r\n\t                            .success(function (data, status, headers, config) {\r\n\t                                $scope.offerList = data.theOffers;\r\n\t                            }).error(function (data, status, headers, config) {\r\n\t                            var theResponse = {};\r\n\t                            theResponse.description = data;\r\n\t                            theResponse.responseResult = \"error\";\r\n\t                            $rootScope.$broadcast('serverResponse', theResponse);\r\n\t                        }).finally(function () {\r\n\t                            $scope.processing = false;\r\n\t                        });\r\n\t                    };\r\n\t\r\n\t                    $scope.$watch('filter.dateRange', function () {\r\n\t                        $scope.requestFilterApply();\r\n\t                    });\r\n\t\r\n\t                    $scope.searchCriteriaChanged = function () {\r\n\t                        $scope.offerFilter = angular.copy($scope.filter);\r\n\t                        if ($scope.filter.text.length > 2 || $scope.filter.text.length == 0) {\r\n\t                            $scope.requestFilterApply();\r\n\t                        }\r\n\t                    };\r\n\t\r\n\t                    $scope.$watch('filter.selectedcategory', function () {\r\n\t                        if (!(offerHelper.isEmptyCategory($scope.previousCategory) &&\r\n\t                            offerHelper.isEmptyCategory($scope.filter.selectedcategory)) &&\r\n\t                            $scope.previousCategory !== $scope.filter.selectedcategory) {\r\n\t                            $scope.previousCategory = $scope.filter.selectedcategory;\r\n\t                            $scope.requestFilterApply();\r\n\t                        }\r\n\t                    });\r\n\t\r\n\t                    $scope.cleanFilters = function () {\r\n\t                        $scope.filter.expired = false;\r\n\t                        $scope.filter.text = \"\";\r\n\t                        $scope.resetCategory = true;\r\n\t                        $scope.filter.selectedcategory = \"\";\r\n\t                        $scope.filter.selectedcategory = \"\";\r\n\t                        $scope.filter.dateRange = 1;\r\n\t//                    $scope.requestFilterApply();\r\n\t                        $rootScope.$broadcast('appliedOfferFilters', angular.copy($scope.offerFilter));\r\n\t                    };\r\n\t\r\n\t                    $scope.displayFilterContents = function () {\r\n\t                        $scope.displayFilterContent = ($scope.displayFilterContent == 'filters-displayed') ?\r\n\t                            'filters-hidden' : 'filters-displayed';\r\n\t                    };\r\n\t                    $scope.isCategorySelected = function () {\r\n\t                        return !offerHelper.isEmptyCategory($scope.filter.selectedcategory);\r\n\t                    };\r\n\t\r\n\t                    $scope.cleanFilters();\r\n\t                }]\r\n\t        }\r\n\t    });\n\n/***/ },\n/* 24 */\n/***/ function(module, exports) {\n\n\t/**\r\n\t * Created by hasiermetal on 30/06/15.\r\n\t */\r\n\taporlaofertaApp\r\n\t    .directive('ngDummyOfferFilter', function () {\r\n\t        return {\r\n\t            restrict: 'A',\r\n\t            templateUrl: 'resources/js/offer/offer-filter/offerFilter.html',\r\n\t            controller: ['$scope', function ($scope) {\r\n\t                $scope.filter = {};\r\n\t                $scope.offerFilterContainer = \"dummyFilter\";\r\n\t                $scope.filterBy = \"dummyFilterBy\";\r\n\t                $scope.filterByExpiredCheckbox = \"dummyFilterByExpiredCheckbox\";\r\n\t                $scope.cleanFilters = function () {\r\n\t                    $scope.filter.expired = false;\r\n\t                    $scope.filter.text = \"\";\r\n\t                    $scope.resetCategory = true;\r\n\t                    $scope.filter.dateRange = 1;\r\n\t                };\r\n\t\r\n\t                $scope.displayFilterContents = function () {\r\n\t                    $scope.displayFilterContent = ($scope.displayFilterContent == 'filters-displayed') ?\r\n\t                        'filters-hidden' : 'filters-displayed';\r\n\t                };\r\n\t\r\n\t                $scope.cleanFilters();\r\n\t            }]\r\n\t        }\r\n\t    });\n\n/***/ },\n/* 25 */\n/***/ function(module, exports) {\n\n\t/**\r\n\t * Created by hasiermetal on 16/03/14.\r\n\t */\r\n\taporlaofertaApp\r\n\t    .directive('ngOverheadDisplay', function () {\r\n\t        return {\r\n\t            restrict: 'A',\r\n\t            templateUrl: 'resources/js/header-display/headDisplay.jsp',\r\n\t            scope: {\r\n\t                specificOffer: '@',\r\n\t                specificOfferData: '@',\r\n\t                overheadVisible: '=',\r\n\t                noAccounts: '=',\r\n\t                fullscreen: '=',\r\n\t                overflowEnabled: '='\r\n\t            },\r\n\t            controller: ['$scope', '$window', 'offerManager', '$timeout', '$cookies', 'configService',\r\n\t                function ($scope, $window, $offerManager, $timeout, $cookies, configService) {\r\n\t                    $scope.customCloseCallback = {};\r\n\t                    $scope.theResponse = {};\r\n\t                    $scope.fullscreen = false;\r\n\t                    $scope.overflowEnabled=false;\r\n\t                    $scope.tutorialIsDisplayed = false;\r\n\t                    $scope.loadingOfferSpecifications = false;\r\n\t\r\n\t                    $scope.displayLogin = function () {\r\n\t                        $scope.setDefaultVisibility();\r\n\t                        $scope.displayAccountLogin = true;\r\n\t                        $scope.overheadVisible = true;\r\n\t                    };\r\n\t                    $scope.displaySignup = function () {\r\n\t                        $scope.setDefaultVisibility();\r\n\t                        $scope.displayAccountCreation = true;\r\n\t                        $scope.overheadVisible = true;\r\n\t                    };\r\n\t                    $scope.displayAccountUpdateForm = function () {\r\n\t                        $scope.setDefaultVisibility();\r\n\t                        $scope.displayAccountUpdate = true;\r\n\t                        $scope.overheadVisible = true;\r\n\t                    };\r\n\t                    $scope.displayOfferCreate = function () {\r\n\t                        $scope.setDefaultVisibility();\r\n\t                        $scope.displayOfferCreation = true;\r\n\t                        $scope.overheadVisible = true;\r\n\t                    };\r\n\t                    $scope.displayOfferUpdate = function () {\r\n\t                        $scope.setDefaultVisibility();\r\n\t                        $scope.displayOfferToBeUpdate = true;\r\n\t                        $scope.overheadVisible = true;\r\n\t                    };\r\n\t                    $scope.displayOfferDetails = function () {\r\n\t                        $scope.setDefaultVisibility();\r\n\t                        $scope.displayOfferSpecifications = true;\r\n\t                        $scope.overheadVisible = true;\r\n\t                    };\r\n\t                    $scope.displayOfferLoading = function () {\r\n\t                        $scope.setDefaultVisibility();\r\n\t                        $scope.loadingOfferSpecifications = true;\r\n\t                        $scope.overheadVisible = true;\r\n\t                    };\r\n\t                    $scope.displayServerResponse = function () {\r\n\t                        $scope.setDefaultVisibility();\r\n\t                        $scope.displayResponseFromServer = true;\r\n\t                        $scope.overheadVisible = true;\r\n\t                    }\r\n\t                    $scope.displayTutorialDiagram = function () {\r\n\t                        $scope.customCloseCallback = function () {\r\n\t                            $scope.setTutorialCookie();\r\n\t                        }\r\n\t                        $scope.setDefaultVisibility();\r\n\t                        $scope.displayTutorial = true;\r\n\t                        $scope.overheadVisible = true;\r\n\t                        $scope.tutorialIsDisplayed = true;\r\n\t                    }\r\n\t                    $scope.setDefaultVisibility = function () {\r\n\t                        $scope.overheadVisible = false;\r\n\t                        $scope.displayOfferCreation = false;\r\n\t                        $scope.displayOfferToBeUpdate = false;\r\n\t                        $scope.displayAccountLogin = false;\r\n\t                        $scope.displayAccountCreation = false;\r\n\t                        $scope.displayAccountUpdate = false;\r\n\t                        $scope.displayOfferSpecifications = false;\r\n\t                        $scope.displayResponseFromServer = false;\r\n\t                        $scope.displayTutorial = false;\r\n\t                        $scope.tutorialIsDisplayed = false;\r\n\t                        $scope.loadingOfferSpecifications = false;\r\n\t                    };\r\n\t                    $scope.closeOverheadDisplay = function (customCloseCallback) {\r\n\t                        $scope.setDefaultVisibility();\r\n\t                        if (typeof customCloseCallback == \"function\") {\r\n\t                            customCloseCallback();\r\n\t                            $scope.customCloseCallback = {};\r\n\t                        }\r\n\t                    };\r\n\t                    $scope.$watch('specificOffer', function () {\r\n\t                        if (/^\\d+$/.exec($scope.specificOffer) != null) {\r\n\t                            $scope.fullscreen = true;\r\n\t                            $scope.overflowEnabled=true;\r\n\t                            $scope.customCloseCallback = function () {\r\n\t                                $scope.fullscreen = false;\r\n\t                            };\r\n\t                            var offerSpecifications = $scope.specificOfferData\r\n\t                                .replace(new RegExp(\"xx#!!#xx\", 'g'), \"\\\\\\\"\")\r\n\t                                .replace(new RegExp(\"xx#!#xx\", 'g'), \"'\");\r\n\t                            $scope.openOfferSpecifications(JSON.parse(offerSpecifications));\r\n\t                        }\r\n\t                    });\r\n\t                    $scope.$on('offerSpecifications', function (event, args) {\r\n\t                        $scope.openOfferSpecifications(args);\r\n\t                    });\r\n\t\r\n\t                    $scope.openOfferSpecifications = function (offerSpecifications) {\r\n\t                        $scope.offerSpecifications = offerSpecifications;\r\n\t                        $scope.loadingOfferSpecifications = false;\r\n\t                        $scope.displayOfferDetails();\r\n\t                        $scope.customCloseCallback = function () {\r\n\t                            $scope.offerSpecifications = [];\r\n\t                            $scope.fullscreen = false;\r\n\t                            $scope.overflowEnabled=false;\r\n\t                        }\r\n\t                    }\r\n\t\r\n\t                    $scope.redirectHome = function () {\r\n\t                        $window.location.href = '/';\r\n\t                    };\r\n\t                    $scope.$on('loadingOfferSpecifications', function () {\r\n\t                        $scope.displayOfferLoading();\r\n\t                    });\r\n\t\r\n\t                    $scope.$on('updateTheOffer', function (event, args) {\r\n\t                        $scope.offerSpecifications = [args];\r\n\t                        $scope.customCloseCallback = function () {\r\n\t                            $scope.displayOfferDetails();\r\n\t                        }\r\n\t                        $scope.displayOfferUpdate();\r\n\t                    });\r\n\t\r\n\t                    $scope.$on('serverResponse', function (event, args) {\r\n\t                        $scope.theResponse = args;\r\n\t                        $scope.fullscreen = false;\r\n\t                        $scope.overflowEnabled=false;\r\n\t                        $scope.displayServerResponse();\r\n\t                    });\r\n\t\r\n\t                    $scope.$on('displayTutorial', function () {\r\n\t                        $scope.displayTutorialDiagram();\r\n\t                    });\r\n\t\r\n\t                    $scope.$on('userLoginRequest', function () {\r\n\t                        $scope.displayLogin();\r\n\t                    });\r\n\t\r\n\t                    $scope.$on('userRegisterRequest', function () {\r\n\t                        $scope.displaySignup();\r\n\t                    });\r\n\t\r\n\t                    $scope.$on('keydownControl', function (event, args) {\r\n\t                        var keyDownCode = args;\r\n\t                        if (keyDownCode == 27) {\r\n\t                            $scope.justCloseOverheadDisplay();\r\n\t                        }\r\n\t                    });\r\n\t\r\n\t                    $scope.justCloseOverheadDisplay = function () {\r\n\t                        $scope.customCloseCallback = {};\r\n\t                        $scope.closeOverheadDisplay();\r\n\t                        $scope.fullscreen = false;\r\n\t                        $scope.overflowEnabled=false;\r\n\t                    }\r\n\t\r\n\t                    $scope.checkForErrors = function () {\r\n\t                        if (document.getElementById(\"errorMessage\")) {\r\n\t                            var errorMessage = document.getElementById(\"errorMessage\").value;\r\n\t                            if (typeof errorMessage != undefined && errorMessage != '') {\r\n\t                                var theResponse = {};\r\n\t                                theResponse.descriptionEsp = errorMessage;\r\n\t                                theResponse.responseResult = \"error\";\r\n\t                                $scope.theResponse = theResponse;\r\n\t                                $scope.displayServerResponse();\r\n\t                            }\r\n\t                        }\r\n\t                    };\r\n\t\r\n\t                    $scope.setTutorialCookie = function () {\r\n\t                        var expireDate = new Date();\r\n\t                        expireDate.setDate(expireDate.getDate() + 365);\r\n\t                        $cookies.put(configService.getEndpoint('tutorial.cookie'), 'true', {'expires': expireDate});\r\n\t                    };\r\n\t\r\n\t                    $scope.setDefaultVisibility();\r\n\t                    $scope.checkForErrors();\r\n\t\r\n\t                    $timeout(function () {\r\n\t                        angular.element($('#overheadSubContainer')).removeClass('hiddencontainer');\r\n\t                    }, 100);\r\n\t\r\n\t                }]\r\n\t        }\r\n\t    });\n\n/***/ },\n/* 26 */\n/***/ function(module, exports) {\n\n\t/**\r\n\t * Created by hasiermetal on 19/06/16.\r\n\t */\r\n\taporlaofertaApp\r\n\t    .directive('ngHeadAccountAndOfferManagement', ['$window', '$anchorScroll', function ($window, $anchorScroll) {\r\n\t        return {\r\n\t            restrict: 'A',\r\n\t            templateUrl: 'resources/js/header-display/headAccountAndOfferManagement.jsp',\r\n\t            scope: {\r\n\t                displayLogin: '=',\r\n\t                displaySignup: '=',\r\n\t                displayOfferCreate: '=',\r\n\t                displayAccountUpdateForm: '='\r\n\t            },\r\n\t            link: function ($scope) {\r\n\t                $scope.shareUrl = \"http://www.aporlaoferta.com\";\r\n\t                $scope.shareText = $(\"meta[property='og:description']\").attr(\"content\");\r\n\t                $scope.scrollPosition = true;\r\n\t                angular.element($window).bind(\"scroll\", function () {\r\n\t                    $scope.scrollPosition = this.pageYOffset <= 50;\r\n\t                    $scope.$apply();\r\n\t                });\r\n\t                $scope.toTheTop = function () {\r\n\t                    $anchorScroll();\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t    }]);\n\n/***/ },\n/* 27 */\n/***/ function(module, exports) {\n\n\t/**\r\n\t * Created by hasiermetal on 10/08/16.\r\n\t */\r\n\taporlaofertaApp\r\n\t    .directive('ngMainSlogan', function () {\r\n\t        return {\r\n\t            restrict: 'A',\r\n\t            templateUrl: 'resources/js/header-display/mainSlogan.html',\r\n\t            controller: ['$scope', '$timeout',\r\n\t                function ($scope, $timeout) {\r\n\t                    $timeout(function () {\r\n\t                        $scope.faded=true;\r\n\t                    }, 1200);\r\n\t                }]\r\n\t        }\r\n\t    });\n\n/***/ },\n/* 28 */\n/***/ function(module, exports) {\n\n\t/**\r\n\t * Created by hasiermetal on 19/06/15.\r\n\t */\r\n\taporlaofertaApp\r\n\t    .directive('ngImageUploader', function () {\r\n\t        return {\r\n\t            restrict: 'A',\r\n\t            scope: {\r\n\t                finalUrl: '=',\r\n\t                reset: '=',\r\n\t                alreadyUploadedImage: '='\r\n\t            },\r\n\t            templateUrl: 'resources/js/uploader/imageUpload.html',\r\n\t            controller: ['$rootScope', '$scope', 'configService', '$timeout', function ($rootScope, $scope, configService, $timeout) {\r\n\t                $scope.uploader = {};\r\n\t                $scope.displayThumbnail = true;\r\n\t                $scope.invalidSize = false;\r\n\t                $scope.invalidImage = false;\r\n\t                $scope.maxImageSize = configService.getEndpoint('max.image.size');\r\n\t                $scope.alreadyUploadedImage=\"\";\r\n\t                $scope.fileAdded = function (file) {\r\n\t                    var fileReader = new FileReader();\r\n\t                    fileReader.onload = function (event) {\r\n\t                        var img = new Image();\r\n\t                        $scope.alreadyUploadedImage=\"\";\r\n\t                        img.onerror = function () {\r\n\t                            $scope.displayInvalidImageMessage();\r\n\t                            return false;\r\n\t                        };\r\n\t                        img.onload = function () {\r\n\t                            if (this.width > $scope.maxImageSize ||\r\n\t                                this.height > $scope.maxImageSize\r\n\t                                ) {\r\n\t                                $scope.displayInvalidImageSizeMessage();\r\n\t                                return false;\r\n\t                            }\r\n\t                            $scope.uploader.flow.upload();\r\n\t                            $scope.defaultThumbnailView();\r\n\t                        };\r\n\t                        img.src = event.target.result;\r\n\t                    };\r\n\t                    fileReader.readAsDataURL(file.file);\r\n\t                };\r\n\t\r\n\t                $scope.deleteImage=function(){\r\n\t                    $scope.alreadyUploadedImage = \"\";\r\n\t                    $scope.uploader.flow.cancel();\r\n\t                }\r\n\t\r\n\t                $scope.changeImage=function(){\r\n\t                    $scope.alreadyUploadedImage = \"\";\r\n\t                }\r\n\t\r\n\t                $scope.alreadyUploaded = function () {\r\n\t                    return $scope.alreadyUploadedImage !== \"\";\r\n\t                }\r\n\t\r\n\t                $scope.defaultThumbnailView = function () {\r\n\t                    $scope.displayThumbnail = true;\r\n\t                    $scope.invalidImage = false;\r\n\t                    $scope.invalidSize = false;\r\n\t                };\r\n\t\r\n\t                $scope.filesIsUploaded = function (message) {\r\n\t                    var responseResult = JSON.parse(message);\r\n\t                    if (responseResult.code == 0) {\r\n\t                        $scope.finalUrl = responseResult.description;\r\n\t                    }\r\n\t                    else {\r\n\t                        $scope.handleUploadError(responseResult);\r\n\t                    }\r\n\t                };\r\n\t                $scope.handleUploadError = function (error) {\r\n\t                    $rootScope.$broadcast('serverResponse', error);\r\n\t                };\r\n\t                $scope.$watch('finalUrl', function (newValue, oldValue) {\r\n\t                    if (newValue === \"\" || typeof newValue === 'undefined') {\r\n\t                        $scope.uploader.flow.cancel();\r\n\t                    }\r\n\t                });\r\n\t                $scope.$watch('reset', function () {\r\n\t                    if ($scope.reset==true) {\r\n\t                        $scope.deleteImage();\r\n\t                    }\r\n\t                });\r\n\t\r\n\t                $scope.isInvalidThumbnailShown = function () {\r\n\t                    return $scope.invalidImage || $scope.invalidSize;\r\n\t                };\r\n\t\r\n\t                $scope.displayInvalidImageSizeMessage = function () {\r\n\t                    $scope.defaultThumbnailView();\r\n\t                    $scope.invalidSize = true;\r\n\t                    $scope.displayThumbnail = false;\r\n\t                    $timeout(function () {\r\n\t                        $scope.uploader.flow.cancel();\r\n\t                    }, 500);\r\n\t                };\r\n\t                $scope.displayInvalidImageMessage = function () {\r\n\t                    $scope.defaultThumbnailView();\r\n\t                    $scope.invalidImage = true;\r\n\t                    $scope.displayThumbnail = false;\r\n\t                    $timeout(function () {\r\n\t                        $scope.uploader.flow.cancel();\r\n\t                    }, 500);\r\n\t                }\r\n\t            }]\r\n\t        }\r\n\t    });\n\n/***/ },\n/* 29 */\n/***/ function(module, exports) {\n\n\t/**\r\n\t * Created by hasiermetal on 22/06/15.\r\n\t */\r\n\taporlaofertaApp\r\n\t    .directive('ngResponseFromServer', function () {\r\n\t        return {\r\n\t            restrict: 'A',\r\n\t            templateUrl: 'resources/js/response/serverResponse.html',\r\n\t            scope: {\r\n\t                theResponse: '='\r\n\t            }\r\n\t        }\r\n\t    });\n\n/***/ },\n/* 30 */\n/***/ function(module, exports) {\n\n\t/**\r\n\t * Created by hasiermetal on 16/03/14.\r\n\t */\r\n\taporlaofertaApp\r\n\t    .directive('ngSocialMedia', function () {\r\n\t        return {\r\n\t            restrict: 'A',\r\n\t            templateUrl: 'resources/js/social/socialMedia.html',\r\n\t            scope: {\r\n\t                shareUrl: '=',\r\n\t                shareText: '='\r\n\t            },\r\n\t            controller: ['$scope',\r\n\t                function ($scope) {\r\n\t                    $scope.$watch('shareUrl', function () {\r\n\t                        $scope.facebookUrl = \"https://www.facebook.com/sharer/sharer.php?u=\" + $scope.shareUrl;\r\n\t                        $scope.twitterUrl = \"https://twitter.com/intent/tweet?url=\" +\r\n\t                            $scope.shareUrl + \"&text=\" + encodeURIComponent($scope.shareText); + \"&via=aporlaoferta\";\r\n\t                        $scope.googlePlusUrl = \"https://plus.google.com/share?url=\" + $scope.shareUrl;\r\n\t                        $scope.whatsappHref = $scope.buildWhatsappUrl();\r\n\t                    });\r\n\t\r\n\t                    $scope.$watch('shareText', function () {\r\n\t                        $scope.twitterUrl = \"https://twitter.com/intent/tweet?url=\" +\r\n\t                            $scope.shareUrl + \"&text=\" + encodeURIComponent($scope.shareText); + \"&via=aporlaoferta\";\r\n\t                        $scope.whatsappHref = $scope.buildWhatsappUrl();\r\n\t                    });\r\n\t\r\n\t                    $scope.buildWhatsappUrl = function(){\r\n\t                         return \"whatsapp://send?text=_\"+encodeURIComponent($scope.shareText.replace(/_/, ' ')+\"_ \"+$scope.shareUrl);\r\n\t                    }\r\n\t                }]\r\n\t\r\n\t        }\r\n\t    });\n\n/***/ },\n/* 31 */\n/***/ function(module, exports) {\n\n\t/**\r\n\t * Created by hasiermetal on 14/05/16.\r\n\t */\r\n\taporlaofertaApp\r\n\t    .directive('ngRedirectComponents', function () {\r\n\t        return {\r\n\t            restrict: 'A',\r\n\t            templateUrl: 'resources/js/error/redirectComponents.html'\r\n\t        }\r\n\t    });\n\n/***/ },\n/* 32 */\n/***/ function(module, exports) {\n\n\t/**\r\n\t * Created by hasiermetal on 16/03/14.\r\n\t */\r\n\taporlaofertaApp\r\n\t    .directive('ngPasswordForgotten', function () {\r\n\t        return {\r\n\t            restrict: 'A',\r\n\t            templateUrl: 'resources/js/account/password-forgotten/forgottenForm.html',\r\n\t            scope: {\r\n\t                uuid: '=',\r\n\t                nick: '=',\r\n\t                customCloseCallback: '='\r\n\t            },\r\n\t            controller: ['$scope', '$http', 'requestManager', 'configService', 'alertService','$timeout','accountHelper',\r\n\t                function ($scope, http, requestManager, configService, alertService,$timeout,accountHelper) {\r\n\t                    $scope.validPassword = accountHelper.validPassword;\r\n\t                    $scope.theUser = {userNickname: $scope.nick, track: $scope.uuid};\r\n\t                    $scope.updatePassword = function (theUser) {\r\n\t                        $scope.processing=true;\r\n\t                        requestManager.makePostCall(theUser, {}, configService.getEndpoint('password.forgotten'))\r\n\t                            .success(function (data) {\r\n\t                                $scope.processPasswordResponse(data)\r\n\t                            }).error(function () {\r\n\t                                alertService.sendDefaultErrorMessage();\r\n\t                            }).finally(function(){\r\n\t                                $scope.processing=false;\r\n\t                            });\r\n\t                        $scope.theUser = {userNickname: $scope.nick, track: $scope.uuid};\r\n\t                    }\r\n\t                    $scope.processPasswordResponse = function (data) {\r\n\t                        alertService.sendErrorMessage(data.descriptionEsp);\r\n\t                        if(alertService.isAllOk(data)){\r\n\t                            $timeout(function () {\r\n\t                                window.location.replace(\"/\");\r\n\t                            }, 2000);\r\n\t                        }\r\n\t                    }\r\n\t                }]\r\n\t        }\r\n\t    });\n\n/***/ },\n/* 33 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t__webpack_require__(34);\n\n/***/ },\n/* 34 */\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ }\n/******/ ]);\n\n\n/** WEBPACK FOOTER **\n ** bundle.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 95fef287578e19b67565\n **/","var requestManager = angular.module('requestManager', []);\r\n\r\nrequestManager.service('requestManager', ['$http',\r\n    function ($http) {\r\n        var requestControllerService = {};\r\n        var csrfToken;\r\n        requestControllerService.initMainController = function () {\r\n            csrfToken = $(\"meta[name='_csrf']\").attr(\"content\");\r\n        };\r\n        requestControllerService.makePostCall=function(data, params, url){\r\n            params._csrf= csrfToken;\r\n            return $http({\r\n                method: 'POST',\r\n                url: url,\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'X-CSRF-TOKEN': csrfToken\r\n                },\r\n                params: params,\r\n                data: data\r\n            });\r\n        };\r\n        requestControllerService.getActualToken=function(){\r\n            return csrfToken;\r\n        }\r\n        requestControllerService.initMainController();\r\n        return requestControllerService;\r\n    }]);\r\n\r\n\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/main/webapp/resources/js/request-handler/requestManagerService.js\n ** module id = 1\n ** module chunks = 0\n **/","var configManager = angular.module('configService', []);\r\n\r\nconfigManager.service('configService', [function () {\r\n    var configService = {};\r\n    var GET_OFFERS_ENDPOINT = \"getOffers\";\r\n    var GET_HOTTEST_OFFERS_ENDPOINT = \"getHottestOffers\";\r\n    var GET_OFFER_ENDPOINT = \"getOffer\";\r\n    var CREATE_OFFER_ENDPOINT = \"createOffer\";\r\n    var UPDATE_OFFER_ENDPOINT = \"updateOffer\";\r\n    var EXPIRE_OFFER_ENDPOINT = \"expireOffer\";\r\n    var REMOVE_OFFER_ENDPOINT = \"removeOffer\";\r\n    var CREATE_ACCOUNT_ENDPOINT = \"createUser\";\r\n    var UPDATE_ACCOUNT_ENDPOINT = \"updateUser\";\r\n    var BAN_USER = \"banUser\";\r\n    var GET_ACCOUNT_DETAILS_ENDPOINT = \"accountDetails\";\r\n    var GET_COMPANIES_ENDPOINT = \"companyList\";\r\n    var GET_OFFER_CATEGORIES_ENDPOINT = \"getOfferCategories\";\r\n    var POSITIVE_FEEDBACK_ENDPOINT = \"votePositive\";\r\n    var NEGATIVE_FEEDBACK_ENDPOINT = \"voteNegative\";\r\n    var CREATE_COMMENT_ENDPOINT = \"createComment\";\r\n    var DELETE_COMMENT_ENDPOINT = \"deleteComment\";\r\n    var QUOTE_COMMENT_ENDPOINT = \"quoteComment\";\r\n    var GET_FILTERED_ENDPOINT = \"getFilteredOffers\";\r\n    var REQUEST_PASSWORD_UPDATE = \"forgottenPassword\";\r\n    var REQUEST_PASSWORD = \"requestForgottenPassword\";\r\n    var TUTORIAL_COOKIE = \"aporlaoferta-tut\";\r\n    var LAW_COOKIE = \"aporlaoferta-cle\";\r\n    var IMAGE_MAX_SIZE = 4500;\r\n    configService.getEndpoint = function (key) {\r\n        return configMap[key];\r\n    };\r\n    var configMap = {\r\n        'get.offers': GET_OFFERS_ENDPOINT,\r\n        'get.hottest.offers': GET_HOTTEST_OFFERS_ENDPOINT,\r\n        'get.offer': GET_OFFER_ENDPOINT,\r\n        'create.offer': CREATE_OFFER_ENDPOINT,\r\n        'update.offer': UPDATE_OFFER_ENDPOINT,\r\n        'expire.offer': EXPIRE_OFFER_ENDPOINT,\r\n        'remove.offer': REMOVE_OFFER_ENDPOINT,\r\n        'create.account': CREATE_ACCOUNT_ENDPOINT,\r\n        'update.account': UPDATE_ACCOUNT_ENDPOINT,\r\n        'get.account.details': GET_ACCOUNT_DETAILS_ENDPOINT,\r\n        'get.companies': GET_COMPANIES_ENDPOINT,\r\n        'get.offer.categories': GET_OFFER_CATEGORIES_ENDPOINT,\r\n        'ban.user': BAN_USER,\r\n        'positive.feedback': POSITIVE_FEEDBACK_ENDPOINT,\r\n        'negative.feedback': NEGATIVE_FEEDBACK_ENDPOINT,\r\n        'create.comment': CREATE_COMMENT_ENDPOINT,\r\n        'delete.comment': DELETE_COMMENT_ENDPOINT,\r\n        'quote.comment': QUOTE_COMMENT_ENDPOINT,\r\n        'get.filtered.offers': GET_FILTERED_ENDPOINT,\r\n        'password.forgotten': REQUEST_PASSWORD_UPDATE,\r\n        'password.forgotten.request': REQUEST_PASSWORD,\r\n        'max.image.size': IMAGE_MAX_SIZE,\r\n        'tutorial.cookie':TUTORIAL_COOKIE,\r\n        'law.cookie':LAW_COOKIE\r\n    };\r\n    return configService;\r\n}]);\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/main/webapp/resources/js/config/configService.js\n ** module id = 2\n ** module chunks = 0\n **/","var alertManager = angular.module('alertService', []);\r\n\r\nalertManager.service('alertService', ['$rootScope', function ($rootScope) {\r\n    var alertService = {};\r\n    var defaultMessage = \"No se ha podido ejecutar la operación\";\r\n    alertService.isAllOk = function (data) {\r\n        return data.code == 0;\r\n    }\r\n    alertService.sendErrorMessage = function (data) {\r\n        var theResponse = {};\r\n        theResponse.descriptionEsp = data;\r\n        theResponse.responseResult = \"error\";\r\n        $rootScope.$broadcast('serverResponse', theResponse);\r\n    };\r\n    alertService.sendDefaultErrorMessage = function () {\r\n        var theResponse = {};\r\n        theResponse.descriptionEsp = alertService.getDefaultMessage();\r\n        theResponse.responseResult = \"error\";\r\n        $rootScope.$broadcast('serverResponse', theResponse);\r\n    }\r\n    alertService.getDefaultMessage = function () {\r\n        return defaultMessage;\r\n        ;\r\n    }\r\n    return alertService;\r\n}]);\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/main/webapp/resources/js/response/alertService.js\n ** module id = 3\n ** module chunks = 0\n **/","var offerManager = angular.module('offerManager', []);\r\n\r\nofferManager.service('offerManager', ['$rootScope', 'alertService', 'requestManager', 'configService',\r\n    function ($rootScope, alertService, requestManager, configService) {\r\n        var offerManagerController = {};\r\n        offerManagerController.appliedOfferFilters = {};\r\n\r\n        offerManagerController.requestNewestOffers = function () {\r\n            var offerFilter = angular.copy(offerManagerController.appliedOfferFilters);\r\n            offerFilter.hot = false;\r\n            offerManagerController.requestMoreOffers(offerFilter, undefined, offerManagerController.broadcastOfferList,\r\n                function () {\r\n                });\r\n        }\r\n\r\n        offerManagerController.requestHottestOffers = function () {\r\n            var offerFilter = angular.copy(offerManagerController.appliedOfferFilters);\r\n            offerFilter.hot = true;\r\n            offerManagerController.requestMoreOffers(offerFilter, undefined, offerManagerController.broadcastOfferList,\r\n                function () {\r\n                });\r\n        }\r\n\r\n        offerManagerController.requestUpdatedOffer = function (id) {\r\n            requestManager.makePostCall({}, {'id': id}, configService.getEndpoint('get.offer'))\r\n                .success(function (data) {\r\n                    if (alertService.isAllOk(data) && data.theOffers.length>0) {\r\n                        $rootScope.$broadcast('updatedOffer', data.theOffers[0]);\r\n                    }\r\n                });\r\n        }\r\n\r\n        $rootScope.$on('appliedOfferFilters', function (event, args) {\r\n            offerManagerController.appliedOfferFilters = args;\r\n        });\r\n\r\n        offerManagerController.broadcastOfferList = function (offerList) {\r\n            $rootScope.$broadcast('offerList', offerList);\r\n        }\r\n\r\n        offerManagerController.requestMoreOffers = function (offerFilter, lastOffer, callback, errorCallback) {\r\n            requestManager.makePostCall(offerFilter, {'number': lastOffer}, configService.getEndpoint('get.filtered.offers'))\r\n                .success(function (data, status, headers, config) {\r\n                    callback(data.theOffers);\r\n                    //$rootScope.$broadcast('offerList', data.theOffers);\r\n                }).error(function (data, status, headers, config) {\r\n                alertService.sendDefaultErrorMessage();\r\n                errorCallback();\r\n            });\r\n        }\r\n        offerManagerController.showSpecifications = function (id) {\r\n            $rootScope.$broadcast('loadingOfferSpecifications');\r\n            requestManager.makePostCall({}, {'id': id}, configService.getEndpoint('get.offer'))\r\n                .success(function (data, status, headers, config) {\r\n                    if (alertService.isAllOk(data)) {\r\n                        $rootScope.$broadcast('offerSpecifications', data.theOffers);\r\n                    }\r\n                    else {\r\n                        alertService.sendErrorMessage(data.descriptionEsp);\r\n                    }\r\n                }).error(function (data, status, headers, config) {\r\n                alertService.sendDefaultErrorMessage();\r\n            });\r\n        }\r\n        return offerManagerController;\r\n    }]);\r\n\r\n\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/main/webapp/resources/js/offer/offer-list/offerManagerService.js\n ** module id = 4\n ** module chunks = 0\n **/","var offerHelper = angular.module('offerHelper', []);\r\n\r\nofferHelper.service('offerHelper', [\r\n    function () {\r\n        var offerUtils = {};\r\n\r\n        offerUtils.offerFeedbackStyle = function (offer) {\r\n            if (offer) {\r\n                var offerFeedback = offer.offerPositiveVote - offer.offerNegativeVote;\r\n                if (offerFeedback > 0 && offerFeedback <= 100) {\r\n                    return 'hotFeedback';\r\n                }\r\n                else if (offerFeedback > 100) {\r\n                    return 'veryHotFeedback';\r\n                }\r\n                else if (offerFeedback < 0) {\r\n                    return 'coldFeedback';\r\n                }\r\n            }\r\n            return 'neutralFeedback';\r\n        }\r\n\r\n        offerUtils.isEmptyCategory = function (category) {\r\n            return [\"\", null, undefined, \"Categoría\", \"Todas\", \"CATEGORÍA\", \"TODAS\"].indexOf(category) > -1;\r\n        }\r\n\r\n        offerUtils.parsePrice = function (price) {\r\n            if (price || price == 0) {\r\n                return price.toString().replace(/\\./, ',');\r\n            }\r\n        }\r\n\r\n        return offerUtils;\r\n    }]);\r\n\r\n\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/main/webapp/resources/js/offer/offer-specifications/offerHelper.js\n ** module id = 5\n ** module chunks = 0\n **/","/**\r\n * Created by hasiermetal on 16/03/15.\r\n */\r\naporlaofertaApp = angular.module('aPorLaOferta', [\r\n    'angular.filter',\r\n    'requestManager',\r\n    'alertService',\r\n    'configService',\r\n    'flow',\r\n    'ngAnimate',\r\n    'vcRecaptcha',\r\n    'offerManager',\r\n    'offerHelper',\r\n    'accountHelper',\r\n    'pwCheckModule',\r\n    'ngMessages',\r\n    'ngDropdowns',\r\n    'ngSanitize',\r\n    'MassAutoComplete',\r\n    'truncate',\r\n    'angular-cookie-law',\r\n    'ngCookies',\r\n    'slick'\r\n]);\r\n\r\n//main controller\r\naporlaofertaApp.controller('APorLaOfertaController', ['$scope', '$rootScope', function ($scope, $rootScope) {\r\n    $scope.keyHandler = function ($event) {\r\n        $rootScope.$broadcast('keydownControl', $event.keyCode);\r\n    };\r\n\r\n    $scope.time = new Date().getTime();\r\n    angular.element(document.body).bind(\"mousemove keypress\", function () {\r\n        $scope.time = new Date().getTime();\r\n    });\r\n    $scope.minute = 60000;\r\n    $scope.refresh = function () {\r\n        (new Date().getTime() - $scope.time >= 20 * $scope.minute) ? window.location.reload() : setTimeout($scope.refresh, 10 * $scope.minute);\r\n    }\r\n    setTimeout($scope.refresh, 10 * $scope.minute);\r\n}]);\r\n\r\naporlaofertaApp.directive('ngConfirmClick', [\r\n    function () {\r\n        return {\r\n            link: function (scope, element, attr) {\r\n                var msg = attr.ngConfirmClick || \"\";\r\n                var clickAction = attr.confirmedClick;\r\n                element.bind('click', function (event) {\r\n                    if (window.confirm(msg)) {\r\n                        scope.$eval(clickAction)\r\n                    }\r\n                });\r\n            }\r\n        };\r\n    }]);\r\n\r\naporlaofertaApp.config(['flowFactoryProvider', '$compileProvider',\r\n    function (flowFactoryProvider, $compileProvider) {\r\n    flowFactoryProvider.defaults = {\r\n        target: 'uploadImage',\r\n        permanentErrors: [404, 500, 501],\r\n        maxChunkRetries: 1,\r\n        chunkRetryInterval: 5000,\r\n        simultaneousUploads: 4,\r\n        singleFile: true\r\n    };\r\n        $compileProvider.aHrefSanitizationWhitelist(/^\\s*(https?|mailto|whatsapp):/);\r\n\r\n}]);\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/main/webapp/resources/js/main-controller/mainController.js\n ** module id = 6\n ** module chunks = 0\n **/","/**\r\n * Created by hasiermetal on 16/03/14.\r\n */\r\naporlaofertaApp\r\n    .directive('ngAccountCreation', function () {\r\n        return {\r\n            restrict: 'A',\r\n            templateUrl: 'resources/js/account/account-signup/createAccount.jsp',\r\n            scope: {\r\n                overheadDisplay: '=',\r\n                customCloseCallback: '=',\r\n                displayCallback: '='\r\n            },\r\n            controller: ['$scope', 'requestManager', 'configService', 'vcRecaptchaService', 'alertService','accountHelper',\r\n                function ($scope, requestManager, configService, vcRecaptchaService, alertService,accountHelper) {\r\n                    $scope.theUser = {};\r\n                    $scope.widgetId = null;\r\n                    $scope.publicKey = \"6LdqHQoTAAAAAAht2VhkrLGU26eBOjL-nK9zXxcn\";\r\n                    $scope.disableNickname = false;\r\n                    $scope.passwordUpdateRequired = true;\r\n                    $scope.validMail = accountHelper.validMail;\r\n                    $scope.validPassword = accountHelper.validPassword;\r\n                    $scope.createAccount = function (theUser) {\r\n                        if (vcRecaptchaService.getResponse($scope.widgetId) === \"\") {\r\n                            $scope.displayErrorMessageAndDisplayAccount();\r\n                        }\r\n                        else {\r\n                            delete $scope.theUser.oldPassword;\r\n                            $scope.processing = true;\r\n                            requestManager.makePostCall(theUser, {recaptcha: vcRecaptchaService.getResponse($scope.widgetId)}, configService.getEndpoint('create.account'))\r\n                                .success(function (data) {\r\n                                    $scope.processAccountResponse(data);\r\n                                }).error(function () {\r\n                                    $scope.accountDefaultError();\r\n                                }).finally(function () {\r\n                                    $scope.processing = false;\r\n                                });\r\n                            $scope.theUser = {};\r\n                            $scope.userPassword2 = \"\";\r\n                            //$scope.overheadDisplay = false;\r\n                        }\r\n                    }\r\n                    $scope.displayErrorMessageAndDisplayAccount = function () {\r\n                        alertService.sendErrorMessage(\"Por favor, haga click en el captcha para demostrar que no es un robot\");\r\n                        $scope.restartRecaptcha();\r\n                        $scope.customCloseCallback = $scope.displayCallback;\r\n                    }\r\n                    $scope.processAccountResponse = function (data) {\r\n                        if (!alertService.isAllOk(data)) {\r\n                            $scope.accountError(data.descriptionEsp);\r\n                        }\r\n                        else {\r\n                            alertService.sendErrorMessage(data.descriptionEsp);\r\n                            $scope.customCloseCallback = false;\r\n                        }\r\n                        $scope.restartRecaptcha();\r\n                    }\r\n                    $scope.restartRecaptcha = function () {\r\n                        vcRecaptchaService.reload($scope.widgetId);\r\n                    }\r\n\r\n                    $scope.accountDefaultError = function () {\r\n                        alertService.sendDefaultErrorMessage();\r\n                        vcRecaptchaService.reload($scope.widgetId);\r\n                        $scope.customCloseCallback = $scope.displayCallback;\r\n                    }\r\n\r\n                    $scope.accountError = function (customMessage) {\r\n                        alertService.sendErrorMessage(customMessage);\r\n                        $scope.restartRecaptcha();\r\n                        $scope.customCloseCallback = $scope.displayCallback;\r\n                    };\r\n\r\n                    $scope.setWidgetId = function (widgetId) {\r\n                        $scope.widgetId = widgetId;\r\n                    };\r\n                }]\r\n        }\r\n    });\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/main/webapp/resources/js/account/account-signup/ngAccountCreationDirective.js\n ** module id = 7\n ** module chunks = 0\n **/","/**\r\n * Created by hasiermetal on 22/06/15.\r\n */\r\naporlaofertaApp\r\n    .directive('ngAccountUpdate', function () {\r\n        return {\r\n            restrict: 'A',\r\n            templateUrl: 'resources/js/account/account-signup/createAccount.jsp',\r\n            scope: {\r\n                overheadDisplay: '=',\r\n                customCloseCallback: '=',\r\n                displayCallback: '='\r\n            },\r\n            controller: ['$scope', 'vcRecaptchaService', 'alertService', '$http', 'requestManager', 'configService', '$rootScope','accountHelper',\r\n                function ($scope, vcRecaptchaService, alertService, http, requestManager, configService, $rootScope,accountHelper) {\r\n                    $scope.disableNickname = true;\r\n                    $scope.theUser = {};\r\n                    $scope.widgetId = null;\r\n                    $scope.passwordUpdateRequired = false;\r\n                    $scope.validMail = accountHelper.validMail;\r\n                    $scope.validPassword = accountHelper.validPassword;\r\n                    $scope.publicKey = \"6LdqHQoTAAAAAAht2VhkrLGU26eBOjL-nK9zXxcn\";\r\n                    $scope.createAccount = function (theUser) {\r\n                        if (vcRecaptchaService.getResponse($scope.widgetId) === \"\") {\r\n                            $scope.displayErrorMessageAndDisplayAccount();\r\n                        }\r\n                        else {\r\n                            $scope.processing = true;\r\n                            requestManager.makePostCall(theUser, {recaptcha: vcRecaptchaService.getResponse($scope.widgetId)}, configService.getEndpoint('update.account'))\r\n                                .success(function (data) {\r\n                                    if ($scope.processAccountResponse(data)) {\r\n                                        $rootScope.$broadcast('userAvatar', angular.copy(theUser));\r\n                                    }\r\n                                }).error(function () {\r\n                                    $scope.accountDefaultError();\r\n                                })\r\n                                .finally(function () {\r\n                                    $scope.processing = false;\r\n                                    $scope.getUserDetails();\r\n                                    $scope.passwordUpdateRequired = false;\r\n                                });\r\n                            //$scope.theUser = {};\r\n                            //$scope.overheadDisplay = false;\r\n                        }\r\n                    }\r\n\r\n                    $scope.processLogin = function(){\r\n                        $rootScope.$broadcast('userLoginRequest');\r\n                    }\r\n\r\n                    $scope.getUserDetails = function () {\r\n                        requestManager.makePostCall({}, {}, configService.getEndpoint('get.account.details'))\r\n                            .success(function (data, status, headers, config) {\r\n                                $scope.theUser = data;\r\n                            }).error(function (data, status, headers, config) {\r\n                                alertService.sendErrorMessage(\"No se ha podido obtener la información del usuario\");\r\n                                $scope.customCloseCallback = false;\r\n                            });\r\n                    }\r\n                    $scope.getUserDetails();\r\n\r\n                    $scope.resetPassword=function(){\r\n                        $scope.theUser.oldPassword=null;\r\n                        $scope.theUser.userSpecifiedPassword=null;\r\n                        $scope.userPassword2=null;\r\n                    }\r\n                    $scope.resetEmail=function(){\r\n                        $scope.theUser.userSpecifiedEmail=null;\r\n                    }\r\n\r\n                    $scope.displayErrorMessageAndDisplayAccount = function () {\r\n                        alertService.sendErrorMessage(\"Por favor, haga click en el captcha para demostrar que no es un robot\");\r\n                        $scope.restartRecaptcha();\r\n                        $scope.customCloseCallback = $scope.displayCallback;\r\n                    }\r\n                    $scope.processAccountResponse = function (data) {\r\n                        if (!alertService.isAllOk(data)) {\r\n                            $scope.accountError(data.descriptionEsp);\r\n                        }\r\n                        else {\r\n                            alertService.sendErrorMessage(data.descriptionEsp);\r\n                            return true;\r\n                        }\r\n                        $scope.restartRecaptcha();\r\n                        return false;\r\n                    }\r\n\r\n                    $scope.accountDefaultError = function () {\r\n                        alertService.sendDefaultErrorMessage();\r\n                        $scope.restartRecaptcha();\r\n                        $scope.customCloseCallback = $scope.displayCallback;\r\n                    }\r\n\r\n                    $scope.accountError = function (customMessage) {\r\n                        alertService.sendErrorMessage(customMessage);\r\n                        $scope.restartRecaptcha();\r\n                        $scope.customCloseCallback = $scope.displayCallback;\r\n                    }\r\n                    $scope.setWidgetId = function (widgetId) {\r\n                        $scope.widgetId = widgetId;\r\n                    };\r\n                    $scope.restartRecaptcha = function () {\r\n                        vcRecaptchaService.reload($scope.widgetId);\r\n                    }\r\n                }]\r\n        }\r\n    });\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/main/webapp/resources/js/account/account-signup/ngAccountUpdateDirective.js\n ** module id = 8\n ** module chunks = 0\n **/","angular.module('pwCheckModule', [])\r\n    .directive('pwCheck', [function () {\r\n        return {\r\n            require: 'ngModel',\r\n            link: function (scope, elem, attrs, ctrl) {\r\n                var firstPassword = '#' + attrs.pwCheck;\r\n                elem.add(firstPassword).on('keyup', function () {\r\n                    scope.$apply(function () {\r\n                        var v = elem.val()===$(firstPassword).val();\r\n                        ctrl.$setValidity('pwmatch', v);\r\n                    });\r\n                });\r\n            }\r\n        }\r\n    }]);\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/main/webapp/resources/js/account/account-signup/pwdCheck.js\n ** module id = 9\n ** module chunks = 0\n **/","var accountHelper = angular.module('accountHelper', []);\r\n\r\naccountHelper.service('accountHelper', [\r\n    function () {\r\n        var accountUtils = {};\r\n\r\n        accountUtils.validMail = /^[_a-z0-9-]+(\\.[_a-z0-9-]+)*(\\+[a-z0-9-]+)?@[a-z]+\\.[a-z.]{2,5}$/;\r\n        accountUtils.validPassword = /^(?=.*?)(?=.*?[a-z])(?=.*?[0-9])(?=.*?).{8,}$/;\r\n\r\n        return accountUtils;\r\n    }]);\r\n\r\n\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/main/webapp/resources/js/account/account-signup/accountHelper.js\n ** module id = 10\n ** module chunks = 0\n **/","/**\r\n * Created by hasiermetal on 16/03/14.\r\n */\r\naporlaofertaApp\r\n    .directive('ngAccountLogin', function () {\r\n        return {\r\n            restrict: 'A',\r\n            templateUrl: 'view/login.jsp',\r\n            controller: ['$scope', 'requestManager', 'configService', 'alertService',\r\n                function ($scope, requestManager, configService, alertService) {\r\n                    $scope.validMail = /^[_a-z0-9-]+(\\.[_a-z0-9-]+)*(\\+[a-z0-9-]+)?@[a-z]+\\.[a-z.]{2,5}$/;\r\n                    $scope.processLogin=function(){\r\n                        $scope.processing=true;\r\n                        angular.element('#loginForm').trigger('submit');\r\n                    }\r\n\r\n                    $scope.requestPassword = function (userEmail) {\r\n                        $scope.processing = true;\r\n\r\n                        requestManager.makePostCall(userEmail, {userEmail: userEmail}, configService.getEndpoint('password.forgotten.request'))\r\n                            .success(function (data, status, headers, config) {\r\n                                $scope.processAccountResponse(data);\r\n                            }).error(function (data, status, headers, config) {\r\n                                $scope.accountDefaultError();\r\n                            }).finally(function () {\r\n                                $scope.processing = false;\r\n                            });\r\n                    }\r\n\r\n                    $scope.processAccountResponse = function (data) {\r\n                        alertService.sendErrorMessage(data.descriptionEsp);\r\n                        if ($scope.restartRecaptcha) {\r\n                            $scope.restartRecaptcha();\r\n                        }\r\n                    }\r\n\r\n                    $scope.accountDefaultError = function () {\r\n                        alertService.sendDefaultErrorMessage();\r\n                    }\r\n\r\n                }]\r\n        }\r\n    });\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/main/webapp/resources/js/account/account-login/ngAccountLoginDirective.js\n ** module id = 11\n ** module chunks = 0\n **/","/**\r\n * Created by hasiermetal on 16/03/14.\r\n */\r\naporlaofertaApp\r\n    .directive('ngAccountLogout', function () {\r\n        return {\r\n            restrict: 'A',\r\n            templateUrl: 'resources/js/account/account-logout/profile.jsp',\r\n            scope: {\r\n                accountUpdate: '='\r\n            },\r\n            controller: ['$scope', 'alertService', 'requestManager', 'configService', function ($scope, alertService, requestManager, configService) {\r\n                $scope.profileOptions = [\r\n                    {text: 'Actualizar perfil', value: 'accountUpdate'},\r\n                    {text: 'Cerrar sesión', value: 'formSubmit'}\r\n                ];\r\n                $scope.defaultProfileModel = {\r\n                    text: \"Opciones\"\r\n                };\r\n                $scope.profileModel = angular.copy($scope.defaultProfileModel);\r\n\r\n                $scope.$watch('profileModel', function () {\r\n                    if ($scope.profileModel.text !== \"Opciones\") {\r\n                        $scope[$scope.profileModel.value]();\r\n                        $scope.profileModel = angular.copy($scope.defaultProfileModel);\r\n                    }\r\n                });\r\n\r\n                $scope.getUserDetails = function () {\r\n                    requestManager.makePostCall({}, {}, configService.getEndpoint('get.account.details'))\r\n                        .success(function (data) {\r\n                            $scope.userAvatar = data.userAvatar;\r\n                        }).error(function () {\r\n                            alertService.sendErrorMessage(\"No se ha podido obtener la información del usuario\");\r\n                            $scope.customCloseCallback = false;\r\n                        });\r\n                }\r\n\r\n\r\n                $scope.getUserDetails();\r\n\r\n                $scope.formSubmit = function () {\r\n                    $scope.logoutForm.submit();\r\n                }\r\n\r\n                $scope.$on('userAvatar', function (event, args) {\r\n                    $scope.userAvatar = args.userAvatar;\r\n                });\r\n\r\n                $scope.formSubmit = function () {\r\n                    document.getElementById(\"logoutForm\").submit();\r\n                }\r\n            }]\r\n        }\r\n    });\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/main/webapp/resources/js/account/account-logout/ngAccountLogoutDirective.js\n ** module id = 12\n ** module chunks = 0\n **/","/**\r\n * Created by hasiermetal on 16/03/14.\r\n */\r\naporlaofertaApp\r\n    .directive('ngOfferList', function () {\r\n        return {\r\n            restrict: 'A',\r\n            templateUrl: 'resources/js/offer/offer-list/offerList.html',\r\n            scope: {\r\n                defaultList: '='\r\n            },\r\n            controller: ['$scope', 'offerManager', 'offerHelper',\r\n                function ($scope, offerManager,offerHelper) {\r\n                    $scope.offerList = [];\r\n                    $scope.moreOffersLoading = true;\r\n                    $scope.lastOffer = 0;\r\n\r\n                    $scope.showMoreOffers = function (lastOffer) {\r\n                        $scope.moreOffersLoading = true;\r\n                        $scope.offerFilter.hot = $scope.defaultList === 'hottestOffers';\r\n                        if (!$scope.isCategorySelected()) {\r\n                            $scope.offerFilter.selectedcategory = \"\";\r\n                        }\r\n                        offerManager.requestMoreOffers($scope.offerFilter, lastOffer,\r\n                            function (data) {\r\n                                $scope.offerList = $scope.offerList.concat(data);\r\n                                $scope.moreOffersLoading = false;\r\n                            }, function () {\r\n                                $scope.moreOffersLoading = false;\r\n                            });\r\n                    }\r\n\r\n                    $scope.updateIndex = function (index) {\r\n                        $scope.lastOffer = index;\r\n                    }\r\n\r\n                    $scope.$on('offerList', function (event, args) {\r\n                        $scope.moreOffersLoading = false;\r\n                        $scope.offerList = args;\r\n                    });\r\n\r\n                    $scope.$on('updatedOffer', function (event, args) {\r\n                        var updatedOffer = args;\r\n                        for (var i = 0; i < $scope.offerList.length; i++) {\r\n                            if ($scope.offerList[i].id == updatedOffer.id) {\r\n                                $scope.offerList[i] = updatedOffer;\r\n                                break;\r\n                            }\r\n                        }\r\n                    });\r\n\r\n                    $scope.$on('removedOffer', function (event, args) {\r\n                        var id = args;\r\n                        for (var i = 0; i < $scope.offerList.length; i++) {\r\n                            if ($scope.offerList[i].id == id) {\r\n                                $scope.offerList.splice(i, 1);\r\n                                break;\r\n                            }\r\n                        }\r\n                    });\r\n\r\n                    $scope.showSpecifications = function (id) {\r\n                        offerManager.showSpecifications(id);\r\n                    }\r\n\r\n                    $scope.initialiseScrollyButtons = function () {\r\n                        $('.scrolly')\r\n                            .scrolly({\r\n                                speed: 1500\r\n                            });\r\n                    }\r\n\r\n                    $scope.parsePrice = function (price) {\r\n                        return offerHelper.parsePrice(price);\r\n                    }\r\n\r\n                    $scope.isCategorySelected = function () {\r\n                        return !offerHelper.isEmptyCategory($scope.offerFilter.selectedcategory);\r\n                    };\r\n\r\n                    $scope.offerFeedbackStyle = function (offer) {\r\n                       return offerHelper.offerFeedbackStyle(offer);\r\n                    }\r\n\r\n                    $scope.$on('appliedOfferFilters', function () {\r\n                        $scope.moreOffersLoading = true;\r\n                    });\r\n\r\n                    $scope.$watch('offerList', function () {\r\n                        $scope.moreOffersLoading = false;\r\n                    });\r\n\r\n                    $scope.initialiseScrollyButtons();\r\n                }]\r\n        }\r\n    });\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/main/webapp/resources/js/offer/offer-list/ngOfferListDirective.js\n ** module id = 13\n ** module chunks = 0\n **/","/**\r\n * Created by hasiermetal on 16/03/14.\r\n */\r\naporlaofertaApp\r\n    .directive('ngPromotionList', function () {\r\n        return {\r\n            restrict: 'A',\r\n            templateUrl: 'resources/js/offer/offer-list/promotionList.html',\r\n            controller: ['$scope', '$rootScope', 'offerManager',\r\n                function ($scope, $rootScope, offerManager) {\r\n                    $scope.defaultList = \"\";\r\n\r\n                    $scope.requestNewestOffers = function () {\r\n                        offerManager.requestNewestOffers();\r\n                        $scope.defaultList = 'newestOffers';\r\n                    }\r\n\r\n                    $scope.requestHottestOffers = function () {\r\n                        offerManager.requestHottestOffers();\r\n                        $scope.defaultList = 'hottestOffers';\r\n                    }\r\n\r\n                    $scope.displayTutorialModal = function () {\r\n                        $rootScope.$broadcast('displayTutorial');\r\n                    }\r\n                }]\r\n        }\r\n    });\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/main/webapp/resources/js/offer/offer-list/ngPromotionListDirective.js\n ** module id = 14\n ** module chunks = 0\n **/","/**\r\n * Created by hasiermetal on 11/06/15.\r\n */\r\naporlaofertaApp\r\n    .directive('ngOfferSpecifications', function () {\r\n        return {\r\n            restrict: 'A',\r\n            templateUrl: 'resources/js/offer/offer-specifications/offerSpecifications.jsp',\r\n            scope: {\r\n                theOffer: '=',\r\n                customCloseCallback: '='\r\n            },\r\n            controller: ['offerManager', 'alertService', '$scope', '$rootScope', 'requestManager', 'configService', 'offerHelper',\r\n                function (offerManager, alertService, $scope, $rootScope, requestManager, configService, offerHelper) {\r\n                    $scope.sharePrefix = \"http://www.aporlaoferta.com/offer?sh=\";\r\n                    $scope.sharePrice = \"€: \";\r\n                    $scope.offer = {};\r\n                    $scope.offerImage = \"/resources/images/offer.png\";\r\n\r\n                    $scope.commentsCustomCloseCallback = {};\r\n\r\n                    $scope.votePositive = function (id) {\r\n                        requestManager.makePostCall({}, {'offerId': id}, configService.getEndpoint('positive.feedback'))\r\n                            .success(function (data) {\r\n                                $scope.sendMessageAndShowSpecifications(data, id, 'offerPositiveVote');\r\n                            }).error(function () {\r\n                            $scope.sendDefaultErrorMessageAndShowSpecifications(id);\r\n                        });\r\n                    }\r\n                    $scope.voteNegative = function (id) {\r\n                        requestManager.makePostCall({}, {'offerId': id}, configService.getEndpoint('negative.feedback'))\r\n                            .success(function (data) {\r\n                                $scope.sendMessageAndShowSpecifications(data, id, 'offerNegativeVote');\r\n                            }).error(function () {\r\n                            $scope.sendDefaultErrorMessageAndShowSpecifications(id);\r\n                        });\r\n                    }\r\n                    $scope.sendMessageAndShowSpecifications = function (data, id, feedback) {\r\n                        if (!alertService.isAllOk(data)) {\r\n                            alertService.sendErrorMessage(data.descriptionEsp);\r\n                            $scope.customCloseCallback = function () {\r\n                                offerManager.showSpecifications(id);\r\n                            }\r\n                        }\r\n                        else {\r\n                            $scope.theOffer[0][feedback] = $scope.theOffer[0][feedback] + 1;\r\n                            offerManager.requestUpdatedOffer(id);\r\n                        }\r\n                    }\r\n                    $scope.sendDefaultErrorMessageAndShowSpecifications = function (id) {\r\n                        alertService.sendDefaultErrorMessage();\r\n                        $scope.customCloseCallback = function () {\r\n                            offerManager.showSpecifications(id);\r\n                        }\r\n                    }\r\n                    $scope.updateOffer = function (theOffer) {\r\n                        $rootScope.$broadcast('updateTheOffer', angular.copy(theOffer));\r\n                    }\r\n\r\n                    $scope.$watch('theOffer', function () {\r\n                        if ($scope.theOffer) {\r\n                            $scope.offer = $scope.theOffer[0];\r\n                            $scope.offerImage = $scope.theOffer[0].offerImage;\r\n                        }\r\n                    });\r\n\r\n                    $scope.expireOffer = function (theOffer) {\r\n                        requestManager.makePostCall({}, {'id': theOffer.id}, configService.getEndpoint('expire.offer'))\r\n                            .success(function (data) {\r\n                                if (!alertService.isAllOk(data)) {\r\n                                    alertService.sendErrorMessage(data.descriptionEsp);\r\n                                }\r\n                                else {\r\n                                    alertService.sendErrorMessage(data.descriptionEsp);\r\n                                    $scope.customCloseCallback = function () {\r\n                                        offerManager.requestUpdatedOffer(theOffer.id);\r\n                                    }\r\n                                }\r\n                            }).error(function () {\r\n                            alertService.sendDefaultErrorMessage();\r\n                        });\r\n                    }\r\n\r\n                    $scope.banUser = function (nickname) {\r\n                        requestManager.makePostCall({}, {'nickname': nickname}, configService.getEndpoint('ban.user'))\r\n                            .success(function (data) {\r\n                                alertService.sendErrorMessage(data.descriptionEsp);\r\n                            }).error(function () {\r\n                            alertService.sendDefaultErrorMessage();\r\n                        });\r\n                    }\r\n\r\n                    $scope.removeOffer = function (id) {\r\n                        requestManager.makePostCall({}, {'id': id}, configService.getEndpoint('remove.offer'))\r\n                            .success(function (data) {\r\n                                alertService.sendErrorMessage(data.descriptionEsp);\r\n                                $scope.customCloseCallback = function () {\r\n                                    $rootScope.$broadcast('removedOffer', id);\r\n                                }\r\n                            }).error(function () {\r\n                            alertService.sendDefaultErrorMessage();\r\n                        });\r\n                    }\r\n\r\n                    $scope.parsePrice = function (price) {\r\n                        return offerHelper.parsePrice(price);\r\n                    }\r\n\r\n                    $scope.offerFeedbackStyle = function (offer) {\r\n                        return offerHelper.offerFeedbackStyle(offer);\r\n                    }\r\n\r\n                    $scope.processLogin = function () {\r\n                        $rootScope.$broadcast('userLoginRequest');\r\n                    }\r\n\r\n                    $scope.processRegister = function () {\r\n                        $rootScope.$broadcast('userRegisterRequest');\r\n                    }\r\n\r\n                    $scope.$on('commentsCustomCloseCallback', function (event, args) {\r\n                        var customCallback = args;\r\n                        $scope.customCloseCallback = customCallback;\r\n                    });\r\n                }]\r\n        }\r\n    })\r\n;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/main/webapp/resources/js/offer/offer-specifications/ngOfferSpecifications.js\n ** module id = 15\n ** module chunks = 0\n **/","/**\r\n * Created by hasiermetal on 08/08/16.\r\n */\r\naporlaofertaApp\r\n    .directive('ngQuickTutorial', function () {\r\n        return {\r\n            restrict: 'A',\r\n            scope: {\r\n                isDisplayed: '=',\r\n            },\r\n            templateUrl: 'resources/js/header-display/tutorial/quickTutorial.jsp',\r\n            controller: ['$scope', '$element', '$timeout',\r\n                function ($scope, $element, $timeout) {\r\n                    $scope.shareUrl = \"http://www.aporlaoferta.com\";\r\n                    $scope.shareText = $(\"meta[property='og:description']\").attr(\"content\");\r\n\r\n                    $scope.$watch('isDisplayed', function () {\r\n                        if ($scope.isDisplayed) {\r\n                            $scope.refreshTutorial();\r\n                            $timeout(function () {\r\n                                $scope.refreshTutorial();\r\n                            }, 300);\r\n                        }\r\n                    });\r\n\r\n                    $scope.refreshTutorial = function () {\r\n                        $element.resize();\r\n                        $element.find('.slick-dots li:first a').trigger('click');\r\n                        $scope.isDisplayed = 0;\r\n                    }\r\n\r\n                    $scope.requestNewestOffers = function(){\r\n\r\n                    }\r\n\r\n                    $scope.requestHottestOffers = function(){\r\n\r\n                    }\r\n\r\n                }]\r\n        }\r\n    });\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/main/webapp/resources/js/header-display/tutorial/ngQuickTutorial.js\n ** module id = 16\n ** module chunks = 0\n **/","/**\r\n * Created by hasiermetal on 14/08/16.\r\n */\r\naporlaofertaApp\r\n    .directive('ngFooter', function () {\r\n        return {\r\n            restrict: 'A',\r\n            templateUrl: 'resources/js/footer/footer.jsp',\r\n            controller: ['$scope', '$rootScope',\r\n                function ($scope, $rootScope) {\r\n                    $scope.displayTutorialModal = function () {\r\n                        $rootScope.$broadcast('displayTutorial');\r\n                    }\r\n                }]\r\n        }\r\n    });\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/main/webapp/resources/js/footer/ngFooterDirective.js\n ** module id = 17\n ** module chunks = 0\n **/","/**\r\n * Created by hasiermetal on 11/06/15.\r\n */\r\naporlaofertaApp\r\n    .directive('ngOfferComments', function () {\r\n        return {\r\n            restrict: 'A',\r\n            templateUrl: 'resources/js/offer/offer-specifications/offer-comments/' +\r\n            'offerComments.jsp',\r\n            scope: {\r\n                theComments: '=',\r\n                theOffer: '=',\r\n                commentsCustomCloseCallback: '='\r\n            },\r\n            controller: ['$filter', 'alertService', '$scope', '$rootScope', 'requestManager', 'configService', 'offerManager',\r\n                function ($filter, alertService, $scope, $rootScope, requestManager, configService, offerManager) {\r\n                    $scope.quoteActionEnable = -1;\r\n                    $scope.qComment = {};\r\n                    $scope.comment = {};\r\n                    $scope.getQuotedComment = function (id, comments) {\r\n                        return $filter('filter')(comments, {id: id})[0];\r\n                    }\r\n\r\n                    $scope.quoteAction = function (id) {\r\n                        if ($scope.quoteActionEnable == id) {\r\n                            $scope.quoteActionEnable = -1;\r\n                        }\r\n                        else {\r\n                            $scope.quoteActionEnable = id;\r\n                        }\r\n                    }\r\n\r\n                    $scope.isQuoteActionEnabled = function (id) {\r\n                        return $scope.quoteActionEnable == id;\r\n                    }\r\n\r\n                    $scope.writeComment = function (comment, id) {\r\n                        $scope.processing = true;\r\n                        requestManager.makePostCall(comment, {'offer': id}, configService.getEndpoint('create.comment'))\r\n                            .success(function (data, status, headers, config) {\r\n                                $scope.sendMessageAndShowSpecifications(data.descriptionEsp);\r\n                            }).error(function (data, status, headers, config) {\r\n                            $scope.sendDefaultErrorMessageAndShowSpecifications();\r\n                        }).finally(function () {\r\n                            $scope.processing = false;\r\n                        });\r\n                    };\r\n\r\n                    $scope.quoteComment = function (comment, id) {\r\n                        $scope.processing = true;\r\n                        requestManager.makePostCall(comment, {'quotedComment': id}, configService.getEndpoint('quote.comment'))\r\n                            .success(function (data, status, headers, config) {\r\n                                $scope.sendMessageAndShowSpecifications(data.descriptionEsp);\r\n                            }).error(function (data, status, headers, config) {\r\n                            $scope.sendDefaultErrorMessageAndShowSpecifications();\r\n                        }).finally(function () {\r\n                            $scope.processing = false;\r\n                        });\r\n                    }\r\n\r\n                    $scope.sendMessageAndShowSpecifications = function (message) {\r\n                        //alertService.sendErrorMessage(message);\r\n                        //$scope.updateViewAndCloseCallback();\r\n                        $scope.restartCommentTexts();\r\n                        offerManager.showSpecifications($scope.theOffer);\r\n                    }\r\n\r\n                    $scope.sendDefaultErrorMessageAndShowSpecifications = function () {\r\n                        alertService.sendDefaultErrorMessage();\r\n                        $scope.updateViewAndCloseCallback();\r\n                    }\r\n\r\n                    $scope.updateViewAndCloseCallback = function () {\r\n                        $scope.commentsCustomCloseCallback = function () {\r\n                            offerManager.showSpecifications($scope.theOffer);\r\n                        }\r\n                        $rootScope.$broadcast('commentsCustomCloseCallback', $scope.commentsCustomCloseCallback);\r\n                        $scope.restartCommentTexts();\r\n                    }\r\n\r\n                    $scope.restartCommentTexts = function () {\r\n                        $scope.comment.commentText = \"\";\r\n                        $scope.qComment.commentText = \"\";\r\n                    }\r\n\r\n                    $scope.processLogin = function(){\r\n                        $rootScope.$broadcast('userLoginRequest');\r\n                    }\r\n\r\n                    $scope.processRegister = function(){\r\n                        $rootScope.$broadcast('userRegisterRequest');\r\n                    }\r\n\r\n                    $scope.deleteComment = function (id) {\r\n                        requestManager.makePostCall({}, {'comment': id}, configService.getEndpoint('delete.comment'))\r\n                            .success(function (data) {\r\n                                $scope.sendMessageAndShowSpecifications(data.descriptionEsp);\r\n                            }).error(function () {\r\n                            $scope.sendDefaultErrorMessageAndShowSpecifications();\r\n                        });\r\n                    }\r\n\r\n                    $scope.banUser = function (nickname) {\r\n                        requestManager.makePostCall({}, {'nickname': nickname}, configService.getEndpoint('ban.user'))\r\n                            .success(function (data) {\r\n                                alertService.sendErrorMessage(data.descriptionEsp);\r\n                            }).error(function () {\r\n                            alertService.sendErrorMessage(data.descriptionEsp);\r\n                        });\r\n                    }\r\n                }\r\n            ]\r\n        }\r\n    })\r\n;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/main/webapp/resources/js/offer/offer-specifications/offer-comments/ngOfferComments.js\n ** module id = 18\n ** module chunks = 0\n **/","/**\r\n * Created by hasiermetal on 26/06/15.\r\n */\r\naporlaofertaApp\r\n    .directive('ngOfferCommentsQuotes', function () {\r\n        return {\r\n            restrict: 'A',\r\n            templateUrl: 'resources/js/offer/offer-specifications/offer-comments/' +\r\n                'commentsQuotes.jsp',\r\n            scope: {\r\n                theComments: '=',\r\n                quotedComment: '='\r\n            },\r\n            controller: ['$rootScope', '$scope', 'requestManager', 'configService', function ($rootScope, $scope, requestManager, configService) {\r\n                $scope.quoteActionEnable = -1;\r\n                $scope.quoteAction = function (id) {\r\n                    if ($scope.quoteActionEnable == id) {\r\n                        $scope.quoteActionEnable = -1;\r\n                    }\r\n                    else {\r\n                        $scope.quoteActionEnable = id;\r\n                    }\r\n                }\r\n                $scope.isQuoteActionEnabled = function (id) {\r\n                    return $scope.quoteActionEnable == id;\r\n                }\r\n                $scope.quoteComment = function (comment, id) {\r\n                    requestManager.makePostCall(comment, {'quotedComment': id}, configService.getEndpoint('quote.comment'))\r\n                        .success(function (data, status, headers, config) {\r\n                            $rootScope.$broadcast('serverResponse', data);\r\n                            $scope.qComment.commentText=\"\";\r\n                        }).error(function (data, status, headers, config) {\r\n                            var theResponse = {};\r\n                            theResponse.description = data;\r\n                            theResponse.responseResult = \"error\";\r\n                            $rootScope.$broadcast('serverResponse', theResponse);\r\n                        });\r\n                };\r\n\r\n            }]\r\n        }\r\n    });\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/main/webapp/resources/js/offer/offer-specifications/offer-comments/ngOfferCommentsQuotes.js\n ** module id = 19\n ** module chunks = 0\n **/","/**\r\n * Created by hasiermetal on 16/03/14.\r\n */\r\naporlaofertaApp\r\n    .directive('ngOfferCreation', function () {\r\n        return {\r\n            restrict: 'A',\r\n            templateUrl: 'resources/js/offer/offer-creation/offerCreation.html',\r\n            scope: {\r\n                overheadDisplay: '=',\r\n                customCloseCallback: '=',\r\n                displayCallback: '='\r\n            },\r\n            controller: ['$scope', '$rootScope', 'offerManager', 'requestManager', 'configService', 'alertService', 'vcRecaptchaService', 'offerHelper',\r\n                function ($scope, $rootScope, offerManager, requestManager, configService, alertService, vcRecaptchaService,offerHelper) {\r\n                    $scope.offer = {};\r\n                    $scope.widgetId = null;\r\n                    $scope.publicKey = \"6LdqHQoTAAAAAAht2VhkrLGU26eBOjL-nK9zXxcn\";\r\n                    $scope.resetCategory = true;\r\n\r\n                    $scope.createOffer = function () {\r\n                        if (vcRecaptchaService.getResponse($scope.widgetId) === \"\") {\r\n                            $scope.offerCreationError(\"Por favor, haga click en el captcha para demostrar que no es un robot\");\r\n                            vcRecaptchaService.reload($scope.widgetId);\r\n                        }\r\n                        else {\r\n                            $scope.processing = true;\r\n                            requestManager.makePostCall($scope.parseOffer(), {recaptcha: vcRecaptchaService.getResponse($scope.widgetId)}, configService.getEndpoint('create.offer'))\r\n                                .success(function (data) {\r\n                                    if (!alertService.isAllOk(data)) {\r\n                                        $scope.offerCreationError(data.descriptionEsp);\r\n                                    }\r\n                                    else {\r\n                                        alertService.sendErrorMessage(data.descriptionEsp);\r\n                                        $scope.resetValues();\r\n                                        $scope.customCloseCallback = function () {\r\n                                            offerManager.requestNewestOffers();\r\n                                        }\r\n                                    }\r\n                                }).error(function () {\r\n                                    $scope.offerCreationError(alertService.getDefaultMessage());\r\n                                }).finally(function () {\r\n                                    $scope.processing = false;\r\n                                });\r\n                            //$scope.overheadDisplay = false;\r\n                        }\r\n                    };\r\n\r\n                    $scope.parseOffer = function () {\r\n                        var theOffer = angular.copy($scope.offer);\r\n                        try {\r\n                            theOffer.originalPrice = parseFloat(theOffer.originalPrice.replace(/,/, '.'));\r\n                        } catch (e) {/*float already*/\r\n                        }\r\n                        try {\r\n                            theOffer.finalPrice = parseFloat(theOffer.finalPrice.replace(/,/, '.'));\r\n                        } catch (e) {/*float already*/\r\n                        }\r\n                        return theOffer;\r\n                    }\r\n\r\n                    $scope.restartRecaptcha = function () {\r\n                        vcRecaptchaService.reload($scope.widgetId);\r\n                    }\r\n\r\n                    $scope.offerCreationError = function (customMessage) {\r\n                        alertService.sendErrorMessage(customMessage);\r\n                        $scope.restartRecaptcha();\r\n                        $scope.customCloseCallback = $scope.displayCallback;\r\n                    }\r\n\r\n                    $scope.bigDecimalsOnly = /^\\-?\\d+((\\.|\\,)\\d+)?$/;\r\n                    $scope.resetValues = function () {\r\n                        $scope.restartRecaptcha();\r\n                        $scope.offer = {};\r\n                        $scope.brandNewCompany = false;\r\n                        $scope.resetCategory = true;\r\n                        $scope.resetImage = true;\r\n                    };\r\n                    $scope.setWidgetId = function (widgetId) {\r\n                        $scope.widgetId = widgetId;\r\n                    };\r\n\r\n                    $scope.isCompanyDefined = function () {\r\n                        if ($scope.offer) {\r\n                            return $scope.offer.offerCompany && $scope.offer.offerCompany.companyName;\r\n                        }\r\n                    };\r\n\r\n                    $scope.isCategorySelected = function () {\r\n                        return !offerHelper.isEmptyCategory($scope.offer.offerCategory);\r\n                    };\r\n\r\n                    $scope.selectionPerformed = function () {\r\n                        return $scope.isCompanyDefined() && $scope.isCategorySelected();\r\n                    }\r\n\r\n                    $scope.offerCompanies = {};\r\n\r\n                    $scope.suggest_company=function(term) {\r\n                        var q = term.toLowerCase().trim();\r\n                        var results = [];\r\n                        for (var i = 0; i < $scope.offerCompanies.length && results.length < 10; i++) {\r\n                            var company = $scope.offerCompanies[i].companyName;\r\n                            if (company.toLowerCase().indexOf(q) === 0)\r\n                                results.push({ label: company, value: company });\r\n                        }\r\n                        return results;\r\n                    }\r\n\r\n                    $scope.autocomplete_options = {\r\n                        suggest: $scope.suggest_company\r\n                    };\r\n\r\n                    $scope.populateCompanyList = function () {\r\n                        requestManager.makePostCall({}, {}, configService.getEndpoint('get.companies'))\r\n                            .success(function (data, status, headers, config) {\r\n                                $scope.offerCompanies = angular.copy(data);\r\n                            }).error(function (data, status, headers, config) {\r\n                            var theResponse = {};\r\n                            theResponse.description = data;\r\n                            theResponse.responseResult = \"error\";\r\n                            $rootScope.$broadcast('serverResponse', theResponse);\r\n                        });\r\n                    };\r\n\r\n                    $scope.populateCompanyList();\r\n                }]\r\n        }\r\n    });\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/main/webapp/resources/js/offer/offer-creation/ngOfferCreationDirective.js\n ** module id = 20\n ** module chunks = 0\n **/","/**\r\n * Created by hasiermetal on 16/03/14.\r\n */\r\naporlaofertaApp\r\n    .directive('ngOfferUpdate', function () {\r\n        return {\r\n            restrict: 'A',\r\n            templateUrl: 'resources/js/offer/offer-creation/offerCreation.html',\r\n            scope: {\r\n                overheadDisplay: '=',\r\n                customCloseCallback: '=',\r\n                displayCallback: '=',\r\n                offer: \"=\"\r\n            },\r\n            controller: ['$scope', 'offerManager', 'requestManager', 'configService', 'alertService', 'vcRecaptchaService',\r\n                function ($scope, offerManager, requestManager, configService, alertService, vcRecaptchaService) {\r\n                    $scope.widgetId = null;\r\n                    $scope.publicKey = \"6LdqHQoTAAAAAAht2VhkrLGU26eBOjL-nK9zXxcn\";\r\n                    $scope.createOffer = function () {\r\n                        if (vcRecaptchaService.getResponse($scope.widgetId) === \"\") {\r\n                            $scope.offerCreationError(\"Por favor, haga click en el captcha para demostrar que no es un robot\");\r\n                            vcRecaptchaService.restartRecaptcha();\r\n                        }\r\n                        else {\r\n                            $scope.processing = true;\r\n                            requestManager.makePostCall($scope.parseOffer(), {recaptcha: vcRecaptchaService.getResponse($scope.widgetId)}, configService.getEndpoint('update.offer'))\r\n                                .success(function (data) {\r\n                                    if (!alertService.isAllOk(data)) {\r\n                                        $scope.offerCreationError(data.descriptionEsp);\r\n                                    }\r\n                                    else {\r\n                                        alertService.sendErrorMessage(data.descriptionEsp);\r\n                                        $scope.resetValues();\r\n                                        offerManager.requestUpdatedOffer(data.other);\r\n                                        $scope.customCloseCallback = function () {\r\n                                        }\r\n                                    }\r\n                                }).error(function () {\r\n                                    $scope.offerCreationError(alertService.getDefaultMessage());\r\n                                }).finally(function () {\r\n                                    $scope.processing = false;\r\n                                });\r\n                            //$scope.overheadDisplay = false;\r\n                        }\r\n                    };\r\n\r\n                    $scope.parseOffer = function () {\r\n                        var theOffer = angular.copy($scope.offer);\r\n                        try {\r\n                            theOffer.originalPrice = parseFloat(theOffer.originalPrice.replace(/,/, '.'));\r\n                        } catch (e) {/*float already*/\r\n                        }\r\n                        try {\r\n                            theOffer.finalPrice = parseFloat(theOffer.finalPrice.replace(/,/, '.'));\r\n                        } catch (e) {/*float already*/\r\n                        }\r\n                        return theOffer;\r\n                    }\r\n\r\n                    $scope.restartRecaptcha = function () {\r\n                        vcRecaptchaService.reload($scope.widgetId);\r\n                    }\r\n\r\n                    $scope.offerCreationError = function (customMessage) {\r\n                        alertService.sendErrorMessage(customMessage);\r\n                        $scope.restartRecaptcha();\r\n                        $scope.customCloseCallback = $scope.displayCallback;\r\n                    }\r\n\r\n                    $scope.bigDecimalsOnly = /^\\-?\\d+((\\.|\\,)\\d+)?$/;\r\n                    $scope.resetValues = function () {\r\n                        $scope.restartRecaptcha();\r\n                        $scope.offer = {};\r\n                        $scope.brandNewCompany = false;\r\n                        $scope.resetCategory = true;\r\n                        $scope.resetCompany = true;\r\n                        $scope.resetImage = true;\r\n                    };\r\n                    $scope.setWidgetId = function (widgetId) {\r\n                        $scope.widgetId = widgetId;\r\n                    };\r\n\r\n                    $scope.isCompanyDefined = function () {\r\n                        if ($scope.offer) {\r\n                            return $scope.offer.offerCompany != undefined && $scope.selectedcompany != \"\";\r\n                        }\r\n                    };\r\n                    $scope.isCategorySelected = function () {\r\n                        return $scope.offer\r\n                            && $scope.offer.offerCategory != \"\"\r\n                            && $scope.offer.offerCategory != null\r\n                            && $scope.offer.offerCategory != undefined\r\n                            && $scope.offer.offerCategory != \"Categoría\"\r\n                            && $scope.offer.offerCategory != \"CATEGORÍA\";\r\n                    };\r\n                    $scope.selectionPerformed = function () {\r\n                        return $scope.isCompanyDefined() && $scope.isCategorySelected();\r\n                    }\r\n                }]\r\n        }\r\n    });\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/main/webapp/resources/js/offer/offer-creation/ngOfferUpdateDirective.js\n ** module id = 21\n ** module chunks = 0\n **/","/**\r\n * Created by hasiermetal on 16/03/14.\r\n */\r\naporlaofertaApp\r\n    .directive('ngOfferCategoryManager', function () {\r\n        return {\r\n            restrict: 'A',\r\n            templateUrl: 'resources/js/offer/offer-creation/offerCategoryManagement.html',\r\n            scope: {\r\n                reset: '=',\r\n                selectedcategory: '=',\r\n                includeAll: '='\r\n            },\r\n            controller: ['$rootScope', '$scope', 'requestManager', 'configService', function ($rootScope, $scope, requestManager, configService) {\r\n                $scope.offerCategories = {};\r\n                $scope.offerCategory = {\r\n                    text: \"CATEGORÍA\",\r\n                    display: \"Categoría\"\r\n                };\r\n                $scope.populateAllCategories = function () {\r\n                    requestManager.makePostCall({}, {}, configService.getEndpoint('get.offer.categories'))\r\n                        .success(function (data) {\r\n                            $scope.offerCategories = angular.copy(data);\r\n                            if ($scope.includeAll) {\r\n                                $scope.offerCategories.push({text: \"TODAS\", value: \"\", display: \"Todas\"})\r\n                            }\r\n                        }).error(function (data) {\r\n                        var theResponse = {};\r\n                        theResponse.description = data;\r\n                        theResponse.responseResult = \"error\";\r\n                        $rootScope.$broadcast('serverResponse', theResponse);\r\n                    });\r\n                }\r\n                $scope.onCategoryChange = function (category) {\r\n                    $scope.selectedcategory = category;\r\n                }\r\n                $scope.populateAllCategories();\r\n                $scope.$watch('reset', function () {\r\n                    if ($scope.reset) {\r\n                        $scope.offerCategory = {\r\n                            text: \"CATEGORÍA\",\r\n                            display: \"Categoría\"\r\n                        };\r\n                    }\r\n                    $scope.reset = false;\r\n                });\r\n                $scope.$watch('offerCategory', function () {\r\n                    $scope.selectedcategory = $scope.offerCategory.text;\r\n                });\r\n                $scope.isCategorySelected = function () {\r\n                    return $scope.category != \"\"\r\n                        && $scope.category != null\r\n                        && $scope.category != undefined;\r\n                };\r\n            }]\r\n        }\r\n    });\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/main/webapp/resources/js/offer/offer-creation/ngOfferCategoryManagerDirective.js\n ** module id = 22\n ** module chunks = 0\n **/","/**\r\n * Created by hasiermetal on 30/06/15.\r\n */\r\naporlaofertaApp\r\n    .directive('ngOfferFilter', function () {\r\n        return {\r\n            restrict: 'A',\r\n            templateUrl: 'resources/js/offer/offer-filter/offerFilter.html',\r\n            scope: {\r\n                offerList: '=',\r\n                selection: '=',\r\n                offerFilter: '='\r\n            },\r\n            controller: ['$scope', '$rootScope', 'requestManager', 'configService','offerHelper',\r\n                function ($scope, $rootScope, requestManager, configService,offerHelper) {\r\n                    $scope.filter = {};\r\n                    $scope.displayFilterContent = \"\";\r\n                    $scope.previousCategory = \"\";\r\n                    $scope.offerFilterContainer = \"offerFilterContainer\";\r\n                    $scope.filterBy = \"filter-by\";\r\n                    $scope.filterByExpiredCheckbox = \"filterByExpiredCheckbox\";\r\n\r\n                    $scope.requestFilterApply = function () {\r\n                        $scope.processing = true;\r\n                        $scope.filter.hot = $scope.selection === 'hottestOffers';\r\n                        if (!$scope.isCategorySelected()) {\r\n                            $scope.filter.selectedcategory = \"\";\r\n                        }\r\n                        $scope.offerFilter = angular.copy($scope.filter);\r\n                        if ($scope.offerFilter.text.length < 3) {\r\n                            $scope.offerFilter.text = \"\";\r\n                        }\r\n                        $rootScope.$broadcast('appliedOfferFilters', angular.copy($scope.offerFilter));\r\n                        requestManager.makePostCall($scope.offerFilter, {}, configService.getEndpoint('get.filtered.offers'))\r\n                            .success(function (data, status, headers, config) {\r\n                                $scope.offerList = data.theOffers;\r\n                            }).error(function (data, status, headers, config) {\r\n                            var theResponse = {};\r\n                            theResponse.description = data;\r\n                            theResponse.responseResult = \"error\";\r\n                            $rootScope.$broadcast('serverResponse', theResponse);\r\n                        }).finally(function () {\r\n                            $scope.processing = false;\r\n                        });\r\n                    };\r\n\r\n                    $scope.$watch('filter.dateRange', function () {\r\n                        $scope.requestFilterApply();\r\n                    });\r\n\r\n                    $scope.searchCriteriaChanged = function () {\r\n                        $scope.offerFilter = angular.copy($scope.filter);\r\n                        if ($scope.filter.text.length > 2 || $scope.filter.text.length == 0) {\r\n                            $scope.requestFilterApply();\r\n                        }\r\n                    };\r\n\r\n                    $scope.$watch('filter.selectedcategory', function () {\r\n                        if (!(offerHelper.isEmptyCategory($scope.previousCategory) &&\r\n                            offerHelper.isEmptyCategory($scope.filter.selectedcategory)) &&\r\n                            $scope.previousCategory !== $scope.filter.selectedcategory) {\r\n                            $scope.previousCategory = $scope.filter.selectedcategory;\r\n                            $scope.requestFilterApply();\r\n                        }\r\n                    });\r\n\r\n                    $scope.cleanFilters = function () {\r\n                        $scope.filter.expired = false;\r\n                        $scope.filter.text = \"\";\r\n                        $scope.resetCategory = true;\r\n                        $scope.filter.selectedcategory = \"\";\r\n                        $scope.filter.selectedcategory = \"\";\r\n                        $scope.filter.dateRange = 1;\r\n//                    $scope.requestFilterApply();\r\n                        $rootScope.$broadcast('appliedOfferFilters', angular.copy($scope.offerFilter));\r\n                    };\r\n\r\n                    $scope.displayFilterContents = function () {\r\n                        $scope.displayFilterContent = ($scope.displayFilterContent == 'filters-displayed') ?\r\n                            'filters-hidden' : 'filters-displayed';\r\n                    };\r\n                    $scope.isCategorySelected = function () {\r\n                        return !offerHelper.isEmptyCategory($scope.filter.selectedcategory);\r\n                    };\r\n\r\n                    $scope.cleanFilters();\r\n                }]\r\n        }\r\n    });\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/main/webapp/resources/js/offer/offer-filter/ngOfferFilterDirective.js\n ** module id = 23\n ** module chunks = 0\n **/","/**\r\n * Created by hasiermetal on 30/06/15.\r\n */\r\naporlaofertaApp\r\n    .directive('ngDummyOfferFilter', function () {\r\n        return {\r\n            restrict: 'A',\r\n            templateUrl: 'resources/js/offer/offer-filter/offerFilter.html',\r\n            controller: ['$scope', function ($scope) {\r\n                $scope.filter = {};\r\n                $scope.offerFilterContainer = \"dummyFilter\";\r\n                $scope.filterBy = \"dummyFilterBy\";\r\n                $scope.filterByExpiredCheckbox = \"dummyFilterByExpiredCheckbox\";\r\n                $scope.cleanFilters = function () {\r\n                    $scope.filter.expired = false;\r\n                    $scope.filter.text = \"\";\r\n                    $scope.resetCategory = true;\r\n                    $scope.filter.dateRange = 1;\r\n                };\r\n\r\n                $scope.displayFilterContents = function () {\r\n                    $scope.displayFilterContent = ($scope.displayFilterContent == 'filters-displayed') ?\r\n                        'filters-hidden' : 'filters-displayed';\r\n                };\r\n\r\n                $scope.cleanFilters();\r\n            }]\r\n        }\r\n    });\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/main/webapp/resources/js/offer/offer-filter/ngDummyOfferFilterDirective.js\n ** module id = 24\n ** module chunks = 0\n **/","/**\r\n * Created by hasiermetal on 16/03/14.\r\n */\r\naporlaofertaApp\r\n    .directive('ngOverheadDisplay', function () {\r\n        return {\r\n            restrict: 'A',\r\n            templateUrl: 'resources/js/header-display/headDisplay.jsp',\r\n            scope: {\r\n                specificOffer: '@',\r\n                specificOfferData: '@',\r\n                overheadVisible: '=',\r\n                noAccounts: '=',\r\n                fullscreen: '=',\r\n                overflowEnabled: '='\r\n            },\r\n            controller: ['$scope', '$window', 'offerManager', '$timeout', '$cookies', 'configService',\r\n                function ($scope, $window, $offerManager, $timeout, $cookies, configService) {\r\n                    $scope.customCloseCallback = {};\r\n                    $scope.theResponse = {};\r\n                    $scope.fullscreen = false;\r\n                    $scope.overflowEnabled=false;\r\n                    $scope.tutorialIsDisplayed = false;\r\n                    $scope.loadingOfferSpecifications = false;\r\n\r\n                    $scope.displayLogin = function () {\r\n                        $scope.setDefaultVisibility();\r\n                        $scope.displayAccountLogin = true;\r\n                        $scope.overheadVisible = true;\r\n                    };\r\n                    $scope.displaySignup = function () {\r\n                        $scope.setDefaultVisibility();\r\n                        $scope.displayAccountCreation = true;\r\n                        $scope.overheadVisible = true;\r\n                    };\r\n                    $scope.displayAccountUpdateForm = function () {\r\n                        $scope.setDefaultVisibility();\r\n                        $scope.displayAccountUpdate = true;\r\n                        $scope.overheadVisible = true;\r\n                    };\r\n                    $scope.displayOfferCreate = function () {\r\n                        $scope.setDefaultVisibility();\r\n                        $scope.displayOfferCreation = true;\r\n                        $scope.overheadVisible = true;\r\n                    };\r\n                    $scope.displayOfferUpdate = function () {\r\n                        $scope.setDefaultVisibility();\r\n                        $scope.displayOfferToBeUpdate = true;\r\n                        $scope.overheadVisible = true;\r\n                    };\r\n                    $scope.displayOfferDetails = function () {\r\n                        $scope.setDefaultVisibility();\r\n                        $scope.displayOfferSpecifications = true;\r\n                        $scope.overheadVisible = true;\r\n                    };\r\n                    $scope.displayOfferLoading = function () {\r\n                        $scope.setDefaultVisibility();\r\n                        $scope.loadingOfferSpecifications = true;\r\n                        $scope.overheadVisible = true;\r\n                    };\r\n                    $scope.displayServerResponse = function () {\r\n                        $scope.setDefaultVisibility();\r\n                        $scope.displayResponseFromServer = true;\r\n                        $scope.overheadVisible = true;\r\n                    }\r\n                    $scope.displayTutorialDiagram = function () {\r\n                        $scope.customCloseCallback = function () {\r\n                            $scope.setTutorialCookie();\r\n                        }\r\n                        $scope.setDefaultVisibility();\r\n                        $scope.displayTutorial = true;\r\n                        $scope.overheadVisible = true;\r\n                        $scope.tutorialIsDisplayed = true;\r\n                    }\r\n                    $scope.setDefaultVisibility = function () {\r\n                        $scope.overheadVisible = false;\r\n                        $scope.displayOfferCreation = false;\r\n                        $scope.displayOfferToBeUpdate = false;\r\n                        $scope.displayAccountLogin = false;\r\n                        $scope.displayAccountCreation = false;\r\n                        $scope.displayAccountUpdate = false;\r\n                        $scope.displayOfferSpecifications = false;\r\n                        $scope.displayResponseFromServer = false;\r\n                        $scope.displayTutorial = false;\r\n                        $scope.tutorialIsDisplayed = false;\r\n                        $scope.loadingOfferSpecifications = false;\r\n                    };\r\n                    $scope.closeOverheadDisplay = function (customCloseCallback) {\r\n                        $scope.setDefaultVisibility();\r\n                        if (typeof customCloseCallback == \"function\") {\r\n                            customCloseCallback();\r\n                            $scope.customCloseCallback = {};\r\n                        }\r\n                    };\r\n                    $scope.$watch('specificOffer', function () {\r\n                        if (/^\\d+$/.exec($scope.specificOffer) != null) {\r\n                            $scope.fullscreen = true;\r\n                            $scope.overflowEnabled=true;\r\n                            $scope.customCloseCallback = function () {\r\n                                $scope.fullscreen = false;\r\n                            };\r\n                            var offerSpecifications = $scope.specificOfferData\r\n                                .replace(new RegExp(\"xx#!!#xx\", 'g'), \"\\\\\\\"\")\r\n                                .replace(new RegExp(\"xx#!#xx\", 'g'), \"'\");\r\n                            $scope.openOfferSpecifications(JSON.parse(offerSpecifications));\r\n                        }\r\n                    });\r\n                    $scope.$on('offerSpecifications', function (event, args) {\r\n                        $scope.openOfferSpecifications(args);\r\n                    });\r\n\r\n                    $scope.openOfferSpecifications = function (offerSpecifications) {\r\n                        $scope.offerSpecifications = offerSpecifications;\r\n                        $scope.loadingOfferSpecifications = false;\r\n                        $scope.displayOfferDetails();\r\n                        $scope.customCloseCallback = function () {\r\n                            $scope.offerSpecifications = [];\r\n                            $scope.fullscreen = false;\r\n                            $scope.overflowEnabled=false;\r\n                        }\r\n                    }\r\n\r\n                    $scope.redirectHome = function () {\r\n                        $window.location.href = '/';\r\n                    };\r\n                    $scope.$on('loadingOfferSpecifications', function () {\r\n                        $scope.displayOfferLoading();\r\n                    });\r\n\r\n                    $scope.$on('updateTheOffer', function (event, args) {\r\n                        $scope.offerSpecifications = [args];\r\n                        $scope.customCloseCallback = function () {\r\n                            $scope.displayOfferDetails();\r\n                        }\r\n                        $scope.displayOfferUpdate();\r\n                    });\r\n\r\n                    $scope.$on('serverResponse', function (event, args) {\r\n                        $scope.theResponse = args;\r\n                        $scope.fullscreen = false;\r\n                        $scope.overflowEnabled=false;\r\n                        $scope.displayServerResponse();\r\n                    });\r\n\r\n                    $scope.$on('displayTutorial', function () {\r\n                        $scope.displayTutorialDiagram();\r\n                    });\r\n\r\n                    $scope.$on('userLoginRequest', function () {\r\n                        $scope.displayLogin();\r\n                    });\r\n\r\n                    $scope.$on('userRegisterRequest', function () {\r\n                        $scope.displaySignup();\r\n                    });\r\n\r\n                    $scope.$on('keydownControl', function (event, args) {\r\n                        var keyDownCode = args;\r\n                        if (keyDownCode == 27) {\r\n                            $scope.justCloseOverheadDisplay();\r\n                        }\r\n                    });\r\n\r\n                    $scope.justCloseOverheadDisplay = function () {\r\n                        $scope.customCloseCallback = {};\r\n                        $scope.closeOverheadDisplay();\r\n                        $scope.fullscreen = false;\r\n                        $scope.overflowEnabled=false;\r\n                    }\r\n\r\n                    $scope.checkForErrors = function () {\r\n                        if (document.getElementById(\"errorMessage\")) {\r\n                            var errorMessage = document.getElementById(\"errorMessage\").value;\r\n                            if (typeof errorMessage != undefined && errorMessage != '') {\r\n                                var theResponse = {};\r\n                                theResponse.descriptionEsp = errorMessage;\r\n                                theResponse.responseResult = \"error\";\r\n                                $scope.theResponse = theResponse;\r\n                                $scope.displayServerResponse();\r\n                            }\r\n                        }\r\n                    };\r\n\r\n                    $scope.setTutorialCookie = function () {\r\n                        var expireDate = new Date();\r\n                        expireDate.setDate(expireDate.getDate() + 365);\r\n                        $cookies.put(configService.getEndpoint('tutorial.cookie'), 'true', {'expires': expireDate});\r\n                    };\r\n\r\n                    $scope.setDefaultVisibility();\r\n                    $scope.checkForErrors();\r\n\r\n                    $timeout(function () {\r\n                        angular.element($('#overheadSubContainer')).removeClass('hiddencontainer');\r\n                    }, 100);\r\n\r\n                }]\r\n        }\r\n    });\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/main/webapp/resources/js/header-display/ngHeadDisplayDirective.js\n ** module id = 25\n ** module chunks = 0\n **/","/**\r\n * Created by hasiermetal on 19/06/16.\r\n */\r\naporlaofertaApp\r\n    .directive('ngHeadAccountAndOfferManagement', ['$window', '$anchorScroll', function ($window, $anchorScroll) {\r\n        return {\r\n            restrict: 'A',\r\n            templateUrl: 'resources/js/header-display/headAccountAndOfferManagement.jsp',\r\n            scope: {\r\n                displayLogin: '=',\r\n                displaySignup: '=',\r\n                displayOfferCreate: '=',\r\n                displayAccountUpdateForm: '='\r\n            },\r\n            link: function ($scope) {\r\n                $scope.shareUrl = \"http://www.aporlaoferta.com\";\r\n                $scope.shareText = $(\"meta[property='og:description']\").attr(\"content\");\r\n                $scope.scrollPosition = true;\r\n                angular.element($window).bind(\"scroll\", function () {\r\n                    $scope.scrollPosition = this.pageYOffset <= 50;\r\n                    $scope.$apply();\r\n                });\r\n                $scope.toTheTop = function () {\r\n                    $anchorScroll();\r\n                }\r\n            }\r\n        }\r\n    }]);\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/main/webapp/resources/js/header-display/ngHeadAccountAndOfferManagementDirective.js\n ** module id = 26\n ** module chunks = 0\n **/","/**\r\n * Created by hasiermetal on 10/08/16.\r\n */\r\naporlaofertaApp\r\n    .directive('ngMainSlogan', function () {\r\n        return {\r\n            restrict: 'A',\r\n            templateUrl: 'resources/js/header-display/mainSlogan.html',\r\n            controller: ['$scope', '$timeout',\r\n                function ($scope, $timeout) {\r\n                    $timeout(function () {\r\n                        $scope.faded=true;\r\n                    }, 1200);\r\n                }]\r\n        }\r\n    });\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/main/webapp/resources/js/header-display/ngMainSlogan.js\n ** module id = 27\n ** module chunks = 0\n **/","/**\r\n * Created by hasiermetal on 19/06/15.\r\n */\r\naporlaofertaApp\r\n    .directive('ngImageUploader', function () {\r\n        return {\r\n            restrict: 'A',\r\n            scope: {\r\n                finalUrl: '=',\r\n                reset: '=',\r\n                alreadyUploadedImage: '='\r\n            },\r\n            templateUrl: 'resources/js/uploader/imageUpload.html',\r\n            controller: ['$rootScope', '$scope', 'configService', '$timeout', function ($rootScope, $scope, configService, $timeout) {\r\n                $scope.uploader = {};\r\n                $scope.displayThumbnail = true;\r\n                $scope.invalidSize = false;\r\n                $scope.invalidImage = false;\r\n                $scope.maxImageSize = configService.getEndpoint('max.image.size');\r\n                $scope.alreadyUploadedImage=\"\";\r\n                $scope.fileAdded = function (file) {\r\n                    var fileReader = new FileReader();\r\n                    fileReader.onload = function (event) {\r\n                        var img = new Image();\r\n                        $scope.alreadyUploadedImage=\"\";\r\n                        img.onerror = function () {\r\n                            $scope.displayInvalidImageMessage();\r\n                            return false;\r\n                        };\r\n                        img.onload = function () {\r\n                            if (this.width > $scope.maxImageSize ||\r\n                                this.height > $scope.maxImageSize\r\n                                ) {\r\n                                $scope.displayInvalidImageSizeMessage();\r\n                                return false;\r\n                            }\r\n                            $scope.uploader.flow.upload();\r\n                            $scope.defaultThumbnailView();\r\n                        };\r\n                        img.src = event.target.result;\r\n                    };\r\n                    fileReader.readAsDataURL(file.file);\r\n                };\r\n\r\n                $scope.deleteImage=function(){\r\n                    $scope.alreadyUploadedImage = \"\";\r\n                    $scope.uploader.flow.cancel();\r\n                }\r\n\r\n                $scope.changeImage=function(){\r\n                    $scope.alreadyUploadedImage = \"\";\r\n                }\r\n\r\n                $scope.alreadyUploaded = function () {\r\n                    return $scope.alreadyUploadedImage !== \"\";\r\n                }\r\n\r\n                $scope.defaultThumbnailView = function () {\r\n                    $scope.displayThumbnail = true;\r\n                    $scope.invalidImage = false;\r\n                    $scope.invalidSize = false;\r\n                };\r\n\r\n                $scope.filesIsUploaded = function (message) {\r\n                    var responseResult = JSON.parse(message);\r\n                    if (responseResult.code == 0) {\r\n                        $scope.finalUrl = responseResult.description;\r\n                    }\r\n                    else {\r\n                        $scope.handleUploadError(responseResult);\r\n                    }\r\n                };\r\n                $scope.handleUploadError = function (error) {\r\n                    $rootScope.$broadcast('serverResponse', error);\r\n                };\r\n                $scope.$watch('finalUrl', function (newValue, oldValue) {\r\n                    if (newValue === \"\" || typeof newValue === 'undefined') {\r\n                        $scope.uploader.flow.cancel();\r\n                    }\r\n                });\r\n                $scope.$watch('reset', function () {\r\n                    if ($scope.reset==true) {\r\n                        $scope.deleteImage();\r\n                    }\r\n                });\r\n\r\n                $scope.isInvalidThumbnailShown = function () {\r\n                    return $scope.invalidImage || $scope.invalidSize;\r\n                };\r\n\r\n                $scope.displayInvalidImageSizeMessage = function () {\r\n                    $scope.defaultThumbnailView();\r\n                    $scope.invalidSize = true;\r\n                    $scope.displayThumbnail = false;\r\n                    $timeout(function () {\r\n                        $scope.uploader.flow.cancel();\r\n                    }, 500);\r\n                };\r\n                $scope.displayInvalidImageMessage = function () {\r\n                    $scope.defaultThumbnailView();\r\n                    $scope.invalidImage = true;\r\n                    $scope.displayThumbnail = false;\r\n                    $timeout(function () {\r\n                        $scope.uploader.flow.cancel();\r\n                    }, 500);\r\n                }\r\n            }]\r\n        }\r\n    });\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/main/webapp/resources/js/uploader/ngImageUploadDirective.js\n ** module id = 28\n ** module chunks = 0\n **/","/**\r\n * Created by hasiermetal on 22/06/15.\r\n */\r\naporlaofertaApp\r\n    .directive('ngResponseFromServer', function () {\r\n        return {\r\n            restrict: 'A',\r\n            templateUrl: 'resources/js/response/serverResponse.html',\r\n            scope: {\r\n                theResponse: '='\r\n            }\r\n        }\r\n    });\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/main/webapp/resources/js/response/ngResponseFromServer.js\n ** module id = 29\n ** module chunks = 0\n **/","/**\r\n * Created by hasiermetal on 16/03/14.\r\n */\r\naporlaofertaApp\r\n    .directive('ngSocialMedia', function () {\r\n        return {\r\n            restrict: 'A',\r\n            templateUrl: 'resources/js/social/socialMedia.html',\r\n            scope: {\r\n                shareUrl: '=',\r\n                shareText: '='\r\n            },\r\n            controller: ['$scope',\r\n                function ($scope) {\r\n                    $scope.$watch('shareUrl', function () {\r\n                        $scope.facebookUrl = \"https://www.facebook.com/sharer/sharer.php?u=\" + $scope.shareUrl;\r\n                        $scope.twitterUrl = \"https://twitter.com/intent/tweet?url=\" +\r\n                            $scope.shareUrl + \"&text=\" + encodeURIComponent($scope.shareText); + \"&via=aporlaoferta\";\r\n                        $scope.googlePlusUrl = \"https://plus.google.com/share?url=\" + $scope.shareUrl;\r\n                        $scope.whatsappHref = $scope.buildWhatsappUrl();\r\n                    });\r\n\r\n                    $scope.$watch('shareText', function () {\r\n                        $scope.twitterUrl = \"https://twitter.com/intent/tweet?url=\" +\r\n                            $scope.shareUrl + \"&text=\" + encodeURIComponent($scope.shareText); + \"&via=aporlaoferta\";\r\n                        $scope.whatsappHref = $scope.buildWhatsappUrl();\r\n                    });\r\n\r\n                    $scope.buildWhatsappUrl = function(){\r\n                         return \"whatsapp://send?text=_\"+encodeURIComponent($scope.shareText.replace(/_/, ' ')+\"_ \"+$scope.shareUrl);\r\n                    }\r\n                }]\r\n\r\n        }\r\n    });\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/main/webapp/resources/js/social/ngSocialMediaDirective.js\n ** module id = 30\n ** module chunks = 0\n **/","/**\r\n * Created by hasiermetal on 14/05/16.\r\n */\r\naporlaofertaApp\r\n    .directive('ngRedirectComponents', function () {\r\n        return {\r\n            restrict: 'A',\r\n            templateUrl: 'resources/js/error/redirectComponents.html'\r\n        }\r\n    });\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/main/webapp/resources/js/error/ngRedirectComponents.js\n ** module id = 31\n ** module chunks = 0\n **/","/**\r\n * Created by hasiermetal on 16/03/14.\r\n */\r\naporlaofertaApp\r\n    .directive('ngPasswordForgotten', function () {\r\n        return {\r\n            restrict: 'A',\r\n            templateUrl: 'resources/js/account/password-forgotten/forgottenForm.html',\r\n            scope: {\r\n                uuid: '=',\r\n                nick: '=',\r\n                customCloseCallback: '='\r\n            },\r\n            controller: ['$scope', '$http', 'requestManager', 'configService', 'alertService','$timeout','accountHelper',\r\n                function ($scope, http, requestManager, configService, alertService,$timeout,accountHelper) {\r\n                    $scope.validPassword = accountHelper.validPassword;\r\n                    $scope.theUser = {userNickname: $scope.nick, track: $scope.uuid};\r\n                    $scope.updatePassword = function (theUser) {\r\n                        $scope.processing=true;\r\n                        requestManager.makePostCall(theUser, {}, configService.getEndpoint('password.forgotten'))\r\n                            .success(function (data) {\r\n                                $scope.processPasswordResponse(data)\r\n                            }).error(function () {\r\n                                alertService.sendDefaultErrorMessage();\r\n                            }).finally(function(){\r\n                                $scope.processing=false;\r\n                            });\r\n                        $scope.theUser = {userNickname: $scope.nick, track: $scope.uuid};\r\n                    }\r\n                    $scope.processPasswordResponse = function (data) {\r\n                        alertService.sendErrorMessage(data.descriptionEsp);\r\n                        if(alertService.isAllOk(data)){\r\n                            $timeout(function () {\r\n                                window.location.replace(\"/\");\r\n                            }, 2000);\r\n                        }\r\n                    }\r\n                }]\r\n        }\r\n    });\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/main/webapp/resources/js/account/password-forgotten/ngPasswordForgottenDirective.js\n ** module id = 32\n ** module chunks = 0\n **/","require(\"./loader.scss\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/main/webapp/resources/sass/loader.js\n ** module id = 33\n ** module chunks = 0\n **/"],"sourceRoot":""}