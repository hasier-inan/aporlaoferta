<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:security="http://www.springframework.org/schema/security"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/security
                           http://www.springframework.org/schema/security/spring-security-3.2.xsd">


    <security:http auto-config="true" use-expressions="true">
        <!-- Restrict URLs based on role -->
        <security:intercept-url method="GET" pattern="/admin**" access="hasRole('ROLE_ADMIN')"/>
        <security:intercept-url method="POST" pattern="/createCompany**" access="hasRole('ROLE_ADMIN')"/>
        <security:intercept-url method="POST" pattern="/updateUser**" access="hasRole('ROLE_USER')"/>
        <security:intercept-url method="POST" pattern="/createComment**" access="hasRole('ROLE_USER')"/>
        <security:intercept-url method="POST" pattern="/updateComment**" access="hasRole('ROLE_USER')"/>
        <security:intercept-url method="POST" pattern="/createOffer**" access="hasRole('ROLE_USER')"/>
        <security:intercept-url method="POST" pattern="/updateOffer**" access="hasRole('ROLE_USER')"/>
        <security:intercept-url method="POST" pattern="/votePositive**" access="hasRole('ROLE_USER')"/>
        <security:intercept-url method="POST" pattern="/voteNegative**" access="hasRole('ROLE_USER')"/>
        <security:intercept-url pattern="favicon.ico" access="permitAll" />
        <!-- access denied page -->
        <security:access-denied-handler error-page="/403"/>

        <!-- Override default login and logout pages -->
        <security:form-login login-page="/login"
                             default-target-url="/"
                             authentication-failure-url="/login?error"
                             username-parameter="username"
                             password-parameter="password"/>
        <security:logout logout-success-url="/"/>
        <!-- enable csrf protection -->
        <security:csrf/>
    </security:http>

    <security:authentication-manager>
        <security:authentication-provider>
            <security:password-encoder ref="thatEncoder"/>
            <security:jdbc-user-service data-source-ref="dataSource"
                                        users-by-username-query=
                                                "select TU_NICKNAME,TU_PWD_LOCKED,TU_ENABLED from thatuser where
                                                TU_NICKNAME=?"
                                        authorities-by-username-query=
                                                "select TUR_NICKNAME, TUR_ROLE from thatuserroles where
                                                TUR_NICKNAME =?  "/>
        </security:authentication-provider>
    </security:authentication-manager>

    <bean id="roleVoter" class="org.springframework.security.access.vote.RoleHierarchyVoter">
        <constructor-arg ref="roleHierarchy"/>
    </bean>
    <bean id="roleHierarchy" class="org.springframework.security.access.hierarchicalroles.RoleHierarchyImpl">
        <property name="hierarchy">
            <value>
                ROLE_ADMIN > ROLE_USER > ROLE_GUEST
            </value>
        </property>
    </bean>

    <bean id="thatEncoder"
          class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder">
        <constructor-arg name="strength" value="11"/>
    </bean>

</beans>